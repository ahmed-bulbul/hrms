{"version":3,"sources":["webpack:///src/app/all-modules/payroll/components/salary-view/salary-view.component.html","webpack:///src/app/all-modules/payroll/components/salary-process/salary-process-parameter.component.css","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/edit/salary-process-job-edit.component.css","webpack:///src/app/all-modules/payroll/components/element-value/create/payroll-element-value-create.component.ts","webpack:///src/app/all-modules/payroll/components/element-value/edit/payroll-element-value-edit.component.ts","webpack:///src/app/all-modules/payroll/components/element-value/create/payroll-element-value-create.component.html","webpack:///src/app/all-modules/payroll/components/element-value/show/payroll-element-value-show.component.css","webpack:///src/app/all-modules/payroll/components/element-value/show/payroll-element-value-show.component.ts","webpack:///src/app/all-modules/payroll/payroll.module.ts","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/list/salary-process-job-list.component.css","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/show/salary-process-job-show.component.css","webpack:///src/app/all-modules/payroll/components/payroll-items/payroll-items.component.ts","webpack:///src/app/all-modules/payroll/components/salary-view/salary-view.component.css","webpack:///src/app/all-modules/payroll/components/element-value/list/payroll-element-value-list.component.html","webpack:///src/app/all-modules/payroll/payroll-routing.module.ts","webpack:///src/app/all-modules/payroll/components/employee-salary/employee-salary.component.css","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/list/salary-process-job-list.component.html","webpack:///src/app/all-modules/payroll/components/salary-process/salary-process-parameter.component.html","webpack:///src/app/all-modules/payroll/service/payroll.service.ts","webpack:///src/app/all-modules/payroll/components/element-value/list/payroll-element-value-list.component.css","webpack:///src/app/all-modules/payroll/components/payroll-items/payroll-items.component.css","webpack:///src/app/all-modules/payroll/payroll.component.html","webpack:///src/app/all-modules/payroll/components/salary-process/salary-process-parameter.component.ts","webpack:///src/app/all-modules/payroll/components/employee-salary/employee-salary.component.html","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/create/salary-process-job-create.component.css","webpack:///src/app/all-modules/payroll/components/payroll-items/payroll-items.component.html","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/show/salary-process-job-show.component.html","webpack:///src/app/all-modules/payroll/components/salary-view/salary-view.component.ts","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/create/salary-process-job-create.component.ts","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/edit/salary-process-job-edit.component.html","webpack:///src/app/all-modules/payroll/components/element-value/show/payroll-element-value-show.component.html","webpack:///src/app/all-modules/payroll/components/element-value/edit/payroll-element-value-edit.component.html","webpack:///src/app/all-modules/payroll/components/employee-salary/employee-salary.component.ts","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/show/salary-process-job-show.component.ts","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/create/salary-process-job-create.component.html","webpack:///src/app/all-modules/payroll/payroll.component.css","webpack:///src/app/all-modules/payroll/components/element-value/create/payroll-element-value-create.component.css","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/list/salary-process-job-list.component.ts","webpack:///src/app/all-modules/payroll/payroll.component.ts","webpack:///src/app/all-modules/payroll/components/element-value/list/payroll-element-value-list.component.ts","webpack:///src/app/all-modules/payroll/components/salary-process/batch-job/edit/salary-process-job-edit.component.ts","webpack:///src/app/all-modules/payroll/components/element-value/edit/payroll-element-value-edit.component.css"],"names":["PayrollElementValueCreateComponent","formBuilder","datePipe","payrollService","route","router","spinnerService","baseUrl","initializeForm","setFormDefaultValues","initButtonsRippleEffect","loadData","myForm","group","empTitle","elementTitle","elementAmount","activeStartDate","activeEndDate","isActive","dt","Date","year","getFullYear","reset","createRipple","e","button","currentTarget","x","clientX","target","getBoundingClientRect","left","y","clientY","top","ripple","document","createElement","style","cssText","appendChild","setTimeout","remove","elements","querySelectorAll","forEach","element","addEventListener","apiURL","formData","value","rActiveOperation","transform","toString","slice","show","sendPostRequest","subscribe","response","console","log","hide","navigate","relativeTo","error","queryParams","abc","selector","template","PayrollElementValueEditComponent","myFormData","getFormData","id","dateStr_DD_MM_YYYY","dateComponents","split","snapshot","params","rEntityName","rActiveOpetation","sendGetRequest","patchValue","convertToISODateString","sendPutRequest","PayrollElementValueShowComponent","titleDecode","HRA","MDL_ALW","OT_ALW","LTA","EA","UCA_ALW","FAMILY_ALW","EDA","PRJ_ALW","HOSTEL_ALW","CHILD_EDU_ALW","CHILD_HOSTEL_ALW","PROF_ALW","PayrollModule","declarations","imports","forRoot","schemas","PayrollItemsComponent","allModuleService","toastr","urlAdd","urlOver","urlDeduct","allAddPayroll","allOverPayroll","allDeductPayroll","getAddPayroll","getOverpayroll","getDeductPayroll","addPayrollForm","addPayrollName","required","addPayrollCategory","addPayrollUnit","editPayrollForm","editPayrollName","editPayrollCategory","editPayrollUnit","addOverForm","addOverName","addOverRate","editOverForm","editOverName","editOverRate","addDeductForm","addDeductName","addDeductUnit","editDeductForm","editDeductName","editDeductunit","get","data","$","DataTable","clear","valid","obj","name","category","unitCost","add","modal","success","editAddId","update","data1","index","findIndex","item","toSetValues","setValue","tempAddId","rate","editOverId","tempOverId","editDeductId","tempDeductId","routes","path","component","children","PayrollRoutingModule","forChild","exports","PayrollService","http","pipe","post","put","empId","providedIn","PayrollSalaryProcessComponent","basicForm","month","totalPayableDay","totalDisburseDay","fromDate","toDate","procFromDate","procToDate","now","getMonth","getDate","date","firstDay","lastDay","parseInt","monthFirstDayDate","daysInMonth","daysInThisMonth","controls","getMonthFirstDate","getMonthLastDate","SalaryViewComponent","payslipData","loadPayslipData","payslipId","SalaryProcessJobCreateComponent","EmployeeSalaryComponent","listData","pngConfig","pageNum","pageSize","totalItem","pageSizes","pngDiplayLastSeq","itemsPerPage","currentPage","totalItems","myFromGroup","bindFromFloatingLabel","getListData","self","length","on","parents","toggleClass","type","trigger","find","keyup","keyCode","getSearchData","val","myFromDateIso","srcFromDate","myToDateIso","srcToDate","srcEmpName","srcEmpCode","page","getUserQueryParams","objectList","setDisplayLastSequence","event","SalaryProcessJobShowComponent","SalaryProcessJobListComponent","everyFiveSeconds","configPgn","pgnDiplayLastSeq","subscription","unsubscribe","PayrollComponent","ngZone","window","onresize","run","innerHeight","getScreenHeight","PayrollElementValueListComponent","dataId","sendDeleteRequest","SalaryProcessJobEditComponent"],"mappings":"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","file":"payroll-payroll-module-es5.js","sourcesContent":["export default \"<!-- Page Content -->\\r\\n<div class=\\\"content container-fluid\\\">\\r\\n\\r\\n    <!-- Page Header -->\\r\\n    <div class=\\\"page-header\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <h3 class=\\\"page-title\\\">Payslip</h3>\\r\\n                <ul class=\\\"breadcrumb\\\">\\r\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n                    <li class=\\\"breadcrumb-item active\\\">Payslip</li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\r\\n                <div class=\\\"btn-group btn-group-sm\\\">\\r\\n                    <button class=\\\"btn btn-white\\\">CSV</button>\\r\\n                    <button class=\\\"btn btn-white\\\">PDF</button>\\r\\n                    <button class=\\\"btn btn-white\\\"><i class=\\\"fa fa-print fa-lg\\\"></i> Print</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /Page Header -->\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"payslip-title\\\">{{payslipData.payslipNarration}}</h4>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-6 m-b-20\\\">\\r\\n                            <!--<img src=\\\"assets/img/logo2.png\\\" class=\\\"inv-logo\\\" alt=\\\"\\\"> -->\\r\\n                            <ul class=\\\"list-unstyled mb-0\\\">\\r\\n                                <li>{{payslipData.orgName}}</li>\\r\\n                                <li>{{payslipData.orgAddress}}</li>\\r\\n                                <li>{{payslipData.orgAddressLine2}}</li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6 m-b-20\\\">\\r\\n                            <div class=\\\"invoice-details\\\">\\r\\n                                <h3 class=\\\"text-uppercase\\\">{{payslipData.payslipNum}}</h3>\\r\\n                                <ul class=\\\"list-unstyled\\\">\\r\\n                                    <li>Salary Month: <span>{{payslipData.monthFullName}}, {{payslipData.salaryYear}}</span></li>\\r\\n                                </ul>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12 m-b-20\\\">\\r\\n                            <ul class=\\\"list-unstyled\\\">\\r\\n                                <li>\\r\\n                                    <h5 class=\\\"mb-0\\\"><strong>{{payslipData.empName}}</strong></h5>\\r\\n                                </li>\\r\\n                                <li><span>{{payslipData.empDesignation}}</span></li>\\r\\n                                <li>Employee Code: {{payslipData.empCode}}</li>\\r\\n                                <li>Joining Date: {{payslipData.joiningDate}}</li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div>\\r\\n                                <h4 class=\\\"m-b-10\\\"><strong>Earnings</strong></h4>\\r\\n                                <table class=\\\"table table-bordered\\\">\\r\\n                                    <tbody>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <strong>Basic Pay</strong> \\r\\n                                                <span class=\\\"float-right\\\">{{payslipData.basicSalary | number : '1.2-2'}}</span>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <strong>House Rent Allowance</strong> \\r\\n                                                <span class=\\\"float-right\\\">{{payslipData.houseRentAlwAmt | number : '1.2-2'}}</span>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td><strong>Conveyance</strong> <span class=\\\"float-right\\\">0.00</span></td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td><strong>Other Allowance</strong> <span class=\\\"float-right\\\">0.00</span></td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <strong>Total Earnings</strong> \\r\\n                                                <span class=\\\"float-right\\\"><strong>{{payslipData.totalEarnings | number : '1.2-2'}}</strong></span>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                            <div>\\r\\n                                <h4 class=\\\"m-b-10\\\"><strong>Deductions</strong></h4>\\r\\n                                <table class=\\\"table table-bordered\\\">\\r\\n                                    <tbody>\\r\\n                                        <tr>\\r\\n                                            <td><strong>AIT</strong> <span class=\\\"float-right\\\">0.00</span></td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td><strong>Food Deduction</strong> <span class=\\\"float-right\\\">0.00</span></td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td><strong>Absent Deduction</strong> <span class=\\\"float-right\\\">{{payslipData.absentDeduction | number : '1.2-2'}}</span></td>\\r\\n                                        </tr>\\r\\n                                        <tr>\\r\\n                                            <td>\\r\\n                                                <strong>Total Deductions</strong>\\r\\n                                                <span class=\\\"float-right\\\"><strong>{{payslipData.totalDeductions | number : '1.2-2'}}</strong></span>\\r\\n                                            </td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                            <p><strong>Net Pay: {{payslipData.netPayable | number : '1.2-2'}}</strong> ( {{payslipData.netPayableStr}} )</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Page Content -->\";","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/* ================= Purpale Color =========================== */\\r\\n\\r\\n\\r\\n\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n\\r\\n\\r\\n\\r\\n/* ---------------------- Ripple Effect Button // Start --------------------- */\\r\\n\\r\\n\\r\\n\\r\\n/* .btn-ripple {\\r\\n\\tposition: relative;\\r\\n\\tdisplay: inline-block;\\r\\n\\tpadding: 12px 36px;\\r\\n\\tmargin: 10px 0;\\r\\n\\tcolor: #fff;\\r\\n\\ttext-decoration: none;\\r\\n\\ttext-transform: uppercase;\\r\\n\\tfont-size: 18px;\\r\\n\\tletter-spacing: 2px;\\r\\n\\tborder-radius: 40px;\\r\\n\\toverflow: hidden;\\r\\n\\tbackground: linear-gradient(90deg, #0162c8, #55e7fc);\\r\\n} */\\r\\n\\r\\n\\r\\n\\r\\n.btn-ripple {\\r\\n\\tposition: relative;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.btn-ripple span {\\r\\n\\tposition: absolute;\\r\\n\\tbackground: #fff;\\r\\n\\ttransform: translate(-50%, -50%);\\r\\n\\tpointer-events: none;\\r\\n\\tborder-radius: 50%;\\r\\n\\t-webkit-animation: animate 1s linear infinite;\\r\\n\\t        animation: animate 1s linear infinite;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n@-webkit-keyframes animate {\\r\\n\\t0% \\r\\n\\t{\\r\\n\\t\\twidth: 0px;\\r\\n\\t\\theight: 0px;\\r\\n\\t\\topacity: 0.5;\\r\\n\\t}\\r\\n\\t100%\\r\\n\\t{\\r\\n\\t\\twidth: 500px;\\r\\n\\t\\theight: 500px;\\r\\n\\t\\topacity: 0;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n@keyframes animate {\\r\\n\\t0% \\r\\n\\t{\\r\\n\\t\\twidth: 0px;\\r\\n\\t\\theight: 0px;\\r\\n\\t\\topacity: 0.5;\\r\\n\\t}\\r\\n\\t100%\\r\\n\\t{\\r\\n\\t\\twidth: 500px;\\r\\n\\t\\theight: 500px;\\r\\n\\t\\topacity: 0;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/* ---------------------- Ripple Effect Button // End ------------------------- */\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbGFyeS1wcm9jZXNzLXBhcmFtZXRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtBQUNkOzs7O0FBSUEsZ0VBQWdFOzs7O0FBQ2hFO0NBQ0MscUJBQXFCO0NBQ3JCLDhCQUE4QjtJQUMzQixnQkFBZ0I7QUFDcEI7Ozs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixVQUFVO0NBRVYsMkVBQTJFO0NBQzNFOzs7O0FBSUQsK0VBQStFOzs7O0FBQy9FOzs7Ozs7Ozs7Ozs7O0dBYUc7Ozs7QUFDSDtDQUNDLGtCQUFrQjtDQUNsQixnQkFBZ0I7QUFDakI7Ozs7QUFFQTtDQUNDLGtCQUFrQjtDQUNsQixnQkFBZ0I7Q0FDaEIsZ0NBQWdDO0NBQ2hDLG9CQUFvQjtDQUNwQixrQkFBa0I7Q0FDbEIsNkNBQXFDO1NBQXJDLHFDQUFxQztBQUN0Qzs7OztBQUNBO0NBQ0M7O0VBRUMsVUFBVTtFQUNWLFdBQVc7RUFDWCxZQUFZO0NBQ2I7Q0FDQTs7RUFFQyxZQUFZO0VBQ1osYUFBYTtFQUNiLFVBQVU7Q0FDWDtBQUNEOzs7O0FBYkE7Q0FDQzs7RUFFQyxVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7Q0FDYjtDQUNBOztFQUVDLFlBQVk7RUFDWixhQUFhO0VBQ2IsVUFBVTtDQUNYO0FBQ0Q7Ozs7QUFDQSxpRkFBaUYiLCJmaWxlIjoic2FsYXJ5LXByb2Nlc3MtcGFyYW1ldGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufVxyXG5cclxuXHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PSBQdXJwYWxlIENvbG9yID09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5pbnB1dC5mb3JtLWNvbnRyb2wsIHNlbGVjdC5mb3JtLWNvbnRyb2wsIHRleHRhcmVhLmZvcm0tY29udHJvbCB7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNjY3ZWVhO1xyXG5cdGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzY2N2VlYTtcclxuICAgIGJveC1zaGFkb3c6IG5vbmU7IFxyXG59XHJcblxyXG4uZm9ybS1jb250cm9sOmZvY3VzIHtcclxuXHRib3JkZXItY29sb3I6ICM3MDVDQkE7XHJcblx0b3V0bGluZTogMDtcclxuXHQtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTtcclxuXHRib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiKDAgMCAwIC8gOCUpLCAwIDAgOHB4IHJnYigxMDIgMTc1IDIzMyAvIDYwJSk7IFxyXG4gfVxyXG5cclxuXHJcblxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFJpcHBsZSBFZmZlY3QgQnV0dG9uIC8vIFN0YXJ0IC0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4vKiAuYnRuLXJpcHBsZSB7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHRwYWRkaW5nOiAxMnB4IDM2cHg7XHJcblx0bWFyZ2luOiAxMHB4IDA7XHJcblx0Y29sb3I6ICNmZmY7XHJcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0Zm9udC1zaXplOiAxOHB4O1xyXG5cdGxldHRlci1zcGFjaW5nOiAycHg7XHJcblx0Ym9yZGVyLXJhZGl1czogNDBweDtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgIzAxNjJjOCwgIzU1ZTdmYyk7XHJcbn0gKi9cclxuLmJ0bi1yaXBwbGUge1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4uYnRuLXJpcHBsZSBzcGFuIHtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcclxuXHRib3JkZXItcmFkaXVzOiA1MCU7XHJcblx0YW5pbWF0aW9uOiBhbmltYXRlIDFzIGxpbmVhciBpbmZpbml0ZTtcclxufVxyXG5Aa2V5ZnJhbWVzIGFuaW1hdGUge1xyXG5cdDAlIFxyXG5cdHtcclxuXHRcdHdpZHRoOiAwcHg7XHJcblx0XHRoZWlnaHQ6IDBweDtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHR9XHJcblx0MTAwJVxyXG5cdHtcclxuXHRcdHdpZHRoOiA1MDBweDtcclxuXHRcdGhlaWdodDogNTAwcHg7XHJcblx0XHRvcGFjaXR5OiAwO1xyXG5cdH1cclxufVxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFJpcHBsZSBFZmZlY3QgQnV0dG9uIC8vIEVuZCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzYWxhcnktcHJvY2Vzcy1qb2ItZWRpdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { DatePipe } from \"@angular/common\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { environment } from 'src/environments/environment';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { PayrollService } from '../../../service/payroll.service';\n\ndeclare const $: any;\n@Component({\n  selector: 'app-payroll-element-value-create',\n  templateUrl: './payroll-element-value-create.component.html',\n  styleUrls: ['./payroll-element-value-create.component.css']\n})\nexport class PayrollElementValueCreateComponent implements OnInit {\n\n  public baseUrl = environment.baseUrl;\n  public myForm: FormGroup;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private payrollService: PayrollService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private spinnerService: NgxSpinnerService\n    ) {}\n\n\n  ngOnInit(): void {\n\n    this.initializeForm();\n    this.setFormDefaultValues();\n    this.initButtonsRippleEffect();\n    this.loadData();\n  \n  }\n\n\n  initializeForm(){\n\n    this.myForm = this.formBuilder.group({\n      empTitle: [\"\"],\n      elementTitle: [\"\"],\n      elementAmount: [\"\"],\n      activeStartDate: [\"\"],\n      activeEndDate: [\"\"],\n      isActive: [\"\"],\n    });\n\n  }\n\n  setFormDefaultValues(){\n\n    var dt = new Date();\n    var year = dt.getFullYear();\n\n    // // multiple\n    // this.myForm.patchValue({\n    //   year: year,\n    // });\n    // // single\n    // this.myForm.controls.year.setValue(year);\n\n  }\n\n \n  resetFormValues(){\n\n    this.myForm.reset();\n    this.setFormDefaultValues();\n    \n  }\n\n \n  initButtonsRippleEffect(){\n    var createRipple = function(e){\n\n      const button = e.currentTarget;\n\n      let x = e.clientX - e.target.getBoundingClientRect().left;\n      let y = e.clientY - e.target.getBoundingClientRect().top;\n\n        // Create span element\n        let ripple = document.createElement(\"span\");\n        // Position the span element\n        ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 1s linear infinite;\";\n        ripple.style.left = `${x}px`;\n        ripple.style.top = `${y}px`;\n\n        // Add span to the button \n        button.appendChild(ripple);\n\n        // Remove span after 0.3s\n        setTimeout(() => {\n              ripple.remove();\n        }, 1000);\n  \n    }\n\n    const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\n    elements.forEach(element => {\n      element.addEventListener('click', function(e){\n        createRipple(e);\n      });\n    });\n\n  }\n\n\n\n\n  myFormSubmit() {\n    \n    let apiURL = this.baseUrl + \"/api/payrollElValue/create\";\n\n    let formData: any = {};\n    formData = this.myForm.value\n    formData.rActiveOperation = \"Create\";\n    // process date\n    formData.activeStartDate = (formData.activeStartDate) ? this.datePipe.transform(formData.activeStartDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n    formData.activeEndDate = (formData.activeEndDate) ? this.datePipe.transform(formData.activeEndDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n\n    this.spinnerService.show();\n    this.payrollService.sendPostRequest(apiURL, formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.spinnerService.hide();  \n        this.router.navigate([\"/payroll/element-value/list\"], {relativeTo: this.route});\n      },\n      (error) => {\n        console.log(error);\n        this.spinnerService.hide();  \n      }\n    );\n\n\n  }\n\n\n\n  loadData(){\n\n    let apiURL = this.baseUrl + \"/salaryProcess/start\";\n\n    let queryParams: any = {};\n    queryParams.abc = \"OK\";\n\n    // this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\n    //   (response: any) => {\n    //   console.log(response);\n    //   },\n    //   (error) => console.log(error)\n    // );\n\n\n  }\n\n\n \n\n\n\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { DatePipe } from \"@angular/common\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { PayrollService } from '../../../service/payroll.service';\n\n@Component({\n  selector: 'app-payroll-element-value-edit',\n  templateUrl: './payroll-element-value-edit.component.html',\n  styleUrls: ['./payroll-element-value-edit.component.css']\n})\nexport class PayrollElementValueEditComponent implements OnInit, OnDestroy {\n\n\n  public baseUrl = environment.baseUrl;\n  public myForm: FormGroup;\n\n  public myFormData: any = {};\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private payrollService: PayrollService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private spinnerService: NgxSpinnerService\n    ) {}\n\n\n  ngOnInit(): void {\n\n    this.initializeForm();\n    this.setFormDefaultValues();\n    this.initButtonsRippleEffect();\n    this.getFormData();\n  \n  }\n\n  ngOnDestroy(): void {\n    //\n  }\n\n\n  initializeForm(){\n\n    this.myForm = this.formBuilder.group({\n      id: [\"\"],\n      empTitle: [\"\"],\n      elementTitle: [\"\"],\n      elementAmount: [\"\"],\n      activeStartDate: [\"\"],\n      activeEndDate: [\"\"],\n      isActive: [\"\"],\n    });\n\n  }\n\n  setFormDefaultValues(){\n    //\n  }\n\n  resetFormValues(){\n\n    this.myForm.reset();\n    this.setFormDefaultValues();\n    \n  }\n\n  initButtonsRippleEffect(){\n    var createRipple = function(e){\n\n      const button = e.currentTarget;\n\n      let x = e.clientX - e.target.getBoundingClientRect().left;\n      let y = e.clientY - e.target.getBoundingClientRect().top;\n\n        // Create span element\n        let ripple = document.createElement(\"span\");\n        // Position the span element\n        ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 1s linear infinite;\";\n        ripple.style.left = `${x}px`;\n        ripple.style.top = `${y}px`;\n\n        // Add span to the button \n        button.appendChild(ripple);\n\n        // Remove span after 0.3s\n        setTimeout(() => {\n              ripple.remove();\n        }, 1000);\n  \n    }\n\n    const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\n    elements.forEach(element => {\n      element.addEventListener('click', function(e){\n        createRipple(e);\n      });\n    });\n\n  }\n\n\n\n  convertToISODateString(dateStr_DD_MM_YYYY) {\n      let dateComponents = dateStr_DD_MM_YYYY.split('-');\n      return dateComponents[2] + \"-\" + dateComponents[1] + dateComponents[0];\n  }\n\n\n  /**\n   * Read form data from API\n   */\n  getFormData(){\n\n    let id =  this.route.snapshot.params.id;\n    let apiURL = this.baseUrl + \"/api/payrollElValue/get/\" + id;\n\n    let queryParams: any = {};\n    queryParams.rEntityName = \"PayrollElementValue\";\n    queryParams.rActiveOpetation = \"read\";\n\n    this.spinnerService.show();\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\n      (response: any) => {\n        this.myFormData = response;\n        // process date fields\n        this.myFormData.activeStartDate = (this.myFormData.activeStartDate) ? this.datePipe.transform(this.myFormData.activeStartDate,\"dd-MM-yyyy\") : null;\n        this.myFormData.activeEndDate = (this.myFormData.activeEndDate) ? this.datePipe.transform(this.myFormData.activeEndDate,\"dd-MM-yyyy\") : null;\n        this.spinnerService.hide();\n        this.myForm.patchValue(this.myFormData);  \n      },\n      (error) => {\n        console.log(error)\n      } \n    );\n\n\n  }\n\n  /**\n   * Save form data\n   */\n  saveUpdatedFormData() {\n    \n    let apiURL = this.baseUrl + \"/api/payrollElValue/update/\" + this.myForm.value.id;\n    console.log(apiURL);\n\n    let formData: any = {};\n    formData = this.myForm.value\n    formData.rEntityName = \"PayrollElementValue\";\n    formData.rActiveOperation = \"update\";\n    // process date fields\n    formData.activeStartDate = (formData.activeStartDate) ? this.datePipe.transform( this.convertToISODateString(formData.activeStartDate),\"yyyy-MM-dd\") : null;\n    formData.activeEndDate = (formData.activeEndDate) ? this.datePipe.transform( this.convertToISODateString(formData.activeEndDate), \"yyyy-MM-dd\") : null;\n\n    this.spinnerService.show();\n    this.payrollService.sendPutRequest(apiURL, formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.spinnerService.hide();  \n        this.router.navigate([\"/payroll/element-value/list\"], {relativeTo: this.route});\n      },\n      (error) => {\n        console.log(error);\n        this.spinnerService.hide();  \n      }\n    );\n\n\n  }\n\n\n\n\n\n}\n","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Payroll Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Home</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\">Payroll Element</li>\\n                    <li class=\\\"breadcrumb-item active\\\">Create</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <a class=\\\"btn add-btn\\\" routerLink=\\\"/payroll/element-value/list\\\"><i class=\\\"fa fa-share\\\"></i> Back To List</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\"> -->\\n                    <!-- <h4 class=\\\"card-title mb-0\\\">Payroll Item Value</h4> -->\\n                <!-- </div>  -->\\n                <div class=\\\"card-body\\\">\\n                    <form novalidate (ngSubmit)=\\\"myFormSubmit()\\\" [formGroup]=\\\"myForm\\\">\\n                        \\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Employee</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"empTitle\\\">\\n                            </div>\\n                        </div>\\n                        \\n                         <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Element Title</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <select class=\\\"form-control\\\" formControlName=\\\"elementTitle\\\">\\n                                    <option value=\\\"\\\">Select</option>\\n                                    <option value=\\\"HRA\\\">House Rent Allowance</option>\\n                                    <option value=\\\"MDL_ALW\\\">Medical Allowance</option>\\n                                    <option value=\\\"OT_ALW\\\">Overtime Allowance</option>\\n                                    <option value=\\\"LTA\\\">Leave Travel Allowance</option>\\n                                    <option value=\\\"EA\\\">Entertainment Allowance</option>\\n                                    <option value=\\\"UCA_ALW\\\">Uniform Allowance / Corporate Attire</option>\\n                                    <option value=\\\"FAMILY_ALW\\\">Family Allowance</option>\\n                                    <option value=\\\"EDA\\\">Education Allowance</option>\\n                                    <option value=\\\"PRJ_ALW\\\">Project Allowance</option>\\n                                    <option value=\\\"HOSTEL_ALW\\\">Hostel Allowance</option>\\n                                    <option value=\\\"CHILD_EDU_ALW\\\">Children's education Allowance</option>\\n                                    <option value=\\\"CHILD_HOSTEL_ALW\\\">Children's hostel Allowance</option>\\n                                    <option value=\\\"PROF_ALW\\\">Professional pursuit/research Allowance</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                      \\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Amount</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"elementAmount\\\">\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Start Date</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <div class=\\\"cal-icon\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control datetimepicker\\\" formControlName=\\\"activeStartDate\\\" bsDatepicker>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">End Date</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <div class=\\\"cal-icon\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"activeEndDate\\\" bsDatepicker>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"text-right\\\">\\n                            <a class=\\\"btn btn-warning btn-ripple\\\" routerLink=\\\"/payroll/element-value/list\\\"><i class=\\\"fa fa-share\\\"></i> Cancel</a>\\n                            &nbsp; &nbsp;\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-ripple\\\" (click)=\\\"resetFormValues()\\\">\\n                                <i class=\\\"fa fa-undo\\\" aria-hidden=\\\"true\\\"></i> Reset\\n                            </button>\\n                            &nbsp; &nbsp;\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-ripple\\\">\\n                                <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Save &nbsp;&nbsp;&nbsp;\\n                            </button>\\n                        </div>\\n\\n                       \\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n<!-- /Page Content -->\\n\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\";","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/* ================= Purpale Color =========================== */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#formERP fieldset.fieldsetBorder {\\r\\n\\tborder: 1px solid;\\r\\n\\tborder-color: rgba(31, 31, 31, 0.25); /*1f1f1f*/\\r\\n\\tborder-radius: 5px;\\r\\n\\tmargin: 1px;\\r\\n\\tmargin-bottom: 7px;\\r\\n\\tpadding-left: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#formERP fieldset.fieldsetWithoutBorder {\\r\\n\\tmargin-bottom: 7px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#formERP fieldset legend {\\r\\n\\t/* border: 1px solid; */\\r\\n\\t/* border-color: rgba(31, 31, 31, 0.25); */\\r\\n\\twidth: auto;\\r\\n\\tborder-radius: 5px;\\r\\n    font-size: 15px;\\r\\n    padding-left: 5px;\\r\\n    padding-right: 5px;\\r\\n\\tmargin-left: 7px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#formERP .logBox .form-group {\\r\\n\\tfloat: left;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#formERP .logBox .form-group label {\\r\\n\\tmin-width: 170px;\\r\\n\\tmargin-right: 5px;\\r\\n\\tmargin-left: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#formERP .logBox .form-group div {\\r\\n\\tborder: 1px solid;\\r\\n\\tborder-radius: 3px;\\r\\n\\tborder-color: rgba(31, 31, 31, 0.25);\\r\\n\\tpadding-left: 3px;\\r\\n\\tpadding-right: 3px;\\r\\n\\tpadding-top: 1px;\\r\\n\\tpadding-bottom: 1px;\\r\\n\\tmargin-right: 5px;\\r\\n\\tmargin-left: 5px;\\r\\n\\tmin-height: 25px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n#formERP .logBox {\\r\\n\\tfont-size: 13px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheXJvbGwtZWxlbWVudC12YWx1ZS1zaG93LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2Q7Ozs7OztBQU1BLGdFQUFnRTs7Ozs7O0FBQ2hFO0NBQ0MscUJBQXFCO0NBQ3JCLDhCQUE4QjtJQUMzQixnQkFBZ0I7QUFDcEI7Ozs7OztBQUVBO0NBQ0MscUJBQXFCO0NBQ3JCLFVBQVU7Q0FFViwyRUFBMkU7Q0FDM0U7Ozs7OztBQUdEO0NBQ0MsaUJBQWlCO0NBQ2pCLG9DQUFvQyxFQUFFLFNBQVM7Q0FDL0Msa0JBQWtCO0NBQ2xCLFdBQVc7Q0FDWCxrQkFBa0I7Q0FDbEIsaUJBQWlCO0FBQ2xCOzs7Ozs7QUFDQTtDQUNDLGtCQUFrQjtBQUNuQjs7Ozs7O0FBRUE7Q0FDQyx1QkFBdUI7Q0FDdkIsMENBQTBDO0NBQzFDLFdBQVc7Q0FDWCxrQkFBa0I7SUFDZixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtDQUNyQixnQkFBZ0I7QUFDakI7Ozs7OztBQUVBO0NBQ0MsV0FBVztBQUNaOzs7Ozs7QUFFQTtDQUNDLGdCQUFnQjtDQUNoQixpQkFBaUI7Q0FDakIsZ0JBQWdCO0FBQ2pCOzs7Ozs7QUFFQTtDQUNDLGlCQUFpQjtDQUNqQixrQkFBa0I7Q0FDbEIsb0NBQW9DO0NBQ3BDLGlCQUFpQjtDQUNqQixrQkFBa0I7Q0FDbEIsZ0JBQWdCO0NBQ2hCLG1CQUFtQjtDQUNuQixpQkFBaUI7Q0FDakIsZ0JBQWdCO0NBQ2hCLGdCQUFnQjtBQUNqQjs7Ozs7O0FBRUE7Q0FDQyxlQUFlO0FBQ2hCIiwiZmlsZSI6InBheXJvbGwtZWxlbWVudC12YWx1ZS1zaG93LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8qID09PT09PT09PT09PT09PT09IFB1cnBhbGUgQ29sb3IgPT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbmlucHV0LmZvcm0tY29udHJvbCwgc2VsZWN0LmZvcm0tY29udHJvbCwgdGV4dGFyZWEuZm9ybS1jb250cm9sIHtcclxuXHRib3JkZXItY29sb3I6ICM2NjdlZWE7XHJcblx0Ym9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjNjY3ZWVhO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTsgXHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG5cdGJvcmRlci1jb2xvcjogIzcwNUNCQTtcclxuXHRvdXRsaW5lOiAwO1xyXG5cdC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpO1xyXG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTsgXHJcbiB9XHJcbiBcclxuXHJcbiNmb3JtRVJQIGZpZWxkc2V0LmZpZWxkc2V0Qm9yZGVyIHtcclxuXHRib3JkZXI6IDFweCBzb2xpZDtcclxuXHRib3JkZXItY29sb3I6IHJnYmEoMzEsIDMxLCAzMSwgMC4yNSk7IC8qMWYxZjFmKi9cclxuXHRib3JkZXItcmFkaXVzOiA1cHg7XHJcblx0bWFyZ2luOiAxcHg7XHJcblx0bWFyZ2luLWJvdHRvbTogN3B4O1xyXG5cdHBhZGRpbmctbGVmdDogNXB4O1xyXG59XHJcbiNmb3JtRVJQIGZpZWxkc2V0LmZpZWxkc2V0V2l0aG91dEJvcmRlciB7XHJcblx0bWFyZ2luLWJvdHRvbTogN3B4O1xyXG59XHJcblxyXG4jZm9ybUVSUCBmaWVsZHNldCBsZWdlbmQge1xyXG5cdC8qIGJvcmRlcjogMXB4IHNvbGlkOyAqL1xyXG5cdC8qIGJvcmRlci1jb2xvcjogcmdiYSgzMSwgMzEsIDMxLCAwLjI1KTsgKi9cclxuXHR3aWR0aDogYXV0bztcclxuXHRib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcclxuXHRtYXJnaW4tbGVmdDogN3B4O1xyXG59XHJcbiBcclxuI2Zvcm1FUlAgLmxvZ0JveCAuZm9ybS1ncm91cCB7XHJcblx0ZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbiNmb3JtRVJQIC5sb2dCb3ggLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG5cdG1pbi13aWR0aDogMTcwcHg7XHJcblx0bWFyZ2luLXJpZ2h0OiA1cHg7XHJcblx0bWFyZ2luLWxlZnQ6IDVweDtcclxufVxyXG5cclxuI2Zvcm1FUlAgLmxvZ0JveCAuZm9ybS1ncm91cCBkaXYge1xyXG5cdGJvcmRlcjogMXB4IHNvbGlkO1xyXG5cdGJvcmRlci1yYWRpdXM6IDNweDtcclxuXHRib3JkZXItY29sb3I6IHJnYmEoMzEsIDMxLCAzMSwgMC4yNSk7XHJcblx0cGFkZGluZy1sZWZ0OiAzcHg7XHJcblx0cGFkZGluZy1yaWdodDogM3B4O1xyXG5cdHBhZGRpbmctdG9wOiAxcHg7XHJcblx0cGFkZGluZy1ib3R0b206IDFweDtcclxuXHRtYXJnaW4tcmlnaHQ6IDVweDtcclxuXHRtYXJnaW4tbGVmdDogNXB4O1xyXG5cdG1pbi1oZWlnaHQ6IDI1cHg7XHJcbn1cclxuXHJcbiNmb3JtRVJQIC5sb2dCb3gge1xyXG5cdGZvbnQtc2l6ZTogMTNweDtcclxufSJdfQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { DatePipe } from \"@angular/common\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { PayrollService } from '../../../service/payroll.service';\n\n\n@Component({\n  selector: 'app-payroll-element-value-show',\n  templateUrl: './payroll-element-value-show.component.html',\n  styleUrls: ['./payroll-element-value-show.component.css']\n})\nexport class PayrollElementValueShowComponent implements OnInit, OnDestroy {\n\n  public baseUrl = environment.baseUrl;\n  public myForm: FormGroup;\n\n  public myFormData: any = {};\n  \n  // translate fields\n  public titleDecode = {\n    HRA: \"House Rent Allowance\",\n    MDL_ALW: \"Medical Allowance\",\n    OT_ALW: \"Overtime Allowance\",\n    LTA: \"Leave Travel Allowance\",\n    EA: \"Entertainment Allowance\",\n    UCA_ALW: \"Uniform Allowance / Corporate Attire\",\n    FAMILY_ALW: \"Family Allowance\",\n    EDA: \"Education Allowance\",\n    PRJ_ALW: \"Project Allowance\",\n    HOSTEL_ALW: \"Hostel Allowance\",\n    CHILD_EDU_ALW: \"Children's education Allowance\",\n    CHILD_HOSTEL_ALW: \"Children's hostel Allowance\",\n    PROF_ALW: \"Professional pursuit/research Allowance\"\n  };\n   \n\n  constructor(\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private payrollService: PayrollService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private spinnerService: NgxSpinnerService\n    ) {}\n\n\n  ngOnInit(): void {\n\n    this.initializeForm();\n    this.setFormDefaultValues();\n    this.initButtonsRippleEffect();\n    this.getFormData();\n  \n  }\n\n  ngOnDestroy(): void {\n    //\n  }\n\n\n  initializeForm(){\n\n    this.myForm = this.formBuilder.group({\n      empTitle: [\"\"],\n      elementTitle: [\"\"],\n      elementAmount: [\"\"],\n      activeStartDate: [\"\"],\n      activeEndDate: [\"\"],\n      isActive: [\"\"],\n    });\n\n  }\n\n  setFormDefaultValues(){\n    //\n  }\n\n  resetFormValues(){\n\n    this.myForm.reset();\n    this.setFormDefaultValues();\n    \n  }\n\n  initButtonsRippleEffect(){\n    var createRipple = function(e){\n\n      const button = e.currentTarget;\n\n      let x = e.clientX - e.target.getBoundingClientRect().left;\n      let y = e.clientY - e.target.getBoundingClientRect().top;\n\n        // Create span element\n        let ripple = document.createElement(\"span\");\n        // Position the span element\n        ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 1s linear infinite;\";\n        ripple.style.left = `${x}px`;\n        ripple.style.top = `${y}px`;\n\n        // Add span to the button \n        button.appendChild(ripple);\n\n        // Remove span after 0.3s\n        setTimeout(() => {\n              ripple.remove();\n        }, 1000);\n  \n    }\n\n    const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\n    elements.forEach(element => {\n      element.addEventListener('click', function(e){\n        createRipple(e);\n      });\n    });\n\n  }\n\n\n\n  /**\n   * Read form data from API\n   */\n  getFormData(){\n\n    let id =  this.route.snapshot.params.id;\n    let apiURL = this.baseUrl + \"/api/payrollElValue/get/\" + id;\n\n    let queryParams: any = {};\n    queryParams.rEntityName = \"PayrollElementValue\";\n    queryParams.rActiveOpetation = \"read\";\n\n    this.spinnerService.show();\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\n      (response: any) => {\n        this.myFormData = response;\n        this.spinnerService.hide();\n        this.myForm.patchValue(this.myFormData);  \n      },\n      (error) => {\n        console.log(error)\n      } \n    );\n\n\n  }\n\n  /**\n   * Save form data\n   */\n  saveUpdatedFormData() {\n    \n    let apiURL = this.baseUrl + \"/api/payrollElValue/create\";\n\n    let formData: any = {};\n    formData = this.myForm.value\n    formData.rActiveOperation = \"Create\";\n    // process date\n    formData.activeStartDate = (formData.activeStartDate) ? this.datePipe.transform(formData.activeStartDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n    formData.activeEndDate = (formData.activeEndDate) ? this.datePipe.transform(formData.activeEndDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n\n    this.spinnerService.show();\n    this.payrollService.sendPostRequest(apiURL, formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.spinnerService.hide();  \n        this.router.navigate([\"/payroll/element-value/list\"], {relativeTo: this.route});\n      },\n      (error) => {\n        console.log(error);\n        this.spinnerService.hide();  \n      }\n    );\n\n\n  }\n\n\n\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PayrollRoutingModule } from './payroll-routing.module';\r\nimport { PayrollComponent } from './payroll.component';\r\nimport { EmployeeSalaryComponent } from './components/employee-salary/employee-salary.component';\r\nimport { SalaryViewComponent } from './components/salary-view/salary-view.component';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { PayrollItemsComponent } from './components/payroll-items/payroll-items.component';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap';\r\nimport { SharingModule } from 'src/app/sharing/sharing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { PickListModule } from 'primeng/picklist';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { SalaryProcessJobListComponent } from './components/salary-process/batch-job/list/salary-process-job-list.component';\r\nimport { SalaryProcessJobCreateComponent } from './components/salary-process/batch-job/create/salary-process-job-create.component';\r\nimport { SalaryProcessJobEditComponent } from './components/salary-process/batch-job/edit/salary-process-job-edit.component';\r\nimport { SalaryProcessJobShowComponent } from './components/salary-process/batch-job/show/salary-process-job-show.component';\r\nimport { PayrollElementValueListComponent } from './components/element-value/list/payroll-element-value-list.component';\r\nimport { PayrollElementValueShowComponent } from './components/element-value/show/payroll-element-value-show.component';\r\nimport { PayrollElementValueCreateComponent } from './components/element-value/create/payroll-element-value-create.component';\r\nimport { PayrollElementValueEditComponent } from './components/element-value/edit/payroll-element-value-edit.component';\r\nimport { PayrollSalaryProcessComponent } from './components/salary-process/salary-process-parameter.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PayrollComponent, EmployeeSalaryComponent, SalaryViewComponent, PayrollItemsComponent, PayrollSalaryProcessComponent, SalaryProcessJobListComponent, SalaryProcessJobCreateComponent, SalaryProcessJobEditComponent, SalaryProcessJobShowComponent, PayrollElementValueListComponent, PayrollElementValueShowComponent, PayrollElementValueCreateComponent, PayrollElementValueEditComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PayrollRoutingModule,\r\n    DataTablesModule,\r\n    BsDatepickerModule.forRoot(),\r\n    SharingModule,\r\n    ReactiveFormsModule,\r\n    PickListModule,\r\n    NgxPaginationModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class PayrollModule { }\r\n","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n.page-header {\\r\\n    margin-bottom: 1.1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbGFyeS1wcm9jZXNzLWpvYi1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2Q7QUFDQTtJQUNJLHFCQUFxQjtBQUN6QiIsImZpbGUiOiJzYWxhcnktcHJvY2Vzcy1qb2ItbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG5cdHBhZGRpbmc6IDMwcHg7XHJcbn1cclxuLnBhZ2UtaGVhZGVyIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEuMXJlbTtcclxufVxyXG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzYWxhcnktcHJvY2Vzcy1qb2Itc2hvdy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { AllModulesService } from \"../../../all-modules.service\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: \"app-payroll-items\",\r\n  templateUrl: \"./payroll-items.component.html\",\r\n  styleUrls: [\"./payroll-items.component.css\"],\r\n})\r\nexport class PayrollItemsComponent implements OnInit {\r\n  // dtOptions: DataTables.Settings = {};\r\n  public urlAdd: any = \"payrollAddition\";\r\n  public urlOver: any = \"payrollOvertime\";\r\n  public urlDeduct: any = \"payrollDeduction\";\r\n  public allAddPayroll: any = [];\r\n  public allOverPayroll: any = [];\r\n  public allDeductPayroll: any = [];\r\n  public addPayrollForm: FormGroup;\r\n  public addOverForm: FormGroup;\r\n  public addDeductForm: FormGroup;\r\n  public editPayrollForm: FormGroup;\r\n  public editOverForm: FormGroup;\r\n  public editDeductForm: FormGroup;\r\n  public editAddId: any;\r\n  public editOverId: any;\r\n  public editDeductId: any;\r\n  public tempAddId: any;\r\n  public tempOverId: any;\r\n  public tempDeductId: any;\r\n  constructor(\r\n    private allModuleService: AllModulesService,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //get add payroll\r\n    this.getAddPayroll();\r\n\r\n    //get over payroll\r\n    this.getOverpayroll();\r\n\r\n    //get deduct payroll\r\n    this.getDeductPayroll();\r\n\r\n    // Add payroll Form Validation And Getting Values\r\n\r\n    this.addPayrollForm = this.formBuilder.group({\r\n      addPayrollName: [\"\", [Validators.required]],\r\n      addPayrollCategory: [\"\", [Validators.required]],\r\n      addPayrollUnit: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Edit payroll Form Validation And Getting Values\r\n\r\n    this.editPayrollForm = this.formBuilder.group({\r\n      editPayrollName: [\"\", [Validators.required]],\r\n      editPayrollCategory: [\"\", [Validators.required]],\r\n      editPayrollUnit: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Add overTime Form Validation And Getting Values\r\n\r\n    this.addOverForm = this.formBuilder.group({\r\n      addOverName: [\"\", [Validators.required]],\r\n      addOverRate: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Edit overtime Form Validation And Getting Values\r\n\r\n    this.editOverForm = this.formBuilder.group({\r\n      editOverName: [\"\", [Validators.required]],\r\n      editOverRate: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Add deduction Form Validation And Getting Values\r\n\r\n    this.addDeductForm = this.formBuilder.group({\r\n      addDeductName: [\"\", [Validators.required]],\r\n      addDeductUnit: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // Edit deduction Form Validation And Getting Values\r\n\r\n    this.editDeductForm = this.formBuilder.group({\r\n      editDeductName: [\"\", [Validators.required]],\r\n      editDeductunit: [\"\", [Validators.required]],\r\n    });\r\n\r\n    // //data table configuration\r\n    // this.dtOptions = {\r\n    //   // ... skipped ...\r\n    //   dom: \"lrtip\",\r\n    // };\r\n  }\r\n\r\n  // get payroll\r\n  getAddPayroll() {\r\n    this.allModuleService.get(this.urlAdd).subscribe((data) => {\r\n      this.allAddPayroll = data;\r\n      $(\"#datatable1\").DataTable().clear();\r\n    });\r\n  }\r\n\r\n  // get overtime\r\n  getOverpayroll() {\r\n    this.allModuleService.get(this.urlOver).subscribe((data) => {\r\n      this.allOverPayroll = data;\r\n      $(\"#datatable2\").DataTable().clear();\r\n    });\r\n  }\r\n\r\n  // get deducts\r\n  getDeductPayroll() {\r\n    this.allModuleService.get(this.urlDeduct).subscribe((data) => {\r\n      this.allDeductPayroll = data;\r\n      $(\"#datatable3\").DataTable().clear();\r\n    });\r\n  }\r\n\r\n  // Add payroll Modal Api Call\r\n\r\n  addPayroll() {\r\n    if (this.addPayrollForm.valid) {\r\n      let obj = {\r\n        name: this.addPayrollForm.value.addPayrollName,\r\n        category: this.addPayrollForm.value.addPayrollCategory,\r\n        unitCost: this.addPayrollForm.value.addPayrollUnit,\r\n      };\r\n      this.allModuleService.add(obj, this.urlAdd).subscribe((data) => {});\r\n      this.getAddPayroll();\r\n      $(\"#add_addition\").modal(\"hide\");\r\n      this.addPayrollForm.reset();\r\n      this.toastr.success(\"Payroll added\", \"Success\");\r\n    }\r\n  }\r\n\r\n  // Edit payroll Modal Api Call\r\n\r\n  editPayroll() {\r\n    let obj = {\r\n      name: this.editPayrollForm.value.editPayrollName,\r\n      category: this.editPayrollForm.value.editPayrollCategory,\r\n      unitCost: this.editPayrollForm.value.editPayrollUnit,\r\n      id: this.editAddId,\r\n    };\r\n    this.allModuleService.update(obj, this.urlAdd).subscribe((data1) => {});\r\n    this.getAddPayroll();\r\n    $(\"#edit_addition\").modal(\"hide\");\r\n    this.toastr.success(\"Payroll edited\", \"Success\");\r\n  }\r\n\r\n  editAdd(value) {\r\n    this.editAddId = value;\r\n    const index = this.allAddPayroll.findIndex((item) => {\r\n      return item.id === value;\r\n    });\r\n    let toSetValues = this.allAddPayroll[index];\r\n    this.editPayrollForm.setValue({\r\n      editPayrollName: toSetValues.name,\r\n      editPayrollCategory: toSetValues.category,\r\n      editPayrollUnit: toSetValues.unitCost,\r\n    });\r\n  }\r\n\r\n  // Delete payroll Modal Api Call\r\n\r\n  deletePayroll() {\r\n    this.allModuleService\r\n      .delete(this.tempAddId, this.urlAdd)\r\n      .subscribe((data) => {\r\n        this.getAddPayroll();\r\n        $(\"#delete_addition\").modal(\"hide\");\r\n      });\r\n    this.toastr.success(\"Payroll deleted\", \"Success\");\r\n  }\r\n\r\n  // Add overtime Modal Api Call\r\n\r\n  addOver() {\r\n    if (this.addOverForm.valid) {\r\n      let obj = {\r\n        name: this.addOverForm.value.addOverName,\r\n        rate: this.addOverForm.value.addOverRate,\r\n      };\r\n      this.allModuleService.add(obj, this.urlOver).subscribe((data) => {});\r\n      this.getOverpayroll();\r\n      $(\"#add_overtime\").modal(\"hide\");\r\n      this.addOverForm.reset();\r\n      this.toastr.success(\"Overtime added\", \"Success\");\r\n    }\r\n  }\r\n\r\n  // Edit overtime Modal Api Call\r\n\r\n  editOverSubmit() {\r\n    let obj = {\r\n      name: this.editOverForm.value.editOverName,\r\n      rate: this.editOverForm.value.editOverRate,\r\n      id: this.editOverId,\r\n    };\r\n    this.allModuleService.update(obj, this.urlOver).subscribe((data1) => {});\r\n    this.getOverpayroll();\r\n    $(\"#edit_overtime\").modal(\"hide\");\r\n    this.toastr.success(\"Overtime edited\", \"Success\");\r\n  }\r\n\r\n  editOver(value) {\r\n    this.editOverId = value;\r\n    const index = this.allOverPayroll.findIndex((item) => {\r\n      return item.id === value;\r\n    });\r\n    let toSetValues = this.allOverPayroll[index];\r\n    this.editOverForm.setValue({\r\n      editOverName: toSetValues.name,\r\n      editOverRate: toSetValues.rate,\r\n    });\r\n  }\r\n\r\n  // Delete overtime Modal Api Call\r\n\r\n  deleteOver() {\r\n    this.allModuleService\r\n      .delete(this.tempOverId, this.urlOver)\r\n      .subscribe((data) => {\r\n        this.getOverpayroll();\r\n        $(\"#delete_overtime\").modal(\"hide\");\r\n      });\r\n    this.toastr.success(\"Overtime deleted\", \"Success\");\r\n  }\r\n\r\n  // Add deduction Modal Api Call\r\n\r\n  addDeducts() {\r\n    if (this.addDeductForm.valid) {\r\n      let obj = {\r\n        name: this.addDeductForm.value.addDeductName,\r\n        unitCost: this.addDeductForm.value.addDeductUnit,\r\n      };\r\n      this.allModuleService.add(obj, this.urlDeduct).subscribe((data) => {});\r\n      this.getDeductPayroll();\r\n      $(\"#add_deduction\").modal(\"hide\");\r\n      this.addDeductForm.reset();\r\n      this.toastr.success(\"Deduction added\", \"Success\");\r\n    }\r\n  }\r\n\r\n  // Edit deduction Modal Api Call\r\n\r\n  editDeductSubmit() {\r\n    let obj = {\r\n      name: this.editDeductForm.value.editDeductName,\r\n      unitCost: this.editDeductForm.value.editDeductunit,\r\n      id: this.editDeductId,\r\n    };\r\n    this.allModuleService.update(obj, this.urlDeduct).subscribe((data1) => {});\r\n    this.getDeductPayroll();\r\n    $(\"#edit_deduction\").modal(\"hide\");\r\n    this.toastr.success(\"Deducts edited\", \"Success\");\r\n  }\r\n  editDeduct(value) {\r\n    this.editDeductId = value;\r\n    const index = this.allDeductPayroll.findIndex((item) => {\r\n      return item.id === value;\r\n    });\r\n    let toSetValues = this.allDeductPayroll[index];\r\n    this.editDeductForm.setValue({\r\n      editDeductName: toSetValues.name,\r\n      editDeductunit: toSetValues.unitCost,\r\n    });\r\n  }\r\n\r\n  // Delete deduction Modal Api Call\r\n\r\n  deleteDeduct() {\r\n    this.allModuleService\r\n      .delete(this.tempDeductId, this.urlDeduct)\r\n      .subscribe((data) => {\r\n        this.getDeductPayroll();\r\n        $(\"#delete_deduction\").modal(\"hide\");\r\n      });\r\n    this.toastr.success(\"Deduction deleted\", \"Success\");\r\n  }\r\n}\r\n","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbGFyeS12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2QiLCJmaWxlIjoic2FsYXJ5LXZpZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59Il19 */\";","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Payroll Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <div class=\\\"btn-group btn-group\\\">\\n                    <button class=\\\"btn btn-white\\\">Excel</button>\\n                    <button class=\\\"btn btn-white\\\">PDF</button>\\n                    <button class=\\\"btn btn-white\\\"><i class=\\\"fa fa-print fa-lg\\\"></i> Print</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n    <!-- Search Filter -->\\n    <div class=\\\"card mb-2\\\" style=\\\"background-color:transparent;\\\">\\n        <div class=\\\"card-body p-3\\\">\\n\\n            <div class=\\\"row filter-row\\\">\\n\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-2 col-12\\\">\\n                    <div class=\\\"form-group form-focus\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control floating\\\" (input)=\\\"searchByEmpCode($event.target.value)\\\">\\n                        <label class=\\\"focus-label\\\">Employee Code</label>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-12\\\">\\n                    <div class=\\\"form-group form-focus\\\">\\n                        <div class=\\\"cal-icon\\\">\\n                            <input class=\\\"form-control floating datetimepicker\\\" bsDatepicker type=\\\"text\\\" [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\" (bsValueChange)=\\\"searchByFromDate($event)\\\">\\n                        </div>\\n                        <label class=\\\"focus-label\\\">From</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-12\\\">\\n                    <div class=\\\"form-group form-focus\\\">\\n                        <div class=\\\"cal-icon\\\">\\n                            <input class=\\\"form-control floating datetimepicker\\\" bsDatepicker type=\\\"text\\\" [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\" (bsValueChange)=\\\"searchByToDate($event)\\\">\\n                        </div>\\n                        <label class=\\\"focus-label\\\">To</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-12\\\">\\n                    <a  class=\\\"btn btn-success btn-block\\\" (click)=\\\"searchBySearchButton()\\\" > Search </a>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <!-- /Search Filter -->\\n\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n            <div class=\\\"card\\\">\\n\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"card-tools\\\">\\n                         <a routerLink = \\\"/payroll/element-value/create\\\" class=\\\"btn btn-outline-primary\\\"><i class=\\\"fa fa-plus\\\"></i> New &nbsp;&nbsp;&nbsp;</a>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card-body\\\">\\n\\n                    <div class=\\\"table-responsive\\\">\\n\\n                        <div class=\\\"d-flex justify-content-start pb-1\\\">\\n                            <div class=\\\"pgn-displayDataInfo\\\">\\n                                <span class=\\\"page-item disabled\\\">Displaying ( {{ ( ((configPgn.pageNum-1) * configPgn.pageSize) + (1) ) }}  to {{configPgn.pngDiplayLastSeq}} of {{configPgn.totalItem}} ) entries</span>\\n                            </div>\\n                        </div>\\n\\n                        <table id=\\\"genListTable\\\" class=\\\"table table-striped custom-table\\\" >\\n                            <thead>\\n                                <tr>\\n                                    <th>SL</th>\\n                                    <th class=\\\"d-none\\\">TB_ROW_ID</th>\\n                                    <th>Employee</th>\\n                                    <th>Element Title</th>\\n                                    <th>Amount</th>\\n                                    <th>Start Date</th>\\n                                    <th>End Date</th>\\n                                    <th>Status</th>\\n                                    <th>Creation Time</th>\\n                                    <th>Creation User</th>\\n                                    <th>Action</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let thisObj of listData | paginate : configPgn; let i = index\\\" [class.active]=\\\"i == currentIndex\\\">\\n                                \\n                                    <td>{{ ( ((configPgn.pageNum-1) * configPgn.pageSize) + (i+1) ) }}</td>\\n                                    <td class=\\\"d-none\\\">{{thisObj.id}}</td>\\n                                    <td>{{thisObj.empTitle}}</td>\\n                                    <td>{{titleDecode[thisObj.elementTitle]}}</td>\\n                                    <td>{{thisObj.elementAmount}}</td>\\n                                    <td>{{thisObj.activeStartDate}}</td>\\n                                    <td>{{thisObj.activeEndDate}}</td>\\n                                    <td>{{thisObj.isActive}}</td>\\n                                    <td>{{thisObj.creationDateTime}}</td>\\n                                    <td>{{thisObj.creationUser}}</td>\\n                                    <td>\\n                                        <a class=\\\"btn btn-sm btn-primary\\\" routerLink = \\\"/payroll/element-value/show/{{thisObj.id}}\\\"><i class=\\\"fa fa-eye m-r-5\\\"></i>View</a> &nbsp;\\n                                        <a class=\\\"btn btn-sm btn-info\\\" routerLink = \\\"/payroll/element-value/edit/{{thisObj.id}}\\\"><i class=\\\"fa fa-pencil m-r-5\\\"></i></a>&nbsp;&nbsp;\\n                                        <!-- <a class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteEnityData(thisObj.id)\\\"><i class=\\\"fa fa-trash-o m-r-5\\\"></i></a>&nbsp;&nbsp; -->\\n                                        <a class=\\\"btn btn-sm btn-danger\\\"  \\n                                            data-toggle=\\\"modal\\\"\\n                                            data-target=\\\"#delete_entity\\\" \\n                                            (click)=\\\"tempId = thisObj.id\\\">\\n                                            <i class=\\\"fa fa-trash-o m-r-5\\\"></i>\\n                                        </a>\\n                                    </td>\\n                                    \\n                                </tr>\\n\\n                                <tr *ngIf=\\\"listData.length === 0\\\">\\n                                    <td colspan=\\\"10\\\">\\n                                        <h5 style=\\\"text-align: center;\\\">No data found</h5>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n\\n\\n                        <div class=\\\"d-flex justify-content-end \\\">\\n\\n                            <div class=\\\"\\\" [formGroup]=\\\"myFromGroup\\\">\\n                                Items per Page\\n                                <select (change)=\\\"handlePageSizeChange($event)\\\" class=\\\"pgn-pageSizeOption\\\" formControlName=\\\"pageSize\\\">\\n                                    <option *ngFor=\\\"let size of configPgn.pageSizes\\\" [value]=\\\"size\\\">\\n                                        {{ size }}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <div class=\\\"pgn-pageSliceCt\\\">\\n                                <pagination-controls \\n                                    responsive=\\\"true\\\" \\n                                    previousLabel=\\\"Prev\\\" \\n                                    nextLabel=\\\"Next\\\" \\n                                    (pageChange)=\\\"handlePageChange($event)\\\">\\n                                </pagination-controls>\\n                            </div>\\n                            \\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!-- /Page Content -->\\n\\n\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\\n\\n\\n<!-- Delete Modal -->\\n<div class=\\\"modal custom-modal fade\\\" id=\\\"delete_entity\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"form-header\\\">\\n                    <h3>Delete Item</h3>\\n                    <p>Are you sure want to delete?</p>\\n                </div>\\n                <div class=\\\"modal-btn delete-action\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                            <a  class=\\\"btn btn-primary continue-btn\\\" (click)=\\\"deleteEnityData(tempId)\\\">Delete</a>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                            <a  data-dismiss=\\\"modal\\\"\\n                                class=\\\"btn btn-primary cancel-btn\\\">Cancel</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- /Delete Modal -->\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PayrollComponent } from './payroll.component';\r\nimport { EmployeeSalaryComponent } from './components/employee-salary/employee-salary.component';\r\nimport { SalaryViewComponent } from './components/salary-view/salary-view.component';\r\nimport { PayrollItemsComponent } from './components/payroll-items/payroll-items.component';\r\nimport { PayrollSalaryProcessComponent } from './components/salary-process/salary-process-parameter.component';\r\nimport { SalaryProcessJobListComponent } from './components/salary-process/batch-job/list/salary-process-job-list.component';\r\nimport { PayrollElementValueListComponent } from './components/element-value/list/payroll-element-value-list.component';\r\nimport { PayrollElementValueCreateComponent } from './components/element-value/create/payroll-element-value-create.component';\r\nimport { PayrollElementValueEditComponent } from './components/element-value/edit/payroll-element-value-edit.component';\r\nimport { PayrollElementValueShowComponent } from './components/element-value/show/payroll-element-value-show.component';\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    component:PayrollComponent,\r\n    children:[\r\n      {\r\n        path:\"employee-salary\",\r\n        component:EmployeeSalaryComponent\r\n      },\r\n      {\r\n        path:\"payslip/:id\",\r\n        component:SalaryViewComponent\r\n      },\r\n      {\r\n        path:\"payroll-items\",\r\n        component:PayrollItemsComponent\r\n      },\r\n      {\r\n        path:\"salary-process\",\r\n        component:PayrollSalaryProcessComponent\r\n      },\r\n      {\r\n        path:\"salary-process-list\",\r\n        component:SalaryProcessJobListComponent\r\n      },\r\n      {\r\n        path:\"element-value/list\",\r\n        component:PayrollElementValueListComponent\r\n      },\r\n      {\r\n        path:\"element-value/create\",\r\n        component:PayrollElementValueCreateComponent\r\n      },\r\n      {\r\n        path:\"element-value/edit/:id\",\r\n        component:PayrollElementValueEditComponent\r\n      },\r\n      {\r\n        path:\"element-value/show/:id\", // payroll/element-xyz-value/\r\n        component:PayrollElementValueShowComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PayrollRoutingModule { }\r\n","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n\\r\\n.pgn-pageSizeOption {\\r\\n\\tpadding: 3px;\\r\\n}\\r\\n\\r\\n/* ================= Purpale Color =========================== */\\r\\n\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlLXNhbGFyeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtBQUNkOztBQUVBO0NBQ0MsWUFBWTtBQUNiOztBQUdBLGdFQUFnRTs7QUFDaEU7Q0FDQyxxQkFBcUI7Q0FDckIsOEJBQThCO0lBQzNCLGdCQUFnQjtBQUNwQjs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixVQUFVO0NBRVYsMkVBQTJFO0NBQzNFIiwiZmlsZSI6ImVtcGxveWVlLXNhbGFyeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG5cdHBhZGRpbmc6IDMwcHg7XHJcbn1cclxuXHJcbi5wZ24tcGFnZVNpemVPcHRpb24ge1xyXG5cdHBhZGRpbmc6IDNweDtcclxufVxyXG5cclxuXHJcbi8qID09PT09PT09PT09PT09PT09IFB1cnBhbGUgQ29sb3IgPT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbmlucHV0LmZvcm0tY29udHJvbCwgc2VsZWN0LmZvcm0tY29udHJvbCwgdGV4dGFyZWEuZm9ybS1jb250cm9sIHtcclxuXHRib3JkZXItY29sb3I6ICM2NjdlZWE7XHJcblx0Ym9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjNjY3ZWVhO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTsgXHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG5cdGJvcmRlci1jb2xvcjogIzcwNUNCQTtcclxuXHRvdXRsaW5lOiAwO1xyXG5cdC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpO1xyXG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTsgXHJcbiB9XHJcbiAiXX0= */\";","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Salary Process</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <div class=\\\"btn-group btn-group\\\">\\n                    <button class=\\\"btn btn-white\\\">Excel</button>\\n                    <button class=\\\"btn btn-white\\\">PDF</button>\\n                    <button class=\\\"btn btn-white\\\"><i class=\\\"fa fa-print fa-lg\\\"></i> Print</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n    <!-- Search Filter -->\\n    <div class=\\\"card mb-2\\\" style=\\\"background-color:transparent;\\\">\\n        <div class=\\\"card-body p-3\\\">\\n\\n            <div class=\\\"row filter-row\\\">\\n\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-2 col-12\\\">\\n                    <div class=\\\"form-group form-focus\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control floating\\\" (input)=\\\"searchByEmpCode($event.target.value)\\\">\\n                        <label class=\\\"focus-label\\\">Employee Code</label>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-12\\\">\\n                    <div class=\\\"form-group form-focus\\\">\\n                        <div class=\\\"cal-icon\\\">\\n                            <input class=\\\"form-control floating datetimepicker\\\" bsDatepicker type=\\\"text\\\" [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\" (bsValueChange)=\\\"searchByFromDate($event)\\\">\\n                        </div>\\n                        <label class=\\\"focus-label\\\">From</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-12\\\">\\n                    <div class=\\\"form-group form-focus\\\">\\n                        <div class=\\\"cal-icon\\\">\\n                            <input class=\\\"form-control floating datetimepicker\\\" bsDatepicker type=\\\"text\\\" [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\" (bsValueChange)=\\\"searchByToDate($event)\\\">\\n                        </div>\\n                        <label class=\\\"focus-label\\\">To</label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\\\">\\n                    <a  class=\\\"btn btn-success btn-block\\\" (click)=\\\"searchBySearchButton()\\\" > Search </a>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <!-- /Search Filter -->\\n\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n            <div class=\\\"card\\\">\\n\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"card-tools\\\">\\n                         <a routerLink = \\\"/payroll/salary-process/\\\" class=\\\"btn btn-outline-primary\\\"><i class=\\\"fa fa-plus\\\"></i> New &nbsp;&nbsp;&nbsp;</a>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card-body\\\">\\n\\n                    <div class=\\\"table-responsive\\\">\\n\\n                        <div class=\\\"d-flex justify-content-start pb-1\\\">\\n                            <div class=\\\"pgn-displayDataInfo\\\">\\n                                <span class=\\\"page-item disabled\\\">Displaying ( {{ ( ((configPgn.pageNum-1) * configPgn.pageSize) + (1) ) }}  to {{configPgn.pngDiplayLastSeq}} of {{configPgn.totalItem}} ) entries</span>\\n                            </div>\\n                        </div>\\n\\n                        <table id=\\\"genListTable\\\" class=\\\"table table-striped custom-table\\\" >\\n                            <thead>\\n                                <tr>\\n                                    <th>SL</th>\\n                                    <th class=\\\"d-none\\\">TB_ROW_ID</th>\\n                                    <th>Year</th>\\n                                    <th>Month</th>\\n                                    <th>Total Payable Day</th>\\n                                    <th>Total Disburse Day</th>\\n                                    <th>Proc From Date</th>\\n                                    <th>Proc To Date</th>\\n                                    <th>Status</th>\\n                                    <th>Job Start Time</th>\\n                                    <th>Job End Time</th>\\n                                    <th>Job Run User</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let thisObj of listData | paginate : configPgn; let i = index\\\" [class.active]=\\\"i == currentIndex\\\">\\n                                \\n                                    <td>{{ ( ((configPgn.pageNum-1) * configPgn.pageSize) + (i+1) ) }}</td>\\n                                    <td class=\\\"d-none\\\">{{thisObj.id}}</td>\\n                                    <td>{{thisObj.year}}</td>\\n                                    <td>{{thisObj.month}}</td>\\n                                    <td>{{thisObj.totalPayableDay}}</td>\\n                                    <td>{{thisObj.totalDisburseDay}}</td>\\n                                    <td>{{thisObj.procFromDate}}</td>\\n                                    <td>{{thisObj.procToDate}}</td>\\n                                    <td>\\n                                        <i class=\\\"fa fa-spinner fa-pulse\\\"></i>\\n                                    </td>\\n                                    <td>{{thisObj.jobStartTime}}</td>\\n                                    <td>{{thisObj.jobEndTime}}</td>\\n                                    <td>{{thisObj.jobRunUser}}</td>\\n                                    <td><a class=\\\"btn btn-sm btn-primary\\\" routerLink = \\\"/payroll/payslip/{{thisObj.id}}\\\">View</a></td>\\n                                    \\n                                </tr>\\n\\n                                <tr *ngIf=\\\"listData.length === 0\\\">\\n                                    <td colspan=\\\"10\\\">\\n                                        <h5 style=\\\"text-align: center;\\\">No data found</h5>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n\\n\\n                        <div class=\\\"d-flex justify-content-end \\\">\\n\\n                            <div class=\\\"\\\" [formGroup]=\\\"myFromGroup\\\">\\n                                Items per Page\\n                                <select (change)=\\\"handlePageSizeChange($event)\\\" class=\\\"pgn-pageSizeOption\\\" formControlName=\\\"pageSize\\\">\\n                                    <option *ngFor=\\\"let size of configPgn.pageSizes\\\" [value]=\\\"size\\\">\\n                                        {{ size }}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <div class=\\\"pgn-pageSliceCt\\\">\\n                                <pagination-controls \\n                                    responsive=\\\"true\\\" \\n                                    previousLabel=\\\"Prev\\\" \\n                                    nextLabel=\\\"Next\\\" \\n                                    (pageChange)=\\\"handlePageChange($event)\\\">\\n                                </pagination-controls>\\n                            </div>\\n                            \\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!-- /Page Content -->\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\";","export default \"<!-- Page Content -->\\r\\n<div class=\\\"content container-fluid\\\">\\r\\n\\r\\n    <!-- Page Header -->\\r\\n    <div class=\\\"page-header\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <h3 class=\\\"page-title\\\">Salary Process</h3>\\r\\n                <ul class=\\\"breadcrumb\\\">\\r\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n                    <li class=\\\"breadcrumb-item active\\\">Salary Process</li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\r\\n                <a class=\\\"btn add-btn\\\" routerLink=\\\"/payroll/salary-process-list\\\"><i class=\\\"fa fa-share\\\"></i> Back To List</a>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /Page Header -->\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <h4 class=\\\"card-title mb-0\\\">Process Parameters</h4>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <form novalidate (ngSubmit)=\\\"basicFormSubmit()\\\" [formGroup]=\\\"basicForm\\\">\\r\\n                        \\r\\n                         <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-form-label col-md-2\\\">Year</label>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <select class=\\\"select form-control\\\" formControlName=\\\"year\\\" (change)=\\\"onChangeYear($event.target.value)\\\">\\r\\n                                    <option value=\\\"\\\">Select Year</option>\\r\\n                                    <option value=\\\"2021\\\" selected>2021</option>\\r\\n                                    <option value=\\\"2022\\\">2022</option>\\r\\n                                    <option value=\\\"2023\\\">2023</option>\\r\\n                                    <option value=\\\"2024\\\">2024</option>\\r\\n                                    <option value=\\\"2025\\\">2025</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                         <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-form-label col-md-2\\\">Month</label>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <select class=\\\"select form-control\\\" formControlName=\\\"month\\\" (change)=\\\"onChangeMonth($event.target.value)\\\">\\r\\n                                    <option value=\\\"\\\" selected>Select Month</option>\\r\\n                                    <option value=\\\"01\\\">January</option>\\r\\n                                    <option value=\\\"02\\\">February</option>\\r\\n                                    <option value=\\\"03\\\">March</option>\\r\\n                                    <option value=\\\"04\\\">April</option>\\r\\n                                    <option value=\\\"05\\\">May</option>\\r\\n                                    <option value=\\\"06\\\">Jun</option>\\r\\n                                    <option value=\\\"07\\\">July</option>\\r\\n                                    <option value=\\\"08\\\">August</option>\\r\\n                                    <option value=\\\"09\\\">September</option>\\r\\n                                    <option value=\\\"10\\\">October</option>\\r\\n                                    <option value=\\\"11\\\">November</option>\\r\\n                                    <option value=\\\"12\\\">December</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      \\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-form-label col-md-2\\\">Total Payable Day</label>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"totalPayableDay\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-form-label col-md-2\\\">Total Disburse Day</label>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"totalDisburseDay\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-form-label col-md-2\\\">Process From Date</label>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"cal-icon\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control datetimepicker\\\" formControlName=\\\"fromDate\\\" bsDatepicker>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label class=\\\"col-form-label col-md-2\\\">Process To Date</label>\\r\\n                            <div class=\\\"col-md-10\\\">\\r\\n                                <div class=\\\"cal-icon\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"toDate\\\" bsDatepicker>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"text-right\\\">\\r\\n\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-ripple\\\" (click)=\\\"resetFormValues()\\\">\\r\\n                                <i class=\\\"fa fa-undo\\\" aria-hidden=\\\"true\\\"></i> Reset\\r\\n                            </button>\\r\\n                            &nbsp; &nbsp; &nbsp;\\r\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-ripple\\\">\\r\\n                                <i class=\\\"fa fa-arrow-circle-o-right\\\" aria-hidden=\\\"true\\\"></i> Start Process\\r\\n                            </button>\\r\\n                        </div>\\r\\n\\r\\n                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n<!-- /Page Content -->\\r\\n\\r\\n\\r\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\r\\n\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { retry } from 'rxjs/operators';\r\nimport baseUrl from 'src/app/_helper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PayrollService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  \r\n\r\n  public sendGetRequest(apiURL, queryParams){\r\n\r\n    console.log(\"@sendGetRequest\");\r\n    return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\r\n\r\n  }\r\n  public sendPostRequest(apiURL, formData){\r\n\r\n    console.log(\"@sendPostRequest\");\r\n    return this.http.post(apiURL, formData);\r\n\r\n  }\r\n  public sendPutRequest(apiURL, formData){\r\n\r\n    console.log(\"@sendPutRequest\");\r\n    return this.http.put(apiURL, formData);\r\n\r\n  }\r\n  public sendDeleteRequest(apiURL, formData){\r\n\r\n    console.log(\"@sendDeleteRequest\");\r\n    return this.http.delete(apiURL, formData);\r\n\r\n  }\r\n\r\n\r\n  // Get PayrollElement Assignment By EmpId\r\n  public getPayrollElementAssignmentByEmpId(empId){\r\n    return this.http.get(`${baseUrl}/empPayrollAssignment/get/${empId}`);\r\n  }\r\n\r\n\r\n}\r\n","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n.content .page-header {\\r\\n\\tmargin-bottom: 1.075rem;\\r\\n}\\r\\n/* ================= Purpale Color =========================== */\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheXJvbGwtZWxlbWVudC12YWx1ZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2Q7QUFDQTtDQUNDLHVCQUF1QjtBQUN4QjtBQUlBLGdFQUFnRTtBQUNoRTtDQUNDLHFCQUFxQjtDQUNyQiw4QkFBOEI7SUFDM0IsZ0JBQWdCO0FBQ3BCO0FBRUE7Q0FDQyxxQkFBcUI7Q0FDckIsVUFBVTtDQUVWLDJFQUEyRTtDQUMzRSIsImZpbGUiOiJwYXlyb2xsLWVsZW1lbnQtdmFsdWUtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG5cdHBhZGRpbmc6IDMwcHg7XHJcbn1cclxuLmNvbnRlbnQgLnBhZ2UtaGVhZGVyIHtcclxuXHRtYXJnaW4tYm90dG9tOiAxLjA3NXJlbTtcclxufVxyXG5cclxuXHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PSBQdXJwYWxlIENvbG9yID09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5pbnB1dC5mb3JtLWNvbnRyb2wsIHNlbGVjdC5mb3JtLWNvbnRyb2wsIHRleHRhcmVhLmZvcm0tY29udHJvbCB7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNjY3ZWVhO1xyXG5cdGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzY2N2VlYTtcclxuICAgIGJveC1zaGFkb3c6IG5vbmU7IFxyXG59XHJcblxyXG4uZm9ybS1jb250cm9sOmZvY3VzIHtcclxuXHRib3JkZXItY29sb3I6ICM3MDVDQkE7XHJcblx0b3V0bGluZTogMDtcclxuXHQtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTtcclxuXHRib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiKDAgMCAwIC8gOCUpLCAwIDAgOHB4IHJnYigxMDIgMTc1IDIzMyAvIDYwJSk7IFxyXG4gfVxyXG4gIl19 */\";","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheXJvbGwtaXRlbXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7QUFDZCIsImZpbGUiOiJwYXlyb2xsLWl0ZW1zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufSJdfQ== */\";","export default \"<!-- Page Wrapper -->\\r\\n<div class=\\\"page-wrapper\\\" (resized)=\\\"onResize($event)\\\" [ngStyle]=\\\"{ 'height' : innerHeight }\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    </div>\\r\\n    <!-- /Page Wrapper -->\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { PayrollService } from \"../../service/payroll.service\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: \"app-payroll-salary-process\",\r\n  templateUrl: \"./salary-process-parameter.component.html\",\r\n  styleUrls: [\"./salary-process-parameter.component.css\"],\r\n})\r\nexport class PayrollSalaryProcessComponent implements OnInit {\r\n\r\n  public baseUrl = environment.baseUrl;\r\n  public basicForm: FormGroup;\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private datePipe: DatePipe,\r\n    private payrollService: PayrollService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private spinnerService: NgxSpinnerService\r\n    ) {}\r\n\r\n    \r\n\r\n  ngOnInit() {\r\n\r\n    this.basicForm = this.formBuilder.group({\r\n      year: [\"\"],\r\n      month: [\"\"],\r\n      totalPayableDay: [\"\"],\r\n      totalDisburseDay: [\"\"],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n    });\r\n\r\n    this.initializeForm();\r\n    this.loadData();\r\n    \r\n\r\n     var createRipple = function(e){\r\n\r\n        const button = e.currentTarget;\r\n\r\n        // Get position of X\r\n        // let x = e.clientX - e.target.offsetLeft;\r\n        // Get position of Y \r\n        // let y = e.clientY - e.target.offsetTop;\r\n        let x = e.clientX - e.target.getBoundingClientRect().left;\r\n        let y = e.clientY - e.target.getBoundingClientRect().top;\r\n\r\n         // Create span element\r\n         let ripple = document.createElement(\"span\");\r\n         // Position the span element\r\n         ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 1s linear infinite;\";\r\n         ripple.style.left = `${x}px`;\r\n         ripple.style.top = `${y}px`;\r\n\r\n         // Add span to the button \r\n         button.appendChild(ripple);\r\n\r\n         // Remove span after 0.3s\r\n          setTimeout(() => {\r\n                ripple.remove();\r\n          }, 1000);\r\n   \r\n     }\r\n\r\n\r\n    // document.querySelector(\".btn-ripple\").addEventListener('click',createRipple.bind(event));\r\n\r\n    const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\r\n    elements.forEach(element => {\r\n      // element.addEventListener('click',createRipple.bind(event));\r\n      element.addEventListener('click', function(e){\r\n        createRipple(e);\r\n      });\r\n    });\r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n  initializeForm(){\r\n    this.setFormDefaultValues();\r\n  }\r\n \r\n\r\n  basicFormSubmit() {\r\n    \r\n    let apiURL = this.baseUrl + \"/salaryProcess/start\";\r\n\r\n    let formData: any = {};\r\n    formData.abc = \"OK\";\r\n    formData = this.basicForm.value\r\n    // process date\r\n    formData.procFromDate = (formData.fromDate) ? this.datePipe.transform(formData.fromDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\r\n    formData.procToDate = (formData.toDate) ? this.datePipe.transform(formData.toDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\r\n\r\n    this.spinnerService.show();\r\n    this.payrollService.sendPostRequest(apiURL, formData).subscribe(\r\n      (response: any) => {\r\n        console.log(response);\r\n        // this.router.navigateByUrl('/reports/attendance-jsr-rpt');\r\n        this.spinnerService.hide();  \r\n        this.router.navigate([\"/payroll/salary-process-list\"], {relativeTo: this.route});\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        this.spinnerService.hide();  \r\n      }\r\n    );\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  loadData(){\r\n\r\n    let apiURL = this.baseUrl + \"/salaryProcess/start\";\r\n\r\n    let queryParams: any = {};\r\n    queryParams.abc = \"OK\";\r\n\r\n    // this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\r\n    //   (response: any) => {\r\n    //   console.log(response);\r\n    //   },\r\n    //   (error) => console.log(error)\r\n    // );\r\n\r\n\r\n  }\r\n\r\n\r\n  daysInThisMonth( now: Date ) {\r\n    return new Date(now.getFullYear(), now.getMonth()+1, 0).getDate();\r\n  }\r\n  getMonthFirstDate( date: Date ) {\r\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    return firstDay;\r\n  }\r\n  getMonthLastDate( date: Date ) {\r\n    var date = new Date();\r\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return lastDay;\r\n  }\r\n\r\n\r\n  onChangeYear(value: string) {\r\n    console.log(value);\r\n  }\r\n\r\n\r\n  onChangeMonth(value: string) {\r\n\r\n    console.log(value);\r\n    console.log(parseInt(value));\r\n\r\n    let year = this.basicForm.get('year').value;\r\n    let month = parseInt(value);\r\n\r\n    var monthFirstDayDate = new Date(year, month-1, 1); // start from 0-11\r\n    let daysInMonth = this.daysInThisMonth(monthFirstDayDate);\r\n\r\n    this.basicForm.controls.totalPayableDay.setValue(daysInMonth);\r\n    this.basicForm.controls.totalDisburseDay.setValue(daysInMonth);\r\n\r\n    this.basicForm.controls.fromDate.setValue( this.getMonthFirstDate(monthFirstDayDate) );\r\n    this.basicForm.controls.toDate.setValue( this.getMonthLastDate(monthFirstDayDate) );\r\n\r\n  }\r\n\r\n\r\n  setFormDefaultValues(){\r\n\r\n    var dt = new Date();\r\n    var year = dt.getFullYear();\r\n\r\n    // multiple\r\n    this.basicForm.patchValue({\r\n      year: year,\r\n    });\r\n    // single\r\n    this.basicForm.controls.year.setValue(year);\r\n\r\n  }\r\n\r\n\r\n  resetFormValues(){\r\n\r\n    this.basicForm = this.formBuilder.group({\r\n      year: [\"\"],\r\n      month: [\"\"],\r\n      totalPayableDay: [\"\"],\r\n      totalDisburseDay: [\"\"],\r\n      fromDate: [\"\"],\r\n      toDate: [\"\"],\r\n    });\r\n\r\n    this.setFormDefaultValues();\r\n    \r\n  }\r\n\r\n\r\n}\r\n","export default \"<!-- Page Content -->\\r\\n<div class=\\\"content container-fluid\\\">\\r\\n\\r\\n    <!-- Page Header -->\\r\\n    <div class=\\\"page-header\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <h3 class=\\\"page-title\\\">Employee Salary</h3>\\r\\n                <ul class=\\\"breadcrumb\\\">\\r\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n                    <li class=\\\"breadcrumb-item active\\\">Salary</li>\\r\\n                </ul>\\r\\n            </div>\\r\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\r\\n                <div class=\\\"btn-group btn-group\\\">\\r\\n                    <button class=\\\"btn btn-white\\\">Excel</button>\\r\\n                    <button class=\\\"btn btn-white\\\">PDF</button>\\r\\n                    <button class=\\\"btn btn-white\\\"><i class=\\\"fa fa-print fa-lg\\\"></i> Print</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /Page Header -->\\r\\n\\r\\n    <!-- Search Filter -->\\r\\n    <div class=\\\"card mb-2\\\" style=\\\"background-color:transparent;\\\">\\r\\n        <div class=\\\"card-body p-3\\\">\\r\\n\\r\\n            <div class=\\\"row filter-row\\\">\\r\\n                <div class=\\\"col-sm-6 col-md-2 col-lg-3 col-xl-3 col-xxl-2 col-12\\\">\\r\\n                    <div class=\\\"form-group form-focus\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control floating\\\" (input)=\\\"searchByEmpName($event.target.value)\\\">\\r\\n                        <label class=\\\"focus-label\\\">Employee Name</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-2 col-12\\\">\\r\\n                    <div class=\\\"form-group form-focus\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control floating\\\" (input)=\\\"searchByEmpCode($event.target.value)\\\">\\r\\n                        <label class=\\\"focus-label\\\">Employee Code</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\\\">\\r\\n                    <div class=\\\"form-group form-focus\\\">\\r\\n                        <div class=\\\"cal-icon\\\">\\r\\n                            <input class=\\\"form-control floating datetimepicker\\\" bsDatepicker type=\\\"text\\\" [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\" (bsValueChange)=\\\"searchByFromDate($event)\\\">\\r\\n                        </div>\\r\\n                        <label class=\\\"focus-label\\\">From</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\\\">\\r\\n                    <div class=\\\"form-group form-focus\\\">\\r\\n                        <div class=\\\"cal-icon\\\">\\r\\n                            <input class=\\\"form-control floating datetimepicker\\\" bsDatepicker type=\\\"text\\\" [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\" (bsValueChange)=\\\"searchByToDate($event)\\\">\\r\\n                        </div>\\r\\n                        <label class=\\\"focus-label\\\">To</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\\\">\\r\\n                    <a  class=\\\"btn btn-success btn-block\\\" (click)=\\\"searchBySearchButton()\\\" > Search </a>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /Search Filter -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                    <div class=\\\"table-responsive\\\">\\r\\n\\r\\n                        <div class=\\\"d-flex justify-content-start pb-1\\\">\\r\\n                            <div class=\\\"pgn-displayDataInfo\\\">\\r\\n                                <span class=\\\"page-item disabled\\\">Displaying ( {{ ( ((pngConfig.pageNum-1) * pngConfig.pageSize) + (1) ) }}  to {{pngConfig.pngDiplayLastSeq}} of {{pngConfig.totalItem}} ) entries</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <table id=\\\"genListTable\\\" class=\\\"table table-striped custom-table\\\" >\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>SL</th>\\r\\n                                    <th class=\\\"d-none\\\">TB_ROW_ID</th>\\r\\n                                    <th>Employee</th>\\r\\n                                    <th>Employee Code</th>\\r\\n                                    <th>Salary Disburse Date</th>\\r\\n                                    <th>Gross Salary</th>\\r\\n                                    <th>Net Pay Amount</th>\\r\\n                                    <th>Payslip</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let thisObj of listData | paginate : pngConfig; let i = index\\\" [class.active]=\\\"i == currentIndex\\\">\\r\\n                                \\r\\n                                    <td>{{ ( ((pngConfig.pageNum-1) * pngConfig.pageSize) + (i+1) ) }}</td>\\r\\n                                    <td class=\\\"d-none\\\">{{thisObj.id}}</td>\\r\\n                                    <td>{{thisObj.empName}}</td>\\r\\n                                    <td>{{thisObj.empCode}}</td>\\r\\n                                    <td>{{thisObj.salaryDayMonthYear}}</td>\\r\\n                                    <td>{{thisObj.prlElmntGross}}</td>\\r\\n                                    <td>{{thisObj.netPayableAmount}}</td>\\r\\n                                    <td><a class=\\\"btn btn-sm btn-primary\\\" routerLink = \\\"/payroll/payslip/{{thisObj.id}}\\\">{{thisObj.paySlipNum}}</a></td>\\r\\n                                    \\r\\n                                </tr>\\r\\n\\r\\n                                <tr *ngIf=\\\"listData.length === 0\\\">\\r\\n                                    <td colspan=\\\"10\\\">\\r\\n                                        <h5 style=\\\"text-align: center;\\\">No data found</h5>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n\\r\\n\\r\\n                        <div class=\\\"d-flex justify-content-end \\\">\\r\\n\\r\\n                            <div class=\\\"\\\" [formGroup]=\\\"myFromGroup\\\">\\r\\n                                Items per Page\\r\\n                                <select (change)=\\\"handlePageSizeChange($event)\\\" class=\\\"pgn-pageSizeOption\\\" formControlName=\\\"pageSize\\\">\\r\\n                                    <option *ngFor=\\\"let size of pngConfig.pageSizes\\\" [value]=\\\"size\\\">\\r\\n                                        {{ size }}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"pgn-pageSliceCt\\\">\\r\\n                                <pagination-controls \\r\\n                                    responsive=\\\"true\\\" \\r\\n                                    previousLabel=\\\"Prev\\\" \\r\\n                                    nextLabel=\\\"Next\\\" \\r\\n                                    (pageChange)=\\\"handlePageChange($event)\\\">\\r\\n                                </pagination-controls>\\r\\n                            </div>\\r\\n                            \\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Page Content -->\\r\\n\\r\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzYWxhcnktcHJvY2Vzcy1qb2ItY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<!-- Page Content -->\\r\\n<div class=\\\"content container-fluid\\\">\\r\\n\\r\\n    <!-- Page Header -->\\r\\n    <div class=\\\"page-header\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <h3 class=\\\"page-title\\\">Payroll Items</h3>\\r\\n                <ul class=\\\"breadcrumb\\\">\\r\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n                    <li class=\\\"breadcrumb-item active\\\">Payroll Items</li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /Page Header -->\\r\\n\\r\\n    <!-- Page Tab -->\\r\\n    <div class=\\\"page-menu\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n                <ul class=\\\"nav nav-tabs nav-tabs-bottom\\\">\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#tab_additions\\\">Additions</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#tab_overtime\\\">Overtime</a>\\r\\n                    </li>\\r\\n                    <li class=\\\"nav-item\\\">\\r\\n                        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#tab_deductions\\\">Deductions</a>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- /Page Tab -->\\r\\n\\r\\n    <!-- Tab Content -->\\r\\n    <div class=\\\"tab-content\\\">\\r\\n\\r\\n        <!-- Additions Tab -->\\r\\n        <div class=\\\"tab-pane show active\\\" id=\\\"tab_additions\\\">\\r\\n\\r\\n            <!-- Add Addition Button -->\\r\\n            <div class=\\\"text-right mb-4 clearfix\\\">\\r\\n                <button class=\\\"btn btn-primary add-btn\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add_addition\\\"><i\\r\\n                        class=\\\"fa fa-plus\\\"></i> Add Addition</button>\\r\\n            </div>\\r\\n            <!-- /Add Addition Button -->\\r\\n\\r\\n            <!-- Payroll Additions Table -->\\r\\n            <div class=\\\"payroll-table card\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-hover table-radius\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Name</th>\\r\\n                                <th>Category</th>\\r\\n                                <th>Default/Unit Amount</th>\\r\\n                                <th class=\\\"text-right\\\">Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let addPayroll of allAddPayroll;let i = index\\\">\\r\\n                                <th>{{addPayroll.name}}</th>\\r\\n                                <td>{{addPayroll.category}}</td>\\r\\n                                <td>{{addPayroll.unitCost}}</td>\\r\\n                                <td class=\\\"text-right\\\">\\r\\n                                    <div class=\\\"dropdown dropdown-action\\\">\\r\\n                                        <a  class=\\\"action-icon dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                            aria-expanded=\\\"false\\\"><i class=\\\"material-icons\\\">more_vert</i></a>\\r\\n                                        <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"  data-toggle=\\\"modal\\\"\\r\\n                                                data-target=\\\"#edit_addition\\\" (click)=\\\"editAdd(addPayroll.id)\\\"><i class=\\\"fa fa-pencil m-r-5\\\"></i> Edit</a>\\r\\n                                            <a class=\\\"dropdown-item\\\"  data-toggle=\\\"modal\\\"\\r\\n                                                data-target=\\\"#delete_addition\\\" (click)=\\\"tempAddId = addPayroll.id\\\"><i class=\\\"fa fa-trash-o m-r-5\\\"></i>\\r\\n                                                Delete</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"allAddPayroll.length === 0\\\">\\r\\n                                <td colspan=\\\"10\\\">\\r\\n                                    <h5 style=\\\"text-align: center;\\\">No data found</h5>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /Payroll Additions Table -->\\r\\n\\r\\n        </div>\\r\\n        <!-- Additions Tab -->\\r\\n\\r\\n        <!-- Overtime Tab -->\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"tab_overtime\\\">\\r\\n\\r\\n            <!-- Add Overtime Button -->\\r\\n            <div class=\\\"text-right mb-4 clearfix\\\">\\r\\n                <button class=\\\"btn btn-primary add-btn\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add_overtime\\\"><i\\r\\n                        class=\\\"fa fa-plus\\\"></i> Add Overtime</button>\\r\\n            </div>\\r\\n            <!-- /Add Overtime Button -->\\r\\n\\r\\n            <!-- Payroll Overtime Table -->\\r\\n            <div class=\\\"payroll-table card\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-hover table-radius\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Name</th>\\r\\n                                <th>Rate</th>\\r\\n                                <th class=\\\"text-right\\\">Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let overPayroll of allOverPayroll;let i = index\\\">\\r\\n                                <th>{{overPayroll.name}}</th>\\r\\n                                <td>{{overPayroll.rate}}</td>\\r\\n                                <td class=\\\"text-right\\\">\\r\\n                                    <div class=\\\"dropdown dropdown-action\\\">\\r\\n                                        <a  class=\\\"action-icon dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                            aria-expanded=\\\"false\\\"><i class=\\\"material-icons\\\">more_vert</i></a>\\r\\n                                        <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"  data-toggle=\\\"modal\\\"\\r\\n                                                data-target=\\\"#edit_overtime\\\" (click)=\\\"editOver(overPayroll.id)\\\"><i class=\\\"fa fa-pencil m-r-5\\\"></i> Edit</a>\\r\\n                                            <a class=\\\"dropdown-item\\\"  data-toggle=\\\"modal\\\"\\r\\n                                                data-target=\\\"#delete_overtime\\\" (click)=\\\"tempOverId = overPayroll.id\\\"><i class=\\\"fa fa-trash-o m-r-5\\\"></i>\\r\\n                                                Delete</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"allOverPayroll.length === 0\\\">\\r\\n                                <td colspan=\\\"10\\\">\\r\\n                                    <h5 style=\\\"text-align: center;\\\">No data found</h5>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /Payroll Overtime Table -->\\r\\n\\r\\n        </div>\\r\\n        <!-- /Overtime Tab -->\\r\\n\\r\\n        <!-- Deductions Tab -->\\r\\n        <div class=\\\"tab-pane\\\" id=\\\"tab_deductions\\\">\\r\\n\\r\\n            <!-- Add Deductions Button -->\\r\\n            <div class=\\\"text-right mb-4 clearfix\\\">\\r\\n                <button class=\\\"btn btn-primary add-btn\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\"\\r\\n                    data-target=\\\"#add_deduction\\\"><i class=\\\"fa fa-plus\\\"></i> Add Deduction</button>\\r\\n            </div>\\r\\n            <!-- /Add Deductions Button -->\\r\\n\\r\\n            <!-- Payroll Deduction Table -->\\r\\n            <div class=\\\"payroll-table card\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <table class=\\\"table table-hover table-radius\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Name</th>\\r\\n                                <th>Default/Unit Amount</th>\\r\\n                                <th class=\\\"text-right\\\">Action</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let deductPayroll of allDeductPayroll;let i = index\\\">\\r\\n                                <th>{{deductPayroll.name}}</th>\\r\\n                                <td>{{deductPayroll.unitCost}}</td>\\r\\n                                <td class=\\\"text-right\\\">\\r\\n                                    <div class=\\\"dropdown dropdown-action\\\">\\r\\n                                        <a  class=\\\"action-icon dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\r\\n                                            aria-expanded=\\\"false\\\"><i class=\\\"material-icons\\\">more_vert</i></a>\\r\\n                                        <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\r\\n                                            <a class=\\\"dropdown-item\\\"  data-toggle=\\\"modal\\\"\\r\\n                                                data-target=\\\"#edit_deduction\\\" (click)=\\\"editDeduct(deductPayroll.id)\\\"><i class=\\\"fa fa-pencil m-r-5\\\"></i>\\r\\n                                                Edit</a>\\r\\n                                            <a class=\\\"dropdown-item\\\"  data-toggle=\\\"modal\\\"\\r\\n                                                data-target=\\\"#delete_deduction\\\" (click)=\\\"tempDeductId = deductPayroll.id\\\"><i class=\\\"fa fa-trash-o m-r-5\\\"></i>\\r\\n                                                Delete</a>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr *ngIf=\\\"allDeductPayroll.length === 0\\\">\\r\\n                                <td colspan=\\\"10\\\">\\r\\n                                    <h5 style=\\\"text-align: center;\\\">No data found</h5>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /Payroll Deduction Table -->\\r\\n\\r\\n        </div>\\r\\n        <!-- /Deductions Tab -->\\r\\n\\r\\n    </div>\\r\\n    <!-- Tab Content -->\\r\\n\\r\\n</div>\\r\\n<!-- /Page Content -->\\r\\n\\r\\n<!-- Add Addition Modal -->\\r\\n<div id=\\\"add_addition\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Add Addition</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form (ngSubmit)=\\\"addPayroll()\\\" [formGroup]=\\\"addPayrollForm\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Name <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [class.invalid]=\\\"addPayrollForm.get('addPayrollName').invalid && addPayrollForm.get('addPayrollName').touched\\\"\\r\\n                        formControlName=\\\"addPayrollName\\\">\\r\\n                        <div\\r\\n                                    *ngIf=\\\"addPayrollForm.get('addPayrollName').invalid && addPayrollForm.get('addPayrollName').touched\\\">\\r\\n                                    <small\\r\\n                                        *ngIf=\\\"addPayrollForm.get('addPayrollName').invalid && addPayrollForm.get('addPayrollName').touched\\\"\\r\\n                                        class=\\\"text-danger\\\"> *Name is required</small>\\r\\n                                </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Category <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <select class=\\\"select form-control\\\" [class.invalid]=\\\"addPayrollForm.get('addPayrollCategory').invalid && addPayrollForm.get('addPayrollCategory').touched\\\"\\r\\n                        formControlName=\\\"addPayrollCategory\\\">\\r\\n                            <option>Select a category</option>\\r\\n                            <option>Monthly remuneration</option>\\r\\n                            <option>Additional remuneration</option>\\r\\n                        </select>\\r\\n                        <div\\r\\n                        *ngIf=\\\"addPayrollForm.get('addPayrollCategory').invalid && addPayrollForm.get('addPayrollCategory').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"addPayrollForm.get('addPayrollCategory').invalid && addPayrollForm.get('addPayrollCategory').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Category is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Unit calculation</label>\\r\\n                        <div class=\\\"status-toggle\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"unit_calculation\\\" class=\\\"check\\\">\\r\\n                            <label for=\\\"unit_calculation\\\" class=\\\"checktoggle\\\">checkbox</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Unit Amount</label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <span class=\\\"input-group-text\\\">$</span>\\r\\n                            </div>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [class.invalid]=\\\"addPayrollForm.get('addPayrollUnit').invalid && addPayrollForm.get('addPayrollUnit').touched\\\"\\r\\n                            formControlName=\\\"addPayrollUnit\\\">\\r\\n                            <div\\r\\n                            *ngIf=\\\"addPayrollForm.get('addPayrollUnit').invalid && addPayrollForm.get('addPayrollUnit').touched\\\">\\r\\n                            <small\\r\\n                                *ngIf=\\\"addPayrollForm.get('addPayrollUnit').invalid && addPayrollForm.get('addPayrollUnit').touched\\\"\\r\\n                                class=\\\"text-danger\\\"> *Category is required</small>\\r\\n                        </div>\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <span class=\\\"input-group-text\\\">.00</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Assignee</label>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"addition_assignee\\\" id=\\\"addition_no_emp\\\"\\r\\n                                value=\\\"option1\\\" checked>\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"addition_no_emp\\\">\\r\\n                                No assignee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"addition_assignee\\\" id=\\\"addition_all_emp\\\"\\r\\n                                value=\\\"option2\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"addition_all_emp\\\">\\r\\n                                All employees\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"addition_assignee\\\"\\r\\n                                id=\\\"addition_single_emp\\\" value=\\\"option3\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"addition_single_emp\\\">\\r\\n                                Select Employee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <select class=\\\"select form-control\\\">\\r\\n                                <option>-</option>\\r\\n                                <option>Select All</option>\\r\\n                                <option>John Doe</option>\\r\\n                                <option>Richard Miles</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"submit-section\\\">\\r\\n                        <button class=\\\"btn btn-primary submit-btn\\\">Submit</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Add Addition Modal -->\\r\\n\\r\\n<!-- Edit Addition Modal -->\\r\\n<div id=\\\"edit_addition\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Edit Addition</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form (ngSubmit)=\\\"editPayroll()\\\" [formGroup]=\\\"editPayrollForm\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Name <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\"  [class.invalid]=\\\"editPayrollForm.get('editPayrollName').invalid && editPayrollForm.get('editPayrollName').touched\\\"\\r\\n                        formControlName=\\\"editPayrollName\\\">\\r\\n                        <div\\r\\n                        *ngIf=\\\"editPayrollForm.get('editPayrollName').invalid && editPayrollForm.get('editPayrollName').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"editPayrollForm.get('editPayrollName').invalid && editPayrollForm.get('editPayrollName').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Name is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Category <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <select class=\\\"select form-control\\\" [class.invalid]=\\\"editPayrollForm.get('editPayrollCategory').invalid && editPayrollForm.get('editPayrollCategory').touched\\\"\\r\\n                        formControlName=\\\"editPayrollCategory\\\">\\r\\n                            <option>Select a category</option>\\r\\n                            <option>Monthly remuneration</option>\\r\\n                            <option>Additional remuneration</option>\\r\\n                        </select>\\r\\n                        <div\\r\\n                        *ngIf=\\\"editPayrollForm.get('editPayrollCategory').invalid && editPayrollForm.get('editPayrollCategory').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"editPayrollForm.get('editPayrollCategory').invalid && editPayrollForm.get('editPayrollCategory').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Category is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Unit calculation</label>\\r\\n                        <div class=\\\"status-toggle\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"edit_unit_calculation\\\" class=\\\"check\\\">\\r\\n                            <label for=\\\"edit_unit_calculation\\\" class=\\\"checktoggle\\\">checkbox</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Unit Amount</label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <span class=\\\"input-group-text\\\">$</span>\\r\\n                            </div>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [class.invalid]=\\\"editPayrollForm.get('editPayrollUnit').invalid && editPayrollForm.get('editPayrollUnit').touched\\\"\\r\\n                            formControlName=\\\"editPayrollUnit\\\">\\r\\n                            <div\\r\\n                            *ngIf=\\\"editPayrollForm.get('editPayrollUnit').invalid && editPayrollForm.get('editPayrollUnit').touched\\\">\\r\\n                            <small\\r\\n                                *ngIf=\\\"editPayrollForm.get('editPayrollUnit').invalid && editPayrollForm.get('editPayrollUnit').touched\\\"\\r\\n                                class=\\\"text-danger\\\"> *Unit is required</small>\\r\\n                        </div>\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <span class=\\\"input-group-text\\\">.00</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Assignee</label>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"edit_addition_assignee\\\"\\r\\n                                id=\\\"edit_addition_no_emp\\\" value=\\\"option1\\\" checked>\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"edit_addition_no_emp\\\">\\r\\n                                No assignee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"edit_addition_assignee\\\"\\r\\n                                id=\\\"edit_addition_all_emp\\\" value=\\\"option2\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"edit_addition_all_emp\\\">\\r\\n                                All employees\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"edit_addition_assignee\\\"\\r\\n                                id=\\\"edit_addition_single_emp\\\" value=\\\"option3\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"edit_addition_single_emp\\\">\\r\\n                                Select Employee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <select class=\\\"select form-control\\\">\\r\\n                                <option>-</option>\\r\\n                                <option>Select All</option>\\r\\n                                <option>John Doe</option>\\r\\n                                <option>Richard Miles</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"submit-section\\\">\\r\\n                        <button class=\\\"btn btn-primary submit-btn\\\">Save</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Edit Addition Modal -->\\r\\n\\r\\n<!-- Delete Addition Modal -->\\r\\n<div class=\\\"modal custom-modal fade\\\" id=\\\"delete_addition\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-header\\\">\\r\\n                    <h3>Delete Addition</h3>\\r\\n                    <p>Are you sure want to delete?</p>\\r\\n                </div>\\r\\n                <div class=\\\"modal-btn delete-action\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <a  class=\\\"btn btn-primary continue-btn\\\" (click)=\\\"deletePayroll()\\\">Delete</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <a  data-dismiss=\\\"modal\\\"\\r\\n                                class=\\\"btn btn-primary cancel-btn\\\">Cancel</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Delete Addition Modal -->\\r\\n\\r\\n<!-- Add Overtime Modal -->\\r\\n<div id=\\\"add_overtime\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Add Overtime</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form (ngSubmit)=\\\"addOver()\\\" [formGroup]=\\\"addOverForm\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Name <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [class.invalid]=\\\"addOverForm.get('addOverName').invalid && addOverForm.get('addOverName').touched\\\"\\r\\n                        formControlName=\\\"addOverName\\\">\\r\\n                        <div\\r\\n                                    *ngIf=\\\"addOverForm.get('addOverName').invalid && addOverForm.get('addOverName').touched\\\">\\r\\n                                    <small\\r\\n                                        *ngIf=\\\"addOverForm.get('addOverName').invalid && addOverForm.get('addOverName').touched\\\"\\r\\n                                        class=\\\"text-danger\\\"> *Name is required</small>\\r\\n                                </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Rate Type <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <select class=\\\"select form-control\\\">\\r\\n                            <option>-</option>\\r\\n                            <option>Daily Rate</option>\\r\\n                            <option>Hourly Rate</option>\\r\\n                        </select>\\r\\n                       \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Rate <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\"  [class.invalid]=\\\"addOverForm.get('addOverRate').invalid && addOverForm.get('addOverRate').touched\\\"\\r\\n                        formControlName=\\\"addOverRate\\\">\\r\\n                        <div\\r\\n                        *ngIf=\\\"addOverForm.get('addOverRate').invalid && addOverForm.get('addOverRate').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"addOverForm.get('addOverRate').invalid && addOverForm.get('addOverRate').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Rate is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"submit-section\\\">\\r\\n                        <button class=\\\"btn btn-primary submit-btn\\\">Submit</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Add Overtime Modal -->\\r\\n\\r\\n<!-- Edit Overtime Modal -->\\r\\n<div id=\\\"edit_overtime\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Edit Overtime</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form (ngSubmit)=\\\"editOverSubmit()\\\" [formGroup]=\\\"editOverForm\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Name <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [class.invalid]=\\\"editOverForm.get('editOverName').invalid && editOverForm.get('editOverName').touched\\\"\\r\\n                        formControlName=\\\"editOverName\\\">\\r\\n                        <div\\r\\n                        *ngIf=\\\"editOverForm.get('editOverName').invalid && editOverForm.get('editOverName').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"editOverForm.get('editOverName').invalid && editOverForm.get('editOverName').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Name is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Rate Type <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <select class=\\\"select form-control\\\">\\r\\n                            <option>-</option>\\r\\n                            <option>Daily Rate</option>\\r\\n                            <option>Hourly Rate</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Rate <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [class.invalid]=\\\"editOverForm.get('editOverRate').invalid && editOverForm.get('editOverRate').touched\\\"\\r\\n                        formControlName=\\\"editOverRate\\\">\\r\\n                        <div\\r\\n                        *ngIf=\\\"editOverForm.get('editOverRate').invalid && editOverForm.get('editOverRate').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"editOverForm.get('editOverRate').invalid && editOverForm.get('editOverRate').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Rate is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"submit-section\\\">\\r\\n                        <button class=\\\"btn btn-primary submit-btn\\\">Save</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Edit Overtime Modal -->\\r\\n\\r\\n<!-- Delete Overtime Modal -->\\r\\n<div class=\\\"modal custom-modal fade\\\" id=\\\"delete_overtime\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-header\\\">\\r\\n                    <h3>Delete Overtime</h3>\\r\\n                    <p>Are you sure want to delete?</p>\\r\\n                </div>\\r\\n                <div class=\\\"modal-btn delete-action\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <a  class=\\\"btn btn-primary continue-btn\\\" (click)=\\\"deleteOver()\\\">Delete</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <a  data-dismiss=\\\"modal\\\"\\r\\n                                class=\\\"btn btn-primary cancel-btn\\\">Cancel</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Delete Overtime Modal -->\\r\\n\\r\\n<!-- Add Deduction Modal -->\\r\\n<div id=\\\"add_deduction\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Add Deduction</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form (ngSubmit)=\\\"addDeducts()\\\" [formGroup]=\\\"addDeductForm\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Name <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [class.invalid]=\\\"addDeductForm.get('addDeductName').invalid && addDeductForm.get('addDeductName').touched\\\"\\r\\n                        formControlName=\\\"addDeductName\\\">\\r\\n                        <div\\r\\n                        *ngIf=\\\"addDeductForm.get('addDeductName').invalid && addDeductForm.get('addDeductName').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"addDeductForm.get('addDeductName').invalid && addDeductForm.get('addDeductName').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Name is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Unit calculation</label>\\r\\n                        <div class=\\\"status-toggle\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"unit_calculation_deduction\\\" class=\\\"check\\\">\\r\\n                            <label for=\\\"unit_calculation_deduction\\\" class=\\\"checktoggle\\\">checkbox</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Unit Amount</label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <span class=\\\"input-group-text\\\">$</span>\\r\\n                            </div>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [class.invalid]=\\\"addDeductForm.get('addDeductUnit').invalid && addDeductForm.get('addDeductUnit').touched\\\"\\r\\n                            formControlName=\\\"addDeductUnit\\\">\\r\\n                            <div\\r\\n                        *ngIf=\\\"addDeductForm.get('addDeductUnit').invalid && addDeductForm.get('addDeductUnit').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"addDeductForm.get('addDeductUnit').invalid && addDeductForm.get('addDeductUnit').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Unit is required</small>\\r\\n                    </div>\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <span class=\\\"input-group-text\\\">.00</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Assignee</label>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"deduction_assignee\\\" id=\\\"deduction_no_emp\\\"\\r\\n                                value=\\\"option1\\\" checked>\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"deduction_no_emp\\\">\\r\\n                                No assignee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"deduction_assignee\\\"\\r\\n                                id=\\\"deduction_all_emp\\\" value=\\\"option2\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"deduction_all_emp\\\">\\r\\n                                All employees\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"deduction_assignee\\\"\\r\\n                                id=\\\"deduction_single_emp\\\" value=\\\"option3\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"deduction_single_emp\\\">\\r\\n                                Select Employee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <select class=\\\"select form-control\\\">\\r\\n                                <option>-</option>\\r\\n                                <option>Select All</option>\\r\\n                                <option>John Doe</option>\\r\\n                                <option>Richard Miles</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"submit-section\\\">\\r\\n                        <button class=\\\"btn btn-primary submit-btn\\\">Submit</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Add Deduction Modal -->\\r\\n\\r\\n<!-- Edit Deduction Modal -->\\r\\n<div id=\\\"edit_deduction\\\" class=\\\"modal custom-modal fade\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <h5 class=\\\"modal-title\\\">Edit Deduction</h5>\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <form (ngSubmit)=\\\"editDeductSubmit()\\\" [formGroup]=\\\"editDeductForm\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Name <span class=\\\"text-danger\\\">*</span></label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" [class.invalid]=\\\"editDeductForm.get('editDeductName').invalid && editDeductForm.get('editDeductName').touched\\\"\\r\\n                        formControlName=\\\"editDeductName\\\">\\r\\n                        <div\\r\\n                        *ngIf=\\\"editDeductForm.get('editDeductName').invalid && editDeductForm.get('editDeductName').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"editDeductForm.get('editDeductName').invalid && editDeductForm.get('editDeductName').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Name is required</small>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Unit calculation</label>\\r\\n                        <div class=\\\"status-toggle\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"edit_unit_calculation_deduction\\\" class=\\\"check\\\">\\r\\n                            <label for=\\\"edit_unit_calculation_deduction\\\" class=\\\"checktoggle\\\">checkbox</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Unit Amount</label>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                            <div class=\\\"input-group-prepend\\\">\\r\\n                                <span class=\\\"input-group-text\\\">$</span>\\r\\n                            </div>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" [class.invalid]=\\\"editDeductForm.get('editDeductunit').invalid && editDeductForm.get('editDeductunit').touched\\\"\\r\\n                            formControlName=\\\"editDeductunit\\\">\\r\\n                            <div\\r\\n                        *ngIf=\\\"editDeductForm.get('editDeductunit').invalid && editDeductForm.get('editDeductunit').touched\\\">\\r\\n                        <small\\r\\n                            *ngIf=\\\"editDeductForm.get('editDeductunit').invalid && editDeductForm.get('editDeductunit').touched\\\"\\r\\n                            class=\\\"text-danger\\\"> *Unit is required</small>\\r\\n                    </div>\\r\\n                            <div class=\\\"input-group-append\\\">\\r\\n                                <span class=\\\"input-group-text\\\">.00</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"d-block\\\">Assignee</label>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"edit_deduction_assignee\\\"\\r\\n                                id=\\\"edit_deduction_no_emp\\\" value=\\\"option1\\\" checked>\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"edit_deduction_no_emp\\\">\\r\\n                                No assignee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"edit_deduction_assignee\\\"\\r\\n                                id=\\\"edit_deduction_all_emp\\\" value=\\\"option2\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"edit_deduction_all_emp\\\">\\r\\n                                All employees\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"edit_deduction_assignee\\\"\\r\\n                                id=\\\"edit_deduction_single_emp\\\" value=\\\"option3\\\">\\r\\n                            <label class=\\\"form-check-label\\\" for=\\\"edit_deduction_single_emp\\\">\\r\\n                                Select Employee\\r\\n                            </label>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <select class=\\\"select form-control\\\">\\r\\n                                <option>-</option>\\r\\n                                <option>Select All</option>\\r\\n                                <option>John Doe</option>\\r\\n                                <option>Richard Miles</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"submit-section\\\">\\r\\n                        <button class=\\\"btn btn-primary submit-btn\\\">Save</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Edit Addition Modal -->\\r\\n\\r\\n<!-- Delete Deduction Modal -->\\r\\n<div class=\\\"modal custom-modal fade\\\" id=\\\"delete_deduction\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <div class=\\\"form-header\\\">\\r\\n                    <h3>Delete Deduction</h3>\\r\\n                    <p>Are you sure want to delete?</p>\\r\\n                </div>\\r\\n                <div class=\\\"modal-btn delete-action\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <a  class=\\\"btn btn-primary continue-btn\\\" (click)=\\\"deleteDeduct()\\\">Delete</a>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <a  data-dismiss=\\\"modal\\\"\\r\\n                                class=\\\"btn btn-primary cancel-btn\\\">Cancel</a>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Delete Deduction Modal -->\";","export default \"<p>salary-process-job-show works!</p>\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";  \r\nimport { PayrollService } from '../../service/payroll.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-salary-view',\r\n  templateUrl: './salary-view.component.html',\r\n  styleUrls: ['./salary-view.component.css']\r\n})\r\nexport class SalaryViewComponent implements OnInit {\r\n\r\n  public baseUrl = environment.baseUrl;\r\n  public payslipId: Number;\r\n  public payslipData: any = {};\r\n\r\n  constructor(\r\n    private payrollService: PayrollService, \r\n    private spinnerService: NgxSpinnerService,\r\n    private route : ActivatedRoute\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadPayslipData();\r\n    \r\n  }\r\n\r\n\r\n  public loadPayslipData(){\r\n\r\n    this.payslipId =  this.route.snapshot.params.id;\r\n    let apiURL = this.baseUrl + \"/getEmpPayslip/\" +  this.payslipId;\r\n    let queryParams: any = {};\r\n\r\n    \r\n    this.spinnerService.show();\r\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\r\n      (response: any) => {\r\n        this.payslipData = response;\r\n        this.spinnerService.hide();  \r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      } \r\n    );\r\n\r\n  }\r\n\r\n\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-salary-process-job-create',\n  templateUrl: './salary-process-job-create.component.html',\n  styleUrls: ['./salary-process-job-create.component.css']\n})\nexport class SalaryProcessJobCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<p>salary-process-job-edit works!</p>\\n\";","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Payroll Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Home</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\">Payroll Element</li>\\n                    <li class=\\\"breadcrumb-item active\\\">Show</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <a class=\\\"btn add-btn\\\" routerLink=\\\"/payroll/element-value/list\\\"><i class=\\\"fa fa-share\\\"></i> Back To List</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\"> -->\\n                    <!-- <h4 class=\\\"card-title mb-0\\\">Payroll Item Value</h4> -->\\n                <!-- </div>  -->\\n                <div class=\\\"card-body\\\">\\n\\n                    <form id=\\\"formERP\\\" novalidate (ngSubmit)=\\\"saveUpdatedFormData()\\\" [formGroup]=\\\"myForm\\\">\\n                        \\n                        <fieldset class=\\\"row fieldsetWithoutBorder\\\">\\n                            <legend></legend>\\n                            <div class=\\\"col-12\\\">\\n    \\n                                <div class=\\\"form-group row\\\">\\n                                    <label class=\\\"col-form-label col-md-2\\\">Employee</label>\\n                                    <div class=\\\"col-md-10\\\">\\n                                        <span>: &nbsp;</span><span>{{myFormData.empTitle}}</span>\\n                                    </div>\\n                                </div>\\n                                \\n                                 <div class=\\\"form-group row\\\">\\n                                    <label class=\\\"col-form-label col-md-2\\\">Element Title</label>\\n                                    <div class=\\\"col-md-10\\\">\\n                                        <span>: &nbsp;</span><span>{{titleDecode[myFormData.elementTitle]}}</span>\\n                                    </div>\\n                                </div>\\n                              \\n                                <div class=\\\"form-group row\\\">\\n                                    <label class=\\\"col-form-label col-md-2\\\">Amount</label>\\n                                    <div class=\\\"col-md-10\\\">\\n                                        <span>: &nbsp;</span><span>{{myFormData.elementAmount}}</span>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\\"form-group row\\\">\\n                                    <label class=\\\"col-form-label col-md-2\\\">Start Date</label>\\n                                    <div class=\\\"col-md-10\\\">\\n                                        <span>: &nbsp;</span><span>{{myFormData.activeStartDate}}</span>\\n                                    </div>\\n                                </div>\\n        \\n                                <div class=\\\"form-group row\\\">\\n                                    <label class=\\\"col-form-label col-md-2\\\">End Date</label>\\n                                    <div class=\\\"col-md-10\\\">\\n                                        <span>: &nbsp;</span><span>{{myFormData.activeEndDate}}</span>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </fieldset>\\n\\n\\n                        <fieldset class=\\\"row fieldsetBorder logBox\\\">\\n                            <legend>System Log Information</legend>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"col-form-label\\\">ID</label>\\n                                <div class=\\\"\\\">\\n                                    <span>{{myFormData.id}}</span>\\n                                </div>\\n                            </div>\\n                           \\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"col-form-label\\\">Creation Time</label>\\n                                <div class=\\\"\\\">\\n                                    <span>{{myFormData.creationDateTime}}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"col-form-label\\\">Creation User</label>\\n                                <div class=\\\"\\\">\\n                                    <span>{{myFormData.creationUser}}</span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"col-form-label\\\">Last Update Time</label>\\n                                <div class=\\\"\\\">\\n                                    <span>{{myFormData.lastUpdateDateTime}}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"col-form-label\\\">Last Update User</label>\\n                                <div class=\\\"\\\">\\n                                    <span>{{myFormData.lastUpdateUser}}</span>\\n                                </div>\\n                            </div>\\n\\n                        </fieldset>\\n\\n                        <div class=\\\"text-right\\\">\\n                            <a class=\\\"btn btn-primary btn-ripple\\\" routerLink=\\\"/payroll/element-value/list\\\"><i class=\\\"fa fa-share\\\"></i> Close</a>\\n                            &nbsp;\\n                        </div>\\n\\n                       \\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n<!-- /Page Content -->\\n\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\";","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Payroll Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Home</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\">Payroll Element</li>\\n                    <li class=\\\"breadcrumb-item active\\\">Edit</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <a class=\\\"btn add-btn\\\" routerLink=\\\"/payroll/element-value/list\\\"><i class=\\\"fa fa-share\\\"></i> Back To List</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\"> -->\\n                    <!-- <h4 class=\\\"card-title mb-0\\\">Payroll Item Value</h4> -->\\n                <!-- </div>  -->\\n                <div class=\\\"card-body\\\">\\n                    <form novalidate (ngSubmit)=\\\"saveUpdatedFormData()\\\" [formGroup]=\\\"myForm\\\">\\n                        \\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">ID</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"id\\\" readonly disabled>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Employee</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"empTitle\\\">\\n                            </div>\\n                        </div>\\n                        \\n                         <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Element Title</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <select class=\\\"form-control\\\" formControlName=\\\"elementTitle\\\">\\n                                    <option value=\\\"\\\">Select</option>\\n                                    <option value=\\\"HRA\\\">House Rent Allowance</option>\\n                                    <option value=\\\"MDL_ALW\\\">Medical Allowance</option>\\n                                    <option value=\\\"OT_ALW\\\">Overtime Allowance</option>\\n                                    <option value=\\\"LTA\\\">Leave Travel Allowance</option>\\n                                    <option value=\\\"EA\\\">Entertainment Allowance</option>\\n                                    <option value=\\\"UCA_ALW\\\">Uniform Allowance / Corporate Attire</option>\\n                                    <option value=\\\"FAMILY_ALW\\\">Family Allowance</option>\\n                                    <option value=\\\"EDA\\\">Education Allowance</option>\\n                                    <option value=\\\"PRJ_ALW\\\">Project Allowance</option>\\n                                    <option value=\\\"HOSTEL_ALW\\\">Hostel Allowance</option>\\n                                    <option value=\\\"CHILD_EDU_ALW\\\">Children's education Allowance</option>\\n                                    <option value=\\\"CHILD_HOSTEL_ALW\\\">Children's hostel Allowance</option>\\n                                    <option value=\\\"PROF_ALW\\\">Professional pursuit/research Allowance</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                      \\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Amount</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"elementAmount\\\">\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">Start Date</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <div class=\\\"cal-icon\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control datetimepicker\\\" formControlName=\\\"activeStartDate\\\" \\n                                    bsDatepicker\\n                                    [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-2\\\">End Date</label>\\n                            <div class=\\\"col-md-10\\\">\\n                                <div class=\\\"cal-icon\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"activeEndDate\\\" \\n                                    bsDatepicker \\n                                    [bsConfig]=\\\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"text-right\\\">\\n                            <a class=\\\"btn btn-warning btn-ripple\\\" routerLink=\\\"/payroll/element-value/list\\\"><i class=\\\"fa fa-share\\\"></i> Cancel</a>\\n                            &nbsp; &nbsp; &nbsp;\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-ripple\\\">\\n                                <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Save &nbsp;&nbsp;&nbsp;\\n                            </button>\\n                        </div>\\n\\n                       \\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n<!-- /Page Content -->\\n\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\";","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n} from \"@angular/core\";\r\nimport { PayrollService } from \"../../service/payroll.service\";\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";  \r\nimport { FormGroup, FormControl } from '@angular/forms'\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: \"app-employee-salary\",\r\n  templateUrl: \"./employee-salary.component.html\",\r\n  styleUrls: [\"./employee-salary.component.css\"],\r\n})\r\nexport class EmployeeSalaryComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  // cores\r\n  public baseUrl = environment.baseUrl;\r\n\r\n  public pipe = new DatePipe(\"en-US\");\r\n  public myFromGroup: FormGroup;\r\n\r\n  // list\r\n  public listData: any = [];\r\n  public pngConfig: any;\r\n  \r\n  // search fields\r\n  private srcFromDate: string;\r\n  private srcToDate: string;\r\n  private srcEmpName: string;\r\n  private srcEmpCode: string;\r\n \r\n\r\n  constructor(\r\n    private payrollService: PayrollService,\r\n    private spinnerService: NgxSpinnerService\r\n  ) {\r\n\r\n    this.pngConfig = {\r\n      // my props\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      totalItem: 50,\r\n      pageSizes: [3, 5, 10, 25, 50, 100, 200, 500, 1000],\r\n      pngDiplayLastSeq: 10,\r\n      // ngx plugin props\r\n      itemsPerPage: 10,\r\n      currentPage: 1,\r\n      totalItems: 50\r\n    };\r\n\r\n  }\r\n\r\n  \r\n  ngOnInit() {\r\n  \r\n    // set init params\r\n    this.myFromGroup = new FormGroup({\r\n      pageSize: new FormControl()\r\n    });\r\n    this.myFromGroup.get('pageSize').setValue(this.pngConfig.pageSize);\r\n\r\n    // bind event & action\r\n    this.bindFromFloatingLabel();\r\n\r\n    // get List Data\r\n    this.getListData();\r\n\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      //\r\n    }, 1000);\r\n  }\r\n\r\n\r\n\r\n  private bindFromFloatingLabel(){\r\n\r\n    var self = this;\r\n\r\n    // for floating label\r\n    if ($(\".floating\").length > 0) {\r\n      $(\".floating\")\r\n        .on(\"focus blur\", function (e) {\r\n          $(this)\r\n            .parents(\".form-focus\")\r\n            .toggleClass(\"focused\", e.type === \"focus\" || this.value.length > 0);\r\n        })\r\n        .trigger(\"blur\");\r\n    }\r\n\r\n    $('.filter-row').find('input, select, textarea').keyup(function(e){\r\n\r\n      console.log(e.keyCode)\r\n      if(e.keyCode == 13){\r\n        self.getSearchData();\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // list & search methods --------------------------------------------------------------------------------------\r\n  searchByFromDate(val) {\r\n\r\n    let myFromDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\r\n    this.srcFromDate = myFromDateIso;\r\n    console.log(myFromDateIso);\r\n    this.bindFromFloatingLabel();\r\n\r\n  }\r\n  searchByToDate(val) {\r\n\r\n    let myToDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\r\n    this.srcToDate = myToDateIso;\r\n    console.log(myToDateIso);\r\n    this.bindFromFloatingLabel();\r\n\r\n  }\r\n  searchByEmpName(val) {\r\n\r\n    console.log(val);\r\n    this.srcEmpName = val;\r\n\r\n  }\r\n  searchByEmpCode(val) {\r\n\r\n    console.log(val);\r\n    this.srcEmpCode = val;\r\n\r\n  }\r\n  searchBySearchButton(){\r\n    console.log(this.srcFromDate);\r\n    console.log(this.srcToDate);\r\n    console.log(this.srcEmpName);\r\n    console.log(this.srcEmpCode);\r\n    // call get list method\r\n    this.getListData();\r\n  }\r\n\r\n  \r\n  public getSearchData() {\r\n    this.getListData();\r\n  }\r\n\r\n\r\n  private getUserQueryParams(page: number, pageSize: number): any {\r\n\r\n    let params: any = {};\r\n\r\n    if (page) {\r\n      params[`pageNum`] = page - 0;\r\n    }\r\n    if (pageSize) {\r\n      params[`pageSize`] = pageSize;\r\n    }\r\n\r\n    // push other attributes\r\n    if(this.srcEmpCode){\r\n      params[`empCode`] = this.srcEmpCode;\r\n    }\r\n    if(this.srcEmpName){\r\n      params[`empName`] = this.srcEmpName;\r\n    }\r\n    if(this.srcFromDate && this.srcToDate){\r\n      params[`fromDate`] = this.srcFromDate;\r\n      params[`toDate`] = this.srcToDate;\r\n    }\r\n\r\n\r\n    return params;\r\n    \r\n  }\r\n\r\n\r\n  private getListData() {\r\n\r\n    let apiURL = this.baseUrl + \"/empSalary\";\r\n\r\n    let queryParams: any = {};\r\n    const params = this.getUserQueryParams(this.pngConfig.pageNum, this.pngConfig.pageSize);\r\n    queryParams = params;\r\n\r\n    \r\n    this.spinnerService.show();\r\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\r\n      (response: any) => {\r\n        this.listData = response.objectList;\r\n        this.pngConfig.totalItem = response.totalItems;\r\n        this.pngConfig.totalItems = response.totalItems;\r\n        this.setDisplayLastSequence();\r\n        this.spinnerService.hide();  \r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      } \r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n  // pagination handling methods start -----------------------------------------------------------------------\r\n  setDisplayLastSequence(){\r\n    this.pngConfig.pngDiplayLastSeq = (((this.pngConfig.pageNum - 1 ) * this.pngConfig.pageSize) + this.pngConfig.pageSize);\r\n    if(this.listData.length < this.pngConfig.pageSize){\r\n      this.pngConfig.pngDiplayLastSeq = (((this.pngConfig.pageNum - 1 ) * this.pngConfig.pageSize) + this.pngConfig.pageSize);\r\n    }\r\n    if(this.pngConfig.totalItem < this.pngConfig.pngDiplayLastSeq){\r\n      this.pngConfig.pngDiplayLastSeq = this.pngConfig.totalItem;\r\n    }\r\n  }\r\n  handlePageChange(event: number){\r\n    this.pngConfig.pageNum = event;\r\n    // set for ngx\r\n    this.pngConfig.currentPage = this.pngConfig.pageNum;\r\n    this.getListData();\r\n  } \r\n  handlePageSizeChange(event: any): void {\r\n    this.pngConfig.pageSize = event.target.value;\r\n    this.pngConfig.pageNum = 1;\r\n    // set for ngx\r\n    this.pngConfig.itemsPerPage = this.pngConfig.pageSize;\r\n    this.getListData();\r\n  }\r\n  // pagination handling methods end -------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    // Do not forget to unsubscribe the event\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-salary-process-job-show',\n  templateUrl: './salary-process-job-show.component.html',\n  styleUrls: ['./salary-process-job-show.component.css']\n})\nexport class SalaryProcessJobShowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<p>salary-process-job-create works!</p>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXlyb2xsLmNvbXBvbmVudC5jc3MifQ== */\";","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/* ================= Purpale Color =========================== */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheXJvbGwtZWxlbWVudC12YWx1ZS1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7QUFDZDs7Ozs7O0FBTUEsZ0VBQWdFOzs7Ozs7QUFDaEU7Q0FDQyxxQkFBcUI7Q0FDckIsOEJBQThCO0lBQzNCLGdCQUFnQjtBQUNwQjs7Ozs7O0FBRUE7Q0FDQyxxQkFBcUI7Q0FDckIsVUFBVTtDQUVWLDJFQUEyRTtDQUMzRSIsImZpbGUiOiJwYXlyb2xsLWVsZW1lbnQtdmFsdWUtY3JlYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8qID09PT09PT09PT09PT09PT09IFB1cnBhbGUgQ29sb3IgPT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbmlucHV0LmZvcm0tY29udHJvbCwgc2VsZWN0LmZvcm0tY29udHJvbCwgdGV4dGFyZWEuZm9ybS1jb250cm9sIHtcclxuXHRib3JkZXItY29sb3I6ICM2NjdlZWE7XHJcblx0Ym9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjNjY3ZWVhO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTsgXHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG5cdGJvcmRlci1jb2xvcjogIzcwNUNCQTtcclxuXHRvdXRsaW5lOiAwO1xyXG5cdC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpO1xyXG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTsgXHJcbiB9XHJcbiAiXX0= */\";","import { Component, \n  OnInit,\n  AfterViewInit,\n  OnDestroy\n } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { DatePipe } from \"@angular/common\";\nimport { FormGroup, FormControl } from '@angular/forms'\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { timer } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { PayrollService } from 'src/app/all-modules/payroll/service/payroll.service';\n\n\ndeclare const $: any;\n@Component({\n  selector: 'app-salary-process-job-list',\n  templateUrl: './salary-process-job-list.component.html',\n  styleUrls: ['./salary-process-job-list.component.css']\n})\nexport class SalaryProcessJobListComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  // cores\n  public baseUrl = environment.baseUrl;\n\n  subscription: Subscription;\n  everyFiveSeconds: Observable<number> = timer(0, 11000); // 11 second\n\n  public pipe = new DatePipe(\"en-US\");\n  public myFromGroup: FormGroup;\n\n  // list\n  public listData: any = [];\n  public configPgn: any;\n  \n  // search fields\n  private srcFromDate: string;\n  private srcToDate: string;\n  private srcEmpCode: string;\n \n\n  constructor(\n    private payrollService: PayrollService,\n    private spinnerService: NgxSpinnerService\n  ) {\n\n    this.configPgn = {\n      // my props\n      pageNum: 1,\n      pageSize: 10,\n      totalItem: 50,\n      pageSizes: [3, 5, 10, 25, 50, 100, 200, 500, 1000],\n      pgnDiplayLastSeq: 10,\n      // ngx plugin props\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: 50\n    };\n\n  }\n\n  \n  ngOnInit(): void {\n  \n    // set init params\n    this.myFromGroup = new FormGroup({\n      pageSize: new FormControl()\n    });\n    this.myFromGroup.get('pageSize').setValue(this.configPgn.pageSize);\n\n    // bind event & action\n    this.bindFromFloatingLabel();\n\n    // get List Data\n    this.getListData();\n\n    this.subscription = this.everyFiveSeconds.subscribe(() => {\n      this.getListData();\n    });\n\n  }\n\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      //\n    }, 1000);\n  }\n\n\n\n  private bindFromFloatingLabel(){\n\n    var self = this;\n\n    // for floating label\n    if ($(\".floating\").length > 0) {\n      $(\".floating\")\n        .on(\"focus blur\", function (e) {\n          $(this)\n            .parents(\".form-focus\")\n            .toggleClass(\"focused\", e.type === \"focus\" || this.value.length > 0);\n        })\n        .trigger(\"blur\");\n    }\n\n    $('.filter-row').find('input, select, textarea').keyup(function(e){\n\n      console.log(e.keyCode)\n      if(e.keyCode == 13){\n        self.getSearchData();\n      }\n\n    });\n\n  }\n\n\n  // list & search methods --------------------------------------------------------------------------------------\n  searchByFromDate(val) {\n\n    let myFromDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\n    this.srcFromDate = myFromDateIso;\n    console.log(myFromDateIso);\n    this.bindFromFloatingLabel();\n\n  }\n  searchByToDate(val) {\n\n    let myToDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\n    this.srcToDate = myToDateIso;\n    console.log(myToDateIso);\n    this.bindFromFloatingLabel();\n\n  }\n\n  searchByEmpCode(val) {\n\n    console.log(val);\n    this.srcEmpCode = val;\n\n  }\n  searchBySearchButton(){\n    console.log(this.srcFromDate);\n    console.log(this.srcToDate);\n    console.log(this.srcEmpCode);\n    // call get list method\n    this.getListData();\n  }\n\n  \n  public getSearchData() {\n    this.getListData();\n  }\n\n\n  private getUserQueryParams(page: number, pageSize: number): any {\n\n    let params: any = {};\n\n    if (page) {\n      params[`pageNum`] = page - 0;\n    }\n    if (pageSize) {\n      params[`pageSize`] = pageSize;\n    }\n\n    // push other attributes\n    if(this.srcEmpCode){\n      params[`empCode`] = this.srcEmpCode;\n    }\n    if(this.srcFromDate && this.srcToDate){\n      params[`fromDate`] = this.srcFromDate;\n      params[`toDate`] = this.srcToDate;\n    }\n\n\n    return params;\n    \n  }\n\n\n  private getListData() {\n\n    let apiURL = this.baseUrl + \"/api/salaryProcessJP/getList\";\n\n    let queryParams: any = {};\n    const params = this.getUserQueryParams(this.configPgn.pageNum, this.configPgn.pageSize);\n    queryParams = params;\n\n    this.spinnerService.show();\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\n      (response: any) => {\n        this.listData = response.objectList;\n        this.configPgn.totalItem = response.totalItems;\n        this.configPgn.totalItems = response.totalItems;\n        this.setDisplayLastSequence();\n        this.spinnerService.hide();  \n      },\n      (error) => {\n        console.log(error)\n      } \n    );\n\n  }\n\n\n\n  // pagination handling methods start -----------------------------------------------------------------------\n  setDisplayLastSequence(){\n    this.configPgn.pngDiplayLastSeq = (((this.configPgn.pageNum - 1 ) * this.configPgn.pageSize) + this.configPgn.pageSize);\n    if(this.listData.length < this.configPgn.pageSize){\n      this.configPgn.pngDiplayLastSeq = (((this.configPgn.pageNum - 1 ) * this.configPgn.pageSize) + this.configPgn.pageSize);\n    }\n    if(this.configPgn.totalItem < this.configPgn.pngDiplayLastSeq){\n      this.configPgn.pngDiplayLastSeq = this.configPgn.totalItem;\n    }\n  }\n  handlePageChange(event: number){\n    this.configPgn.pageNum = event;\n    // set for ngx\n    this.configPgn.currentPage = this.configPgn.pageNum;\n    this.getListData();\n  }\n  handlePageSizeChange(event: any): void {\n    this.configPgn.pageSize = event.target.value;\n    this.configPgn.pageNum = 1;\n    // set for ngx\n    this.configPgn.itemsPerPage = this.configPgn.pageSize;\n    this.getListData();\n  }\n  // pagination handling methods end -------------------------------------------------------------------------\n\n\n\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.subscription.unsubscribe();\n  }\n\n\n}\n","import { Component, OnInit,HostListener, NgZone } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payroll',\r\n  templateUrl: './payroll.component.html',\r\n  styleUrls: ['./payroll.component.css']\r\n})\r\n@HostListener('window: resize', ['$event'])\r\nexport class PayrollComponent implements OnInit {\r\n\r\n  public innerHeight: any;\r\n  getScreenHeight() {\r\n    this.innerHeight = window.innerHeight + 'px';\r\n  }\r\n\r\n  constructor(private ngZone: NgZone) {\r\n    window.onresize = (e) => {\r\n      this.ngZone.run(() => {\r\n        this.innerHeight = window.innerHeight + 'px';\r\n      });\r\n    };\r\n    this.getScreenHeight();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onResize(event) {\r\n    this.innerHeight = event.target.innerHeight + 'px';\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { DatePipe } from \"@angular/common\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { FormGroup, FormControl } from '@angular/forms'\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { PayrollService } from '../../../service/payroll.service';\n\ndeclare const $: any;\n@Component({\n  selector: 'app-payroll-element-value-list',\n  templateUrl: './payroll-element-value-list.component.html',\n  styleUrls: ['./payroll-element-value-list.component.css']\n})\nexport class PayrollElementValueListComponent implements OnInit, OnDestroy {\n\n  // cores\n  public baseUrl = environment.baseUrl;\n\n  public pipe = new DatePipe(\"en-US\");\n  public myFromGroup: FormGroup;\n\n  public editId: any;\n  public tempId: any;\n  // list\n  public listData: any = [];\n  public configPgn: any;\n  \n  // search fields\n  private srcFromDate: string;\n  private srcToDate: string;\n  private srcEmpCode: string;\n\n  // translate fields\n  public titleDecode = {\n    HRA: \"House Rent Allowance\",\n    MDL_ALW: \"Medical Allowance\",\n    OT_ALW: \"Overtime Allowance\",\n    LTA: \"Leave Travel Allowance\",\n    EA: \"Entertainment Allowance\",\n    UCA_ALW: \"Uniform Allowance / Corporate Attire\",\n    FAMILY_ALW: \"Family Allowance\",\n    EDA: \"Education Allowance\",\n    PRJ_ALW: \"Project Allowance\",\n    HOSTEL_ALW: \"Hostel Allowance\",\n    CHILD_EDU_ALW: \"Children's education Allowance\",\n    CHILD_HOSTEL_ALW: \"Children's hostel Allowance\",\n    PROF_ALW: \"Professional pursuit/research Allowance\"\n  };\n \n\n  constructor(\n    private payrollService: PayrollService,\n    private spinnerService: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n\n    this.configPgn = {\n      // my props\n      pageNum: 1,\n      pageSize: 10,\n      totalItem: 50,\n      pageSizes: [3, 5, 10, 25, 50, 100, 200, 500, 1000],\n      pgnDiplayLastSeq: 10,\n      // ngx plugin props\n      itemsPerPage: 10,\n      currentPage: 1,\n      totalItems: 50\n    };\n\n  }\n\n  \n  ngOnInit(): void {\n  \n    // set init params\n    this.myFromGroup = new FormGroup({\n      pageSize: new FormControl()\n    });\n    this.myFromGroup.get('pageSize').setValue(this.configPgn.pageSize);\n\n    // bind event & action\n    this.bindFromFloatingLabel();\n\n    // get List Data\n    this.getListData();\n\n  }\n\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      //\n    }, 1000);\n  }\n\n\n\n  private bindFromFloatingLabel(){\n\n    var self = this;\n\n    // for floating label\n    if ($(\".floating\").length > 0) {\n      $(\".floating\")\n        .on(\"focus blur\", function (e) {\n          $(this)\n            .parents(\".form-focus\")\n            .toggleClass(\"focused\", e.type === \"focus\" || this.value.length > 0);\n        })\n        .trigger(\"blur\");\n    }\n\n    $('.filter-row').find('input, select, textarea').keyup(function(e){\n\n      console.log(e.keyCode)\n      if(e.keyCode == 13){\n        self.getSearchData();\n      }\n\n    });\n\n  }\n\n\n  // list & search methods --------------------------------------------------------------------------------------\n  searchByFromDate(val) {\n\n    let myFromDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\n    this.srcFromDate = myFromDateIso;\n    console.log(myFromDateIso);\n    this.bindFromFloatingLabel();\n\n  }\n  searchByToDate(val) {\n\n    let myToDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\n    this.srcToDate = myToDateIso;\n    console.log(myToDateIso);\n    this.bindFromFloatingLabel();\n\n  }\n\n  searchByEmpCode(val) {\n\n    console.log(val);\n    this.srcEmpCode = val;\n\n  }\n  searchBySearchButton(){\n    console.log(this.srcFromDate);\n    console.log(this.srcToDate);\n    console.log(this.srcEmpCode);\n    // call get list method\n    this.getListData();\n  }\n\n  \n  public getSearchData() {\n    this.getListData();\n  }\n\n\n  private getUserQueryParams(page: number, pageSize: number): any {\n\n    let params: any = {};\n\n    if (page) {\n      params[`pageNum`] = page - 0;\n    }\n    if (pageSize) {\n      params[`pageSize`] = pageSize;\n    }\n\n    // push other attributes\n    if(this.srcEmpCode){\n      params[`empCode`] = this.srcEmpCode;\n    }\n    if(this.srcFromDate && this.srcToDate){\n      params[`fromDate`] = this.srcFromDate;\n      params[`toDate`] = this.srcToDate;\n    }\n\n    return params;\n    \n  }\n\n\n  private getListData() {\n\n    let apiURL = this.baseUrl + \"/api/payrollElValue/getList\";\n\n    let queryParams: any = {};\n    const params = this.getUserQueryParams(this.configPgn.pageNum, this.configPgn.pageSize);\n    queryParams = params;\n\n    this.spinnerService.show();\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\n      (response: any) => {\n        this.listData = response.objectList;\n        this.configPgn.totalItem = response.totalItems;\n        this.configPgn.totalItems = response.totalItems;\n        this.setDisplayLastSequence();\n        this.spinnerService.hide();  \n      },\n      (error) => {\n        console.log(error)\n      } \n    );\n\n  }\n\n  public deleteEnityData( dataId ){\n\n    let apiURL = this.baseUrl + \"/api/payrollElValue/delete/\" + dataId;\n    console.log(apiURL);\n\n    let formData: any = {};\n    formData.rEntityName = \"PayrollElementValue\";\n    formData.rActiveOperation = \"delete\";\n\n    this.spinnerService.show();\n    this.payrollService.sendDeleteRequest(apiURL, formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.spinnerService.hide();  \n        $(\"#delete_entity\").modal(\"hide\");\n        this.toastr.success(\"Successfully item is deleted\", \"Success\");\n        this.getListData();\n      },\n      (error) => {\n        console.log(error);\n        this.spinnerService.hide();  \n      }\n    );\n\n  }\n\n\n  // pagination handling methods start -----------------------------------------------------------------------\n  setDisplayLastSequence(){\n    this.configPgn.pngDiplayLastSeq = (((this.configPgn.pageNum - 1 ) * this.configPgn.pageSize) + this.configPgn.pageSize);\n    if(this.listData.length < this.configPgn.pageSize){\n      this.configPgn.pngDiplayLastSeq = (((this.configPgn.pageNum - 1 ) * this.configPgn.pageSize) + this.configPgn.pageSize);\n    }\n    if(this.configPgn.totalItem < this.configPgn.pngDiplayLastSeq){\n      this.configPgn.pngDiplayLastSeq = this.configPgn.totalItem;\n    }\n  }\n  handlePageChange(event: number){\n    this.configPgn.pageNum = event;\n    // set for ngx\n    this.configPgn.currentPage = this.configPgn.pageNum;\n    this.getListData();\n  }\n  handlePageSizeChange(event: any): void {\n    this.configPgn.pageSize = event.target.value;\n    this.configPgn.pageNum = 1;\n    // set for ngx\n    this.configPgn.itemsPerPage = this.configPgn.pageSize;\n    this.getListData();\n  }\n  // pagination handling methods end -------------------------------------------------------------------------\n\n\n\n\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-salary-process-job-edit',\n  templateUrl: './salary-process-job-edit.component.html',\n  styleUrls: ['./salary-process-job-edit.component.css']\n})\nexport class SalaryProcessJobEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/* ================= Purpale Color =========================== */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBheXJvbGwtZWxlbWVudC12YWx1ZS1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2Q7Ozs7OztBQU1BLGdFQUFnRTs7Ozs7O0FBQ2hFO0NBQ0MscUJBQXFCO0NBQ3JCLDhCQUE4QjtJQUMzQixnQkFBZ0I7QUFDcEI7Ozs7OztBQUVBO0NBQ0MscUJBQXFCO0NBQ3JCLFVBQVU7Q0FFViwyRUFBMkU7Q0FDM0UiLCJmaWxlIjoicGF5cm9sbC1lbGVtZW50LXZhbHVlLWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuLyogPT09PT09PT09PT09PT09PT0gUHVycGFsZSBDb2xvciA9PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuaW5wdXQuZm9ybS1jb250cm9sLCBzZWxlY3QuZm9ybS1jb250cm9sLCB0ZXh0YXJlYS5mb3JtLWNvbnRyb2wge1xyXG5cdGJvcmRlci1jb2xvcjogIzY2N2VlYTtcclxuXHRib3JkZXItbGVmdDogM3B4IHNvbGlkICM2NjdlZWE7XHJcbiAgICBib3gtc2hhZG93OiBub25lOyBcclxufVxyXG5cclxuLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNzA1Q0JBO1xyXG5cdG91dGxpbmU6IDA7XHJcblx0LXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiKDAgMCAwIC8gOCUpLCAwIDAgOHB4IHJnYigxMDIgMTc1IDIzMyAvIDYwJSk7XHJcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpOyBcclxuIH1cclxuICJdfQ== */\";"]}
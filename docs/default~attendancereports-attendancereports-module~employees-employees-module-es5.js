(function () {
  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~attendancereports-attendancereports-module~employees-employees-module"], {
    /***/
    "+s0g":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/nl.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function s0g(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Dutch [nl]
      //! author : Joris Röling : https://github.com/jorisroling
      //! author : Jacob Middag : https://github.com/middagj
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
            monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i],
            monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
        var nl = moment.defineLocale('nl', {
          months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
          monthsShort: function monthsShort(m, format) {
            if (!m) {
              return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
          weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
          weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            w: 'één week',
            ww: '%d weken',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return nl;
      });
      /***/

    },

    /***/
    "+tSY":
    /*!**************************************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/employee-page-content/employee-page-content.component.css ***!
      \**************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function tSY(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\r\n.content {\r\n\tpadding: 30px;\r\n}\r\n\r\n.pgn-pageSizeOption {\r\n\tpadding: 3px;\r\n}\r\n\r\n/* ================= Purpale Color =========================== */\r\n\r\ninput.form-control, select.form-control, textarea.form-control {\r\n\tborder-color: #667eea;\r\n\tborder-left: 3px solid #667eea;\r\n    box-shadow: none; \r\n}\r\n\r\n.form-control:focus {\r\n\tborder-color: #705CBA;\r\n\toutline: 0;\r\n\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \r\n }\r\n \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlLXBhZ2UtY29udGVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtDQUNDLGFBQWE7QUFDZDs7QUFFQTtDQUNDLFlBQVk7QUFDYjs7QUFHQSxnRUFBZ0U7O0FBQ2hFO0NBQ0MscUJBQXFCO0NBQ3JCLDhCQUE4QjtJQUMzQixnQkFBZ0I7QUFDcEI7O0FBRUE7Q0FDQyxxQkFBcUI7Q0FDckIsVUFBVTtDQUVWLDJFQUEyRTtDQUMzRSIsImZpbGUiOiJlbXBsb3llZS1wYWdlLWNvbnRlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufVxyXG5cclxuLnBnbi1wYWdlU2l6ZU9wdGlvbiB7XHJcblx0cGFkZGluZzogM3B4O1xyXG59XHJcblxyXG5cclxuLyogPT09PT09PT09PT09PT09PT0gUHVycGFsZSBDb2xvciA9PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuaW5wdXQuZm9ybS1jb250cm9sLCBzZWxlY3QuZm9ybS1jb250cm9sLCB0ZXh0YXJlYS5mb3JtLWNvbnRyb2wge1xyXG5cdGJvcmRlci1jb2xvcjogIzY2N2VlYTtcclxuXHRib3JkZXItbGVmdDogM3B4IHNvbGlkICM2NjdlZWE7XHJcbiAgICBib3gtc2hhZG93OiBub25lOyBcclxufVxyXG5cclxuLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNzA1Q0JBO1xyXG5cdG91dGxpbmU6IDA7XHJcblx0LXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiKDAgMCAwIC8gOCUpLCAwIDAgOHB4IHJnYigxMDIgMTc1IDIzMyAvIDYwJSk7XHJcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpOyBcclxuIH1cclxuICJdfQ== */";
      /***/
    },

    /***/
    "//9w":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/se.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function w(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Northern Sami [se]
      //! authors : Bård Rolstad Henriksen : https://github.com/karamell
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var se = moment.defineLocale('se', {
          months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
          monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
          weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
          weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
          weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'MMMM D. [b.] YYYY',
            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
          },
          calendar: {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s geažes',
            past: 'maŋit %s',
            s: 'moadde sekunddat',
            ss: '%d sekunddat',
            m: 'okta minuhta',
            mm: '%d minuhtat',
            h: 'okta diimmu',
            hh: '%d diimmut',
            d: 'okta beaivi',
            dd: '%d beaivvit',
            M: 'okta mánnu',
            MM: '%d mánut',
            y: 'okta jahki',
            yy: '%d jagit'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return se;
      });
      /***/

    },

    /***/
    "/VXB":
    /*!*******************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/attendance-employee/attendance-employee.component.ts ***!
      \*******************************************************************************************************/

    /*! exports provided: AttendanceEmployeeComponent */

    /***/
    function VXB(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AttendanceEmployeeComponent", function () {
        return AttendanceEmployeeComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_attendance_employee_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./attendance-employee.component.html */
      "KdDO");
      /* harmony import */


      var _attendance_employee_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./attendance-employee.component.css */
      "ylpJ");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var src_environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! src/environments/environment */
      "AytR");
      /* harmony import */


      var _services_employee_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../../services/employee.service */
      "AuF9");

      var AttendanceEmployeeComponent = /*#__PURE__*/function () {
        function AttendanceEmployeeComponent(empService, formBuilder, toastr, datePipe) {
          _classCallCheck(this, AttendanceEmployeeComponent);

          this.empService = empService;
          this.formBuilder = formBuilder;
          this.toastr = toastr;
          this.datePipe = datePipe;
          this.baseUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl;
          this.hrTlAttnDaily = [];
          this.listData = []; //pagination config

          this.pageNum = 1;
          this.pageSize = 3;
          this.pageSizes = [3, 5, 10, 25, 50, 100, 200, 500, 1000];
          this.totalItem = 50;
          this.pngDiplayLastSeq = 10;
          this.pngConfig = {
            pageNum: 1,
            pageSize: 5,
            totalItem: 50
          };
        }

        _createClass(AttendanceEmployeeComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.addAttnForm = this.formBuilder.group({
              hrCrEmp: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              attendanceDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              inTime: [],
              outTime: [],
              remarks: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]]
            });
            this.lodeAllEmp();
            this.loadAllViaHrAttnData();
            this.initializeForm();
          }
        }, {
          key: "initializeForm",
          value: function initializeForm() {
            this.inputForm = this.formBuilder.group({
              empCode: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              executeDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]]
            });
          }
        }, {
          key: "loadAllViaHrAttnData",
          value: function loadAllViaHrAttnData() {
            var _this = this;

            // this.empService.getAllViaHrAttnData().subscribe((data:any) =>{
            //   this.hrTlAttnDaily=data;
            // })
            var apiURL = this.baseUrl + "/attn/findAllBySrcType";
            var queryParams = {};
            var params = this.getUserQueryParams(this.pageNum, this.pageSize);
            queryParams = params;
            queryParams.srcType = "HR";
            this.empService.getAllRawAttendanceData2(apiURL, queryParams).subscribe(function (response) {
              _this.hrTlAttnDaily = response.objectList;
              _this.totalItem = response.totalItems;

              _this.setDisplayLastSequence();

              console.log(_this.hrTlAttnDaily); // this.setDisplayLastSequence();
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "getUserQueryParams",
          value: function getUserQueryParams(page, pageSize) {
            var params = {};

            if (page) {
              params["pageNum"] = page - 0;
            }

            if (pageSize) {
              params["pageSize"] = pageSize;
            }

            return params;
          }
        }, {
          key: "setDisplayLastSequence",
          value: function setDisplayLastSequence() {
            this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;

            if (this.listData.length < this.pageSize) {
              this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;
            }

            if (this.totalItem < this.pngDiplayLastSeq) {
              this.pngDiplayLastSeq = this.totalItem;
            }
          }
        }, {
          key: "handlePageChange",
          value: function handlePageChange(event) {
            this.pageNum = event;
            this.loadAllViaHrAttnData();
          }
        }, {
          key: "handlePageSizeChange",
          value: function handlePageSizeChange(event) {
            this.pageSize = event.target.value;
            this.pageNum = 1;
            this.loadAllViaHrAttnData();
          }
        }, {
          key: "lodeAllEmp",
          value: function lodeAllEmp() {
            var _this2 = this;

            this.empService.getEmployees().subscribe(function (data) {
              _this2.hrCrEmp = data;
              console.log(_this2.hrCrEmp);
            });
          }
        }, {
          key: "onKeyUp",
          value: function onKeyUp(x) {
            var _this3 = this;

            this.empName = "Not Match";
            this.empId = null;
            this.hrCrEmp.forEach(function (element) {
              if (element.loginCode == x.target.value) {
                _this3.empName = element.firstName;
                _this3.empId = element.id;
              }
            });
          }
        }, {
          key: "addAttn",
          value: function addAttn() {
            var _this4 = this;

            if (this.addAttnForm.invalid) {
              this.toastr.info("Please insert valid data");
              return;
            }

            this.addAttnForm.value.hrCrEmp = this.empId;
            var attndate = this.addAttnForm.value.attendanceDate;
            var convertAttnDate = this.datePipe.transform(attndate, "yyyy-MM-dd").toString().slice(0, 10); //check date Validity

            var toDate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');

            if (convertAttnDate > toDate) {
              this.toastr.info("Please insert todate / previous date");
              return;
            }

            var obj = {
              hrCrEmp: this.addAttnForm.value.hrCrEmp,
              attendanceDate: convertAttnDate,
              inTime: this.addAttnForm.value.inTime,
              outTime: this.addAttnForm.value.outTime,
              remarks: this.addAttnForm.value.remarks
            };
            this.empService.createAttnViaHr(obj).subscribe(function () {
              $("#add_attendance").modal("hide");

              _this4.addAttnForm.reset();

              _this4.loadAllViaHrAttnData();

              _this4.toastr.success("Successfully Add Attendance");
            }, function (error) {
              _this4.toastr.error("Error in Add Attendance ");
            });
          }
        }, {
          key: "searchAttn",
          value: function searchAttn() {
            var _this5 = this;

            var eCode = this.inputForm.value.empCode;
            var eDate = this.inputForm.value.executeDate;
            var converteDate = this.datePipe.transform(eDate, "yyyy-MM-dd").toString().slice(0, 10);
            var apiURL = this.baseUrl + "/attn/searchRowAttn";
            var queryParams = {};
            queryParams.srcType = "HR";
            queryParams.eCode = eCode;
            queryParams.eDate = converteDate;
            this.empService.getSearchAttn(apiURL, queryParams).subscribe(function (data) {
              _this5.hrTlAttnDaily = data;
            }, function (error) {
              console.log(error);
            });
          }
        }]);

        return AttendanceEmployeeComponent;
      }();

      AttendanceEmployeeComponent.ctorParameters = function () {
        return [{
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]
        }, {
          type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]
        }];
      };

      AttendanceEmployeeComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-attendance-employee',
        template: _raw_loader_attendance_employee_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_attendance_employee_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]])], AttendanceEmployeeComponent);
      /***/
    },

    /***/
    "/X5v":
    /*!************************************************!*\
      !*** ./node_modules/moment/locale/x-pseudo.js ***!
      \************************************************/

    /*! no static exports found */

    /***/
    function X5v(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Pseudo [x-pseudo]
      //! author : Andrew Hood : https://github.com/andrewhood125
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var xPseudo = moment.defineLocale('x-pseudo', {
          months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
          monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
          monthsParseExact: true,
          weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
          weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
          weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[T~ódá~ý át] LT',
            nextDay: '[T~ómó~rró~w át] LT',
            nextWeek: 'dddd [át] LT',
            lastDay: '[Ý~ést~érdá~ý át] LT',
            lastWeek: '[L~ást] dddd [át] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'í~ñ %s',
            past: '%s á~gó',
            s: 'á ~féw ~sécó~ñds',
            ss: '%d s~écóñ~ds',
            m: 'á ~míñ~úté',
            mm: '%d m~íñú~tés',
            h: 'á~ñ hó~úr',
            hh: '%d h~óúrs',
            d: 'á ~dáý',
            dd: '%d d~áýs',
            M: 'á ~móñ~th',
            MM: '%d m~óñt~hs',
            y: 'á ~ýéár',
            yy: '%d ý~éárs'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return xPseudo;
      });
      /***/

    },

    /***/
    "0mo+":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/bo.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function mo(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tibetan [bo]
      //! author : Thupten N. Chakrishar : https://github.com/vajradog
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '༡',
          2: '༢',
          3: '༣',
          4: '༤',
          5: '༥',
          6: '༦',
          7: '༧',
          8: '༨',
          9: '༩',
          0: '༠'
        },
            numberMap = {
          '༡': '1',
          '༢': '2',
          '༣': '3',
          '༤': '4',
          '༥': '5',
          '༦': '6',
          '༧': '7',
          '༨': '8',
          '༩': '9',
          '༠': '0'
        };
        var bo = moment.defineLocale('bo', {
          months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
          monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split('_'),
          monthsShortRegex: /^(ཟླ་\d{1,2})/,
          monthsParseExact: true,
          weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
          weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
          weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm'
          },
          calendar: {
            sameDay: '[དི་རིང] LT',
            nextDay: '[སང་ཉིན] LT',
            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay: '[ཁ་སང] LT',
            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s ལ་',
            past: '%s སྔན་ལ',
            s: 'ལམ་སང',
            ss: '%d སྐར་ཆ།',
            m: 'སྐར་མ་གཅིག',
            mm: '%d སྐར་མ',
            h: 'ཆུ་ཚོད་གཅིག',
            hh: '%d ཆུ་ཚོད',
            d: 'ཉིན་གཅིག',
            dd: '%d ཉིན་',
            M: 'ཟླ་བ་གཅིག',
            MM: '%d ཟླ་བ',
            y: 'ལོ་གཅིག',
            yy: '%d ལོ'
          },
          preparse: function preparse(string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'མཚན་མོ' && hour >= 4 || meridiem === 'ཉིན་གུང' && hour < 5 || meridiem === 'དགོང་དག') {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'མཚན་མོ';
            } else if (hour < 10) {
              return 'ཞོགས་ཀས';
            } else if (hour < 17) {
              return 'ཉིན་གུང';
            } else if (hour < 20) {
              return 'དགོང་དག';
            } else {
              return 'མཚན་མོ';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return bo;
      });
      /***/

    },

    /***/
    "0tRk":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/pt-br.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function tRk(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Portuguese (Brazil) [pt-br]
      //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ptBr = moment.defineLocale('pt-br', {
          months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
          monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
          weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),
          weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
          weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
          },
          calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function lastWeek() {
              return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' // Saturday + Sunday
              : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'poucos segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          invalidDate: 'Data inválida'
        });
        return ptBr;
      });
      /***/

    },

    /***/
    "1ppg":
    /*!*******************************************!*\
      !*** ./node_modules/moment/locale/fil.js ***!
      \*******************************************/

    /*! no static exports found */

    /***/
    function ppg(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Filipino [fil]
      //! author : Dan Hagman : https://github.com/hagmandan
      //! author : Matthew Co : https://github.com/matthewdeeco
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var fil = moment.defineLocale('fil', {
          months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
          monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
          weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
          weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
          weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm'
          },
          calendar: {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            ss: '%d segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon'
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: function ordinal(number) {
            return number;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return fil;
      });
      /***/

    },

    /***/
    "1rYy":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/hy-am.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function rYy(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Armenian [hy-am]
      //! author : Armendarabyan : https://github.com/armendarabyan
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var hyAm = moment.defineLocale('hy-am', {
          months: {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
          },
          monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
          weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
          weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
          weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY թ.',
            LLL: 'D MMMM YYYY թ., HH:mm',
            LLLL: 'dddd, D MMMM YYYY թ., HH:mm'
          },
          calendar: {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function nextWeek() {
              return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function lastWeek() {
              return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s հետո',
            past: '%s առաջ',
            s: 'մի քանի վայրկյան',
            ss: '%d վայրկյան',
            m: 'րոպե',
            mm: '%d րոպե',
            h: 'ժամ',
            hh: '%d ժամ',
            d: 'օր',
            dd: '%d օր',
            M: 'ամիս',
            MM: '%d ամիս',
            y: 'տարի',
            yy: '%d տարի'
          },
          meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
          isPM: function isPM(input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
          },
          meridiem: function meridiem(hour) {
            if (hour < 4) {
              return 'գիշերվա';
            } else if (hour < 12) {
              return 'առավոտվա';
            } else if (hour < 17) {
              return 'ցերեկվա';
            } else {
              return 'երեկոյան';
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'DDD':
              case 'w':
              case 'W':
              case 'DDDo':
                if (number === 1) {
                  return number + '-ին';
                }

                return number + '-րդ';

              default:
                return number;
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return hyAm;
      });
      /***/

    },

    /***/
    "1xZ4":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ca.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function xZ4(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Catalan [ca]
      //! author : Juan G. Hurtado : https://github.com/juanghurtado
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ca = moment.defineLocale('ca', {
          months: {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
            format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
          },
          monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
          monthsParseExact: true,
          weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
          weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
          weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [de] YYYY',
            ll: 'D MMM YYYY',
            LLL: 'D MMMM [de] YYYY [a les] H:mm',
            lll: 'D MMM YYYY, H:mm',
            LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll: 'ddd D MMM YYYY, H:mm'
          },
          calendar: {
            sameDay: function sameDay() {
              return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextDay: function nextDay() {
              return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextWeek: function nextWeek() {
              return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastDay: function lastDay() {
              return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastWeek: function lastWeek() {
              return '[el] dddd [passat a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: "d'aquí %s",
            past: 'fa %s',
            s: 'uns segons',
            ss: '%d segons',
            m: 'un minut',
            mm: '%d minuts',
            h: 'una hora',
            hh: '%d hores',
            d: 'un dia',
            dd: '%d dies',
            M: 'un mes',
            MM: '%d mesos',
            y: 'un any',
            yy: '%d anys'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
          ordinal: function ordinal(number, period) {
            var output = number === 1 ? 'r' : number === 2 ? 'n' : number === 3 ? 'r' : number === 4 ? 't' : 'è';

            if (period === 'w' || period === 'W') {
              output = 'a';
            }

            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return ca;
      });
      /***/

    },

    /***/
    "2fjn":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/fr-ca.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function fjn(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French (Canada) [fr-ca]
      //! author : Jonathan Abourbih : https://github.com/jonbca
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var frCa = moment.defineLocale('fr-ca', {
          months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
          monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
          monthsParseExact: true,
          weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
          weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
          weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              // Words with masculine grammatical gender: mois, trimestre, jour
              default:
              case 'M':
              case 'Q':
              case 'D':
              case 'DDD':
              case 'd':
                return number + (number === 1 ? 'er' : 'e');
              // Words with feminine grammatical gender: semaine

              case 'w':
              case 'W':
                return number + (number === 1 ? 're' : 'e');
            }
          }
        });
        return frCa;
      });
      /***/

    },

    /***/
    "2ykv":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/nl-be.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function ykv(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Dutch (Belgium) [nl-be]
      //! author : Joris Röling : https://github.com/jorisroling
      //! author : Jacob Middag : https://github.com/middagj
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
            monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),
            monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i],
            monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
        var nlBe = moment.defineLocale('nl-be', {
          months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
          monthsShort: function monthsShort(m, format) {
            if (!m) {
              return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
          monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
          weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
          weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return nlBe;
      });
      /***/

    },

    /***/
    "3E1r":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/hi.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function E1r(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hindi [hi]
      //! author : Mayank Singhal : https://github.com/mayanksinghal
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '१',
          2: '२',
          3: '३',
          4: '४',
          5: '५',
          6: '६',
          7: '७',
          8: '८',
          9: '९',
          0: '०'
        },
            numberMap = {
          '१': '1',
          '२': '2',
          '३': '3',
          '४': '4',
          '५': '5',
          '६': '6',
          '७': '7',
          '८': '8',
          '९': '9',
          '०': '0'
        },
            monthsParse = [/^जन/i, /^फ़र|फर/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सितं|सित/i, /^अक्टू/i, /^नव|नवं/i, /^दिसं|दिस/i],
            shortMonthsParse = [/^जन/i, /^फ़र/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सित/i, /^अक्टू/i, /^नव/i, /^दिस/i];
        var hi = moment.defineLocale('hi', {
          months: {
            format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
            standalone: 'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split('_')
          },
          monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
          weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
          weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
          weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
          longDateFormat: {
            LT: 'A h:mm बजे',
            LTS: 'A h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'
          },
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: shortMonthsParse,
          monthsRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
          monthsShortRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
          monthsStrictRegex: /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,
          monthsShortStrictRegex: /^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[कल] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[कल] LT',
            lastWeek: '[पिछले] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s में',
            past: '%s पहले',
            s: 'कुछ ही क्षण',
            ss: '%d सेकंड',
            m: 'एक मिनट',
            mm: '%d मिनट',
            h: 'एक घंटा',
            hh: '%d घंटे',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महीने',
            MM: '%d महीने',
            y: 'एक वर्ष',
            yy: '%d वर्ष'
          },
          preparse: function preparse(string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          // Hindi notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
          meridiemParse: /रात|सुबह|दोपहर|शाम/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'रात') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
              return hour;
            } else if (meridiem === 'दोपहर') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'रात';
            } else if (hour < 10) {
              return 'सुबह';
            } else if (hour < 17) {
              return 'दोपहर';
            } else if (hour < 20) {
              return 'शाम';
            } else {
              return 'रात';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return hi;
      });
      /***/

    },

    /***/
    "3kPk":
    /*!*******************************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/all-employees/employee-profile/employee-profile.component.html ***!
      \*******************************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function kPk(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\" *ngIf=\"empProfile\">\r\n  <!-- Page Header -->\r\n  <div class=\"page-header\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <h3 class=\"page-title\">Profile</h3>\r\n        <ul class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <a routerLink=\"/dashboard\">Dashboard</a>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\">Profile</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"col-auto float-right ml-auto\">\r\n        <a class=\"btn add-btn\" routerLink=\"/employees/edit-employee/{{ empProfile.id }}\"><i class=\"fa fa-edit\"></i> Edit\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /Page Header -->\r\n\r\n  <div class=\"card mb-0\">\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"profile-view\">\r\n            <div class=\"profile-img-wrap\">\r\n              <div class=\"profile-img\">\r\n                <a [routerLink]=\"\" class=\"avatar\" data-target=\"#profile_Image\" data-toggle=\"modal\"><img\r\n                    src=\"{{ baseUrl + empProfile.pic_ }}\" alt=\"\" />\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div class=\"profile-basic\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-5\">\r\n                  <div class=\"profile-info-left\">\r\n                    <h3 class=\"user-name m-t-0 mb-0\">\r\n                      {{ empProfile.firstName }} {{ empProfile.lastName }}\r\n                    </h3>\r\n                    <div class=\"staff-id\">\r\n                      Employee ID : {{ empProfile.loginCode }}\r\n                    </div>\r\n                    <h6 class=\"text-muted\">\r\n                      Designation:\r\n                      {{\r\n                      empProfile.primaryAssgnmnt?.hrEmpDesignations\r\n                      ? empProfile.primaryAssgnmnt.hrEmpDesignations?.title\r\n                      : null\r\n                      }}\r\n                    </h6>\r\n                    <h6 class=\"text-success\">\r\n                      Status:\r\n                      {{\r\n                      empProfile.primaryAssgnmnt\r\n                      ? empProfile.primaryAssgnmnt.empSts?.title\r\n                      : null\r\n                      }}\r\n                    </h6>\r\n\r\n                    <div class=\"small doj text-muted\">\r\n                      Date of Join:{{ empProfile.joiningDate | customDate }}\r\n                    </div>\r\n                    <div class=\"staff-msg\">\r\n                      <a class=\"btn btn-custom\" routerLink=\"/apps/chat\">Send Message</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                  <ul class=\"personal-info\">\r\n                    <li class=\"d-flex\">\r\n                      <div class=\"title\">Phone:</div>\r\n                      <div class=\"text\">\r\n                        <a href=\"\"><span> {{ empProfile?.mobCode }}</span></a>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"d-flex\">\r\n                      <div class=\"title\">Email:</div>\r\n                      <div class=\"text\">\r\n                        <a href=\"\">{{ empProfile.email }}</a>\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"d-flex\">\r\n                      <div class=\"title\">Birthday:</div>\r\n                      <div class=\"text\">{{ empProfile.dob | customDate }}</div>\r\n                    </li>\r\n                    <li class=\"d-flex\">\r\n                      <div class=\"title\">Address:</div>\r\n                      <div class=\"text\">\r\n                        {{ empProfile?.upazila?.name }},{{\r\n                        empProfile?.district?.name\r\n                        }},{{ empProfile?.division?.name }}\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"d-flex\">\r\n                      <div class=\"title\">Gender:</div>\r\n                      <div class=\"text\">\r\n                        {{ empProfile?.alkpGenderIdAlkp?.title }}\r\n                      </div>\r\n                    </li>\r\n                    <li class=\"d-flex\">\r\n                      <div class=\"title\">Reports to :</div>\r\n                      <div class=\"text\">\r\n                        <div class=\"avatar-box\">\r\n                          <div class=\"avatar avatar-xs\">\r\n                            <img src=\"{{\r\n                                baseUrl +\r\n                                  empProfile.primaryAssgnmnt?.hrCrEmpInChrgId\r\n                                    ?.pic_\r\n                              }}\" alt=\"ok\" />\r\n                          </div>\r\n                        </div>\r\n                        <span>{{\r\n                          empProfile.primaryAssgnmnt?.hrCrEmpInChrgId\r\n                          ?.firstName\r\n                          }}\r\n                          {{\r\n                          empProfile.primaryAssgnmnt?.hrCrEmpInChrgId\r\n                          ?.lastName\r\n                          }}</span>\r\n                        <a routerLink=\"/employees/employeeprofile\"> </a>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card tab-box\">\r\n    <div class=\"row user-tabs\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 line-tabs\">\r\n        <ul class=\"nav nav-tabs nav-tabs-bottom\">\r\n          <li class=\"nav-item\">\r\n            <a href=\"#emp_profile\" data-toggle=\"tab\" class=\"nav-link {{ this.activeTabCnf.basic }}\">Profile</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a href=\"#emp_assignment\" data-toggle=\"tab\"\r\n              class=\"nav-link {{ this.activeTabCnf.assignment }}\">Assignment</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a href=\"#bank_statutory\" data-toggle=\"tab\" class=\"nav-link {{ this.activeTabCnf.payroll }}\">Bank & Payroll\r\n              Elements\r\n              <small class=\"text-danger\">(Admin Only)</small></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a href=\"#emp_education\" (click)=\"getEducationData()\" data-toggle=\"tab\"\r\n              class=\"nav-link {{ this.activeTabCnf.education }}\">Education</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"tab-content\">\r\n    <!-- Profile Info Tab -->\r\n    <div id=\"emp_profile\" class=\"pro-overview tab-pane fade show {{ this.activeTabCnf.basic }}\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 d-flex\">\r\n          <div class=\"card profile-box flex-fill\">\r\n            <div class=\"card-body\">\r\n              <h3 class=\"card-title\">Personal Informations</h3>\r\n              <ul class=\"personal-info\">\r\n                <li *ngIf=\"empProfile.mobCode\">\r\n                  <div class=\"title\">Tel</div>\r\n                  <div class=\"text\">\r\n                    <a href=\"\">{{ empProfile?.mobCode }}</a>\r\n                  </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"empProfile.alkpMaritalStsIdAlkp\">\r\n                  <div class=\"title\">Marital status</div>\r\n                  <div class=\"text\">\r\n                    {{ empProfile?.alkpMaritalStsIdAlkp?.title }}\r\n                  </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"empProfile.voterIdentityNumber\">\r\n                  <div class=\"title\">National Identity Number</div>\r\n                  <div class=\"text\">{{ empProfile?.voterIdentityNumber }}</div>\r\n                </li>\r\n                <li *ngIf=\"empProfile.fatherName\">\r\n                  <div class=\"title\">Father Name</div>\r\n                  <div class=\"text\">{{ empProfile?.fatherName }}</div>\r\n                </li>\r\n                <li *ngIf=\"empProfile.motherName\">\r\n                  <div class=\"title\">Mother Name</div>\r\n                  <div class=\"text\">{{ empProfile?.motherName }}</div>\r\n                </li>\r\n                <li *ngIf=\"empProfile.motherName\">\r\n                  <div class=\"title\">Height</div>\r\n                  <div class=\"text\">{{ empProfile?.height }}</div>\r\n                </li>\r\n                <li *ngIf=\"empProfile.motherName\">\r\n                  <div class=\"title\">Weight</div>\r\n                  <div class=\"text\">{{ empProfile?.weight }}</div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 d-flex\">\r\n          <div class=\"card profile-box flex-fill\">\r\n            <div class=\"card-body\">\r\n              <h3 class=\"card-title\">Emergency Contact</h3>\r\n              <!-- <h5 class=\"section-title\">Primary</h5> -->\r\n              <ul class=\"personal-info\">\r\n                <li>\r\n                  <div class=\"title\">Name</div>\r\n                  <div class=\"text\">{{empProfile?.emergencyCntName}}</div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"title\">Relationship</div>\r\n                  <div class=\"text\">{{empProfile?.emergencyCntRelation}}</div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"title\">Phone</div>\r\n                  <div class=\"text\">{{empProfile?.emergencyCntPhone}}</div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"title\">Address</div>\r\n                  <div class=\"text\">{{empProfile?.emergencyCntAddress}}</div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- /Profile Info Tab -->\r\n\r\n    <!-- Assignment Tab -->\r\n    <div class=\"pro-overview tab-pane fade show {{ this.activeTabCnf.assignment }} \" id=\"emp_assignment\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 d-flex\">\r\n          <div class=\"card profile-box flex-fill\">\r\n            <div class=\"card-body\">\r\n              <h3 class=\"card-title\">Current Assignment</h3>\r\n              <ul class=\"personal-info\">\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Business Group</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstGroupId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstGroupId.title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Organization</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstOrganizationId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstOrganizationId\r\n                    .title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Operating Unit</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstOperatingUnitId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstOperatingUnitId\r\n                    .title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Product</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstProductId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstProductId.title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Department</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstDepartmentId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstDepartmentId\r\n                    .title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Section</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstSectionId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstSectionId.title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Sub Section</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstSubSectionId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstSubSectionId\r\n                    .title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Team</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstTeamId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstTeamId.title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n\r\n                <li class=\"d-flex\">\r\n                  <div class=\"title\">Sub Team</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.allOrgMstSubTeamId\r\n                    ? empProfile.primaryAssgnmnt.allOrgMstSubTeamId.title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 d-flex\">\r\n          <div class=\"card profile-box flex-fill\">\r\n            <div class=\"card-body\">\r\n              <h3 class=\"card-title\">Others Information</h3>\r\n              <ul class=\"personal-info\">\r\n                <li>\r\n                  <div class=\"title\">Gross Salary</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.payrollElementAssignment?.grossSalary\r\n                    ? empProfile.payrollElementAssignment.grossSalary\r\n                    : null\r\n                    }}/=TK\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"title\">Basic Salary</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.payrollElementAssignment?.basicSalary\r\n                    ? empProfile.payrollElementAssignment.basicSalary\r\n                    : null\r\n                    }}/=TK\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"title\">Probation Duration</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.probationDuration\r\n                    ? empProfile.primaryAssgnmnt.probationDuration\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div class=\"title\">Category</div>\r\n                  <div class=\"text\">\r\n                    {{\r\n                    empProfile.primaryAssgnmnt?.alkpEmpCatId\r\n                    ? empProfile.primaryAssgnmnt.alkpEmpCatId.title\r\n                    : null\r\n                    }}\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <!-- /Projects Tab -->\r\n\r\n    <!-- Bank Statutory Tab -->\r\n    <div class=\"pro-overview tab-pane fade show {{ this.activeTabCnf.payroll }}\" id=\"bank_statutory\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 d-flex\">\r\n          <div class=\"card profile-box flex-fill\">\r\n            <div class=\"card-body\">\r\n              <h3 class=\"card-title\">Payroll Information</h3>\r\n              <ul class=\"personal-info\">\r\n                <li *ngIf=\"empProfile?.payrollElementAssignment?.houseRentAlwPct\">\r\n                  <div class=\"title\">House Allowance</div>\r\n                  <div class=\"text\">\r\n                    <a href=\"\">{{\r\n                      empProfile?.payrollElementAssignment?.houseRentAlwPct\r\n                      }}</a>\r\n                  </div>\r\n                </li>\r\n                <li *ngIf=\"empProfile?.payrollElementAssignment?.medicalAlwPct\">\r\n                  <div class=\"title\">Medical Allowance</div>\r\n                  <div class=\"text\">\r\n                    <a href=\"\">{{\r\n                      empProfile?.payrollElementAssignment?.medicalAlwPct\r\n                      }}</a>\r\n                  </div>\r\n                </li>\r\n                <li *ngIf=\"empProfile?.payrollElementAssignment?.specialAlwPct\">\r\n                  <div class=\"title\">Special Allowance</div>\r\n                  <div class=\"text\">\r\n                    <a href=\"\">{{\r\n                      empProfile?.payrollElementAssignment?.specialAlwPct\r\n                      }}</a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 d-flex\">\r\n          <div class=\"card profile-box flex-fill\">\r\n            <div class=\"card-body\">\r\n              <h3 class=\"card-title\">Bank Information</h3>\r\n              <ul class=\"personal-info\">\r\n                <li *ngIf=\"empProfile?.primaryAssgnmnt?.bankAccNo\">\r\n                  <div class=\"title\">Bank Acc No.</div>\r\n                  <div class=\"text\">\r\n                    {{ empProfile?.primaryAssgnmnt?.bankAccNo }}\r\n                  </div>\r\n                </li>\r\n\r\n                <li *ngIf=\"empProfile?.primaryAssgnmnt?.bankName\">\r\n                  <div class=\"title\">Bank Name</div>\r\n                  <div class=\"text\">\r\n                    {{ empProfile?.primaryAssgnmnt?.bankName }}\r\n                  </div>\r\n                </li>\r\n                <li *ngIf=\"empProfile?.primaryAssgnmnt?.branchName\">\r\n                  <div class=\"title\">Branch Name</div>\r\n                  <div class=\"text\">\r\n                    {{ empProfile?.primaryAssgnmnt?.branchName }}\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- /Bank Statutory Tab -->\r\n\r\n\r\n    <!-- Education Tab -->\r\n\r\n    <div class=\"pro-overview tab-pane fade show {{ this.activeTabCnf.payroll }}\" id=\"emp_education\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <h3>List of Education Info</h3>\r\n            <table id=\"eduListTable\" class=\"table table-striped custom-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Title</th>\r\n                    <th>Reg No</th>\r\n                    <th>Passing Year</th>\r\n                    <th>Result</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let thisObj of hrCrEmpEduInfo\">\r\n\r\n                    <td>{{ thisObj.code }}</td>\r\n                    <td>{{ thisObj.regNo }}</td>\r\n                    <td>{{ thisObj.passingYear }}</td>\r\n                    <td>{{thisObj.result}}</td>\r\n                  </tr>\r\n  \r\n                  <tr *ngIf=\"hrCrEmpEduInfo.length === 0\">\r\n                    <td colspan=\"10\">\r\n                      <h5 style=\"text-align: center\">No data found</h5>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <!-- /Education Tab -->\r\n  </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Image upload modal -->\r\n<div id=\"profile_Image\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Upload Profile Image</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"uploadForm\" (ngSubmit)=\"Submit()\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"profile-img-wrap edit-img\" *ngIf=\"empProfile\">\r\n                <img class=\"inline-block\" [src]=\"imageSrc || baseUrl + empProfile.pic_\" />\r\n\r\n                <div class=\"fileupload btn\">\r\n                  <span class=\"btn-text\">Change</span>\r\n                  <input class=\"upload\" type=\"file\" name=\"profile\" accept=\"image/x-png,image/jpeg,image/jpg\"\r\n                    (change)=\"onFileSelect($event)\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"submit-section\">\r\n            <button class=\"btn btn-primary submit-btn\">Upload</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- /Image upload modal -->\r\n\r\n<!-- Family Info Modal -->\r\n<div id=\"family_info_modal\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Family Informations</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"form-scroll\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                  Family Member\r\n                  <a class=\"delete-icon\"><i class=\"fa fa-trash-o\"></i></a>\r\n                </h3>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Name <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control\" type=\"text\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Relationship <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control\" type=\"text\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date of birth <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                          dateInputFormat: 'DD-MM-YYYY',\r\n                          returnFocusToInput: true\r\n                        }\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Phone <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control\" type=\"text\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                  Education Informations\r\n                  <a class=\"delete-icon\"><i class=\"fa fa-trash-o\"></i></a>\r\n                </h3>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Name <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control\" type=\"text\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Relationship <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control\" type=\"text\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Date of birth <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                          dateInputFormat: 'DD-MM-YYYY',\r\n                          returnFocusToInput: true\r\n                        }\" />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>Phone <span class=\"text-danger\">*</span></label>\r\n                      <input class=\"form-control\" type=\"text\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"add-more\">\r\n                  <a><i class=\"fa fa-plus-circle\"></i> Add More</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"submit-section\">\r\n            <button class=\"btn btn-primary submit-btn\">Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- /Family Info Modal -->\r\n\r\n<!-- Education Modal -->\r\n<div id=\"education_info\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Education Informations</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"form-scroll\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                  Education Informations\r\n                  <a class=\"delete-icon\"><i class=\"fa fa-trash-o\"></i></a>\r\n                </h3>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"Oxford University\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Institution</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"Computer Science\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Subject</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <div class=\"cal-icon\">\r\n                        <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" value=\"01/05/2006\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Starting Date</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <div class=\"cal-icon\">\r\n                        <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" value=\"31/05/2006\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Complete Date</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"BE Computer Science\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Degree</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"Grade A\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Grade</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                  Education Informations\r\n                  <a class=\"delete-icon\"><i class=\"fa fa-trash-o\"></i></a>\r\n                </h3>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"Oxford University\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Institution</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"Computer Science\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Subject</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <div class=\"cal-icon\">\r\n                        <input value=\"01/06/2002\" class=\"form-control datetimepicker\" type=\"text\" bsDatepicker\r\n                          type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Starting Date</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <div class=\"cal-icon\">\r\n                        <input type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" value=\"31/05/2006\" class=\"form-control floating datetimepicker\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Complete Date</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"BE Computer Science\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Degree</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus focused\">\r\n                      <input type=\"text\" value=\"Grade A\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Grade</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"add-more\">\r\n                  <a><i class=\"fa fa-plus-circle\"></i> Add More</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"submit-section\">\r\n            <button class=\"btn btn-primary submit-btn\">Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- /Education Modal -->\r\n\r\n<!-- Experience Modal -->\r\n<div id=\"experience_info\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Experience Informations</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form>\r\n          <div class=\"form-scroll\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                  Experience Informations\r\n                  <a class=\"delete-icon\"><i class=\"fa fa-trash-o\"></i></a>\r\n                </h3>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <input type=\"text\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Company Name</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <input type=\"text\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Location</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <input type=\"text\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Job Position</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <div class=\"cal-icon\">\r\n                        <input type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" class=\"form-control floating datetimepicker\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Period From</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <div class=\"cal-icon\">\r\n                        <input type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" class=\"form-control floating datetimepicker\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Period To</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h3 class=\"card-title\">\r\n                  Experience Informations\r\n                  <a class=\"delete-icon\"><i class=\"fa fa-trash-o\"></i></a>\r\n                </h3>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <input type=\"text\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Company Name</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <input type=\"text\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Location</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <input type=\"text\" class=\"form-control floating\" />\r\n                      <label class=\"focus-label\">Job Position</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <div class=\"cal-icon\">\r\n                        <input type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" class=\"form-control floating datetimepicker\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Period From</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group form-focus\">\r\n                      <div class=\"cal-icon\">\r\n                        <input type=\"text\" bsDatepicker type=\"text\" [bsConfig]=\"{\r\n                            dateInputFormat: 'DD-MM-YYYY',\r\n                            returnFocusToInput: true\r\n                          }\" class=\"form-control floating datetimepicker\" />\r\n                      </div>\r\n                      <label class=\"focus-label\">Period To</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"add-more\">\r\n                  <a><i class=\"fa fa-plus-circle\"></i> Add More</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"submit-section\">\r\n            <button class=\"btn btn-primary submit-btn\">Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- /Experience Modal -->";
      /***/
    },

    /***/
    "4MV3":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/gu.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function MV3(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Gujarati [gu]
      //! author : Kaushik Thanki : https://github.com/Kaushik1987
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '૧',
          2: '૨',
          3: '૩',
          4: '૪',
          5: '૫',
          6: '૬',
          7: '૭',
          8: '૮',
          9: '૯',
          0: '૦'
        },
            numberMap = {
          '૧': '1',
          '૨': '2',
          '૩': '3',
          '૪': '4',
          '૫': '5',
          '૬': '6',
          '૭': '7',
          '૮': '8',
          '૯': '9',
          '૦': '0'
        };
        var gu = moment.defineLocale('gu', {
          months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
          monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
          monthsParseExact: true,
          weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
          weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
          weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
          },
          calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s મા',
            past: '%s પહેલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ'
          },
          preparse: function preparse(string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
          meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'રાત') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
              return hour;
            } else if (meridiem === 'બપોર') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'રાત';
            } else if (hour < 10) {
              return 'સવાર';
            } else if (hour < 17) {
              return 'બપોર';
            } else if (hour < 20) {
              return 'સાંજ';
            } else {
              return 'રાત';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return gu;
      });
      /***/

    },

    /***/
    "4dOw":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-ie.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function dOw(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Ireland) [en-ie]
      //! author : Chris Cartlidge : https://github.com/chriscartlidge
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enIe = moment.defineLocale('en-ie', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return enIe;
      });
      /***/

    },

    /***/
    "5Dz3":
    /*!*********************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/leaves-admin/leaves-admin.component.html ***!
      \*********************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function Dz3(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Leaves</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Leaves</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <a class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_leave\"><i class=\"fa fa-plus\"></i>\r\n                    Add Leave</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n\r\n    <!-- Leave Statistics -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Today Presents</h6>\r\n                <h4>12 / 5</h4>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Planned Leaves</h6>\r\n                <h4>8 <span>Today</span></h4>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Unplanned Leaves</h6>\r\n                <h4>1 <span>Today</span></h4>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Pending Requests</h6>\r\n                <h4>12</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Leave Statistics -->\r\n\r\n    <!-- Search Filter -->\r\n    <div class=\"row filter-row\">\r\n        <div class=\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\">\r\n            <div class=\"form-group form-focus\">\r\n                <input type=\"text\" class=\"form-control floating\" (input)=\"searchName($event.target.value)\">\r\n                <label class=\"focus-label\">Employee Name</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\">\r\n            <div class=\"form-group form-focus select-focus\">\r\n                <select class=\"select floating form-control\" (input)=\"searchType($event.target.value)\">\r\n                    <option> -- Select -- </option>\r\n                    <option>Casual Leave</option>\r\n                    <option>Medical Leave</option>\r\n                    <option>Loss of Pay</option>\r\n                </select>\r\n                <label class=\"focus-label\">Leave Type</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\">\r\n            <div class=\"form-group form-focus select-focus\">\r\n                <select class=\"select floating form-control\" (input)=\"searchStatus($event.target.value)\">\r\n                    <option> -- Select -- </option>\r\n                    <option> Pending </option>\r\n                    <option> Approved </option>\r\n                    <option> Rejected </option>\r\n                </select>\r\n                <label class=\"focus-label\">Leave Status</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\">\r\n            <div class=\"form-group form-focus\">\r\n                <div class=\"cal-icon\">\r\n                    <input class=\"form-control floating datetimepicker\" bsDatepicker type=\"text\"\r\n                        [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                        (bsValueChange)=\"searchByFrom($event)\">\r\n                </div>\r\n                <label class=\"focus-label\">From</label>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\">\r\n            <div class=\"form-group form-focus\">\r\n                <div class=\"cal-icon\">\r\n                    <input class=\"form-control floating datetimepicker\" bsDatepicker type=\"text\"\r\n                        [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                        (bsValueChange)=\"searchByTo($event)\">\r\n                </div>\r\n                <label class=\"focus-label\">To</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3 col-lg-3 col-xl-2 col-12\">\r\n            <a class=\"btn btn-success btn-block\"> Search </a>\r\n        </div>\r\n    </div>\r\n    <!-- /Search Filter -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"datatable\"\r\n                    class=\"table table-striped custom-table mb-0 datatable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Employee</th>\r\n                            <th>Leave Type</th>\r\n                            <th>From</th>\r\n                            <th>To</th>\r\n                            <th>No of Days</th>\r\n                            <th>Reason</th>\r\n                            <th class=\"text-center\">Status</th>\r\n                            <th class=\"text-right\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let row of lstLeave;let i = index\">\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a routerLink=\"/employees/employeeprofile\" class=\"avatar\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-{{i+ 1}}.jpg\"></a>\r\n                                    <a\r\n                                        routerLink=\"/employees/employeeprofile\">{{row.employeeName}}<span>{{row.designation}}</span></a>\r\n                                </h2>\r\n                            </td>\r\n                            <td>{{row.leaveType}}</td>\r\n                            <td>{{row.from | customDate}}</td>\r\n                            <td>{{row.to | customDate}}</td>\r\n                            <td>{{row.noofDays}}</td>\r\n                            <td>{{row.reason}}</td>\r\n                            <td class=\"text-center\">\r\n                                <div class=\"dropdown action-label\">\r\n                                    <a class=\"btn btn-white btn-sm btn-rounded dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\">\r\n                                        <i class=\"fa fa-dot-circle-o text-purple\"></i>{{row.status || statusValue}}\r\n                                    </a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\" (click)=\"getStatus('New')\"><i\r\n                                                class=\"fa fa-dot-circle-o text-purple\"></i>\r\n                                            New</a>\r\n                                        <a class=\"dropdown-item\" (click)=\"getStatus('Pending')\"><i\r\n                                                class=\"fa fa-dot-circle-o text-danger\"></i>\r\n                                            Pending</a>\r\n                                        <a class=\"dropdown-item\" (click)=\"getStatus('Approved')\"><i\r\n                                                class=\"fa fa-dot-circle-o text-success\"></i> Approved</a>\r\n                                        <a class=\"dropdown-item\" (click)=\"getStatus('Declined')\"><i\r\n                                                class=\"fa fa-dot-circle-o text-danger\"></i>\r\n                                            Declined</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#edit_leave\"\r\n                                            (click)=\"edit(row.id)\"><i class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#delete_approve\"\r\n                                            (click)=\"tempId = row.id\"><i class=\"fa fa-trash-o m-r-5\"></i> Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Add Leave Modal -->\r\n<div id=\"add_leave\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Add Leave</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" data-target=\"#add_leave\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"addleaves()\" [formGroup]=\"addLeaveadminForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Leave Type <span class=\"text-danger\">*</span></label>\r\n                        <select class=\"select form-control\"\r\n                            [class.invalid]=\"addLeaveadminForm.get('LeaveType').invalid && addLeaveadminForm.get('LeaveType').touched\"\r\n                            formControlName=\"LeaveType\">\r\n                            <option>Select Leave Type</option>\r\n                            <option>Casual Leave 12 Days</option>\r\n                            <option>Medical Leave</option>\r\n                            <option>Loss of Pay</option>\r\n                        </select>\r\n                        <div\r\n                            *ngIf=\"addLeaveadminForm.get('LeaveType').invalid && addLeaveadminForm.get('LeaveType').touched\">\r\n                            <small\r\n                                *ngIf=\"addLeaveadminForm.get('LeaveType').invalid && addLeaveadminForm.get('LeaveType').touched\"\r\n                                class=\"text-danger\"> *Leave type is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>From <span class=\"text-danger\">*</span></label>\r\n                        <div class=\"cal-icon\">\r\n                            <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"addLeaveadminForm.get('From').invalid && addLeaveadminForm.get('From').touched\"\r\n                                formControlName=\"From\">\r\n                            <div *ngIf=\"addLeaveadminForm.get('From').invalid && addLeaveadminForm.get('From').touched\">\r\n                                <small\r\n                                    *ngIf=\"addLeaveadminForm.get('From').invalid && addLeaveadminForm.get('From').touched\"\r\n                                    class=\"text-danger\"> *From is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>To <span class=\"text-danger\">*</span></label>\r\n                        <div class=\"cal-icon\">\r\n                            <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"addLeaveadminForm.get('To').invalid && addLeaveadminForm.get('To').touched\"\r\n                                formControlName=\"To\">\r\n                            <div *ngIf=\"addLeaveadminForm.get('To').invalid && addLeaveadminForm.get('To').touched\">\r\n                                <small\r\n                                    *ngIf=\"addLeaveadminForm.get('To').invalid && addLeaveadminForm.get('To').touched\"\r\n                                    class=\"text-danger\"> *To is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Number of days <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"addLeaveadminForm.get('NoOfDays').invalid && addLeaveadminForm.get('NoOfDays').touched\"\r\n                            formControlName=\"NoOfDays\">\r\n                        <div\r\n                            *ngIf=\"addLeaveadminForm.get('NoOfDays').invalid && addLeaveadminForm.get('NoOfDays').touched\">\r\n                            <small\r\n                                *ngIf=\"addLeaveadminForm.get('NoOfDays').invalid && addLeaveadminForm.get('NoOfDays').touched\"\r\n                                class=\"text-danger\"> *No.of days is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Remaining Leaves <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" value=\"12\" type=\"text\"\r\n                            [class.invalid]=\"addLeaveadminForm.get('RemainLeaves').invalid && addLeaveadminForm.get('RemainLeaves').touched\"\r\n                            formControlName=\"RemainLeaves\">\r\n                        <div\r\n                            *ngIf=\"addLeaveadminForm.get('RemainLeaves').invalid && addLeaveadminForm.get('RemainLeaves').touched\">\r\n                            <small\r\n                                *ngIf=\"addLeaveadminForm.get('RemainLeaves').invalid && addLeaveadminForm.get('RemainLeaves').touched\"\r\n                                class=\"text-danger\"> *Remaining Leaves is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Leave Reason <span class=\"text-danger\">*</span></label>\r\n                        <textarea rows=\"4\" class=\"form-control\"\r\n                            [class.invalid]=\"addLeaveadminForm.get('LeaveReason').invalid && addLeaveadminForm.get('LeaveReason').touched\"\r\n                            formControlName=\"LeaveReason\"></textarea>\r\n                        <div\r\n                            *ngIf=\"addLeaveadminForm.get('LeaveReason').invalid && addLeaveadminForm.get('LeaveReason').touched\">\r\n                            <small\r\n                                *ngIf=\"addLeaveadminForm.get('LeaveReason').invalid && addLeaveadminForm.get('LeaveReason').touched\"\r\n                                class=\"text-danger\"> *Leave Reason is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Add Leave Modal -->\r\n\r\n<!-- Edit Leave Modal -->\r\n<div id=\"edit_leave\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Edit Leave</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" data-target=\"#edit_leave\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"editLeaves()\" [formGroup]=\"editLeaveadminForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Leave Type <span class=\"text-danger\">*</span></label>\r\n                        <select class=\"select form-control\"\r\n                            [class.invalid]=\"editLeaveadminForm.get('LeaveType').invalid && editLeaveadminForm.get('LeaveType').touched\"\r\n                            formControlName=\"LeaveType\">\r\n                            <option>Select Leave Type</option>\r\n                            <option>Casual Leave 12 Days</option>\r\n                            <option>Medical Leave</option>\r\n                            <option>Loss of Pay</option>\r\n                        </select>\r\n                        <div\r\n                            *ngIf=\"editLeaveadminForm.get('LeaveType').invalid && editLeaveadminForm.get('LeaveType').touched\">\r\n                            <small\r\n                                *ngIf=\"editLeaveadminForm.get('LeaveType').invalid && editLeaveadminForm.get('LeaveType').touched\"\r\n                                class=\"text-danger\"> *Leave type is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>From <span class=\"text-danger\">*</span></label>\r\n                        <div class=\"cal-icon\">\r\n                            <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"editLeaveadminForm.get('From').invalid && editLeaveadminForm.get('From').touched\"\r\n                                formControlName=\"From\" (bsValueChange)=\"from($event)\">\r\n                            <div\r\n                                *ngIf=\"editLeaveadminForm.get('From').invalid && editLeaveadminForm.get('From').touched\">\r\n                                <small\r\n                                    *ngIf=\"editLeaveadminForm.get('From').invalid && editLeaveadminForm.get('From').touched\"\r\n                                    class=\"text-danger\"> *From is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>To <span class=\"text-danger\">*</span></label>\r\n                        <div class=\"cal-icon\"> <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker\r\n                                type=\"text\" [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"editLeaveadminForm.get('To').invalid && editLeaveadminForm.get('To').touched\"\r\n                                formControlName=\"To\" (bsValueChange)=\"to($event)\">\r\n                            <div *ngIf=\"editLeaveadminForm.get('To').invalid && editLeaveadminForm.get('To').touched\">\r\n                                <small\r\n                                    *ngIf=\"editLeaveadminForm.get('To').invalid && editLeaveadminForm.get('To').touched\"\r\n                                    class=\"text-danger\"> *To is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Number of days <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"editLeaveadminForm.get('NoOfDays').invalid && editLeaveadminForm.get('NoOfDays').touched\"\r\n                            formControlName=\"NoOfDays\">\r\n                        <div\r\n                            *ngIf=\"editLeaveadminForm.get('NoOfDays').invalid && editLeaveadminForm.get('NoOfDays').touched\">\r\n                            <small\r\n                                *ngIf=\"editLeaveadminForm.get('NoOfDays').invalid && editLeaveadminForm.get('NoOfDays').touched\"\r\n                                class=\"text-danger\"> *No.of days is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Remaining Leaves <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" value=\"12\" type=\"text\"\r\n                            [class.invalid]=\"editLeaveadminForm.get('RemainLeaves').invalid && editLeaveadminForm.get('RemainLeaves').touched\"\r\n                            formControlName=\"RemainLeaves\">\r\n                        <div\r\n                            *ngIf=\"editLeaveadminForm.get('RemainLeaves').invalid && editLeaveadminForm.get('RemainLeaves').touched\">\r\n                            <small\r\n                                *ngIf=\"editLeaveadminForm.get('RemainLeaves').invalid && editLeaveadminForm.get('RemainLeaves').touched\"\r\n                                class=\"text-danger\"> *Remaining Leaves is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Leave Reason <span class=\"text-danger\">*</span></label>\r\n                        <textarea rows=\"4\" class=\"form-control\"\r\n                            [class.invalid]=\"editLeaveadminForm.get('LeaveReason').invalid && editLeaveadminForm.get('LeaveReason').touched\"\r\n                            formControlName=\"LeaveReason\"></textarea>\r\n                        <div\r\n                            *ngIf=\"editLeaveadminForm.get('LeaveReason').invalid && editLeaveadminForm.get('LeaveReason').touched\">\r\n                            <small\r\n                                *ngIf=\"editLeaveadminForm.get('LeaveReason').invalid && editLeaveadminForm.get('LeaveReason').touched\"\r\n                                class=\"text-danger\"> *Leave Reason is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Edit Leave Modal -->\r\n\r\n<!-- Delete Leave Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_approve\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Leave</h3>\r\n                    <p>Are you sure want to delete this leave?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a  class=\"btn btn-primary continue-btn\"\r\n                                (click)=\"deleteleaves()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a  data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Delete Leave Modal -->";
      /***/
    },

    /***/
    "6+QB":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ms.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function QB(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malay [ms]
      //! author : Weldan Jamili : https://github.com/weldan
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ms = moment.defineLocale('ms', {
          months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
          monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
          weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
          weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
          weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'pagi') {
              return hour;
            } else if (meridiem === 'tengahari') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
              return 'pagi';
            } else if (hours < 15) {
              return 'tengahari';
            } else if (hours < 19) {
              return 'petang';
            } else {
              return 'malam';
            }
          },
          calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return ms;
      });
      /***/

    },

    /***/
    "6B0Y":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/km.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function B0Y(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Cambodian [km]
      //! author : Kruy Vanna : https://github.com/kruyvanna
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '១',
          2: '២',
          3: '៣',
          4: '៤',
          5: '៥',
          6: '៦',
          7: '៧',
          8: '៨',
          9: '៩',
          0: '០'
        },
            numberMap = {
          '១': '1',
          '២': '2',
          '៣': '3',
          '៤': '4',
          '៥': '5',
          '៦': '6',
          '៧': '7',
          '៨': '8',
          '៩': '9',
          '០': '0'
        };
        var km = moment.defineLocale('km', {
          months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
          monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
          weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
          weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
          weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          meridiemParse: /ព្រឹក|ល្ងាច/,
          isPM: function isPM(input) {
            return input === 'ល្ងាច';
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ព្រឹក';
            } else {
              return 'ល្ងាច';
            }
          },
          calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
          },
          dayOfMonthOrdinalParse: /ទី\d{1,2}/,
          ordinal: 'ទី%d',
          preparse: function preparse(string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return km;
      });
      /***/

    },

    /***/
    "7BjC":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/et.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function BjC(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Estonian [et]
      //! author : Henry Kehlmann : https://github.com/madhenry
      //! improvements : Illimar Tambek : https://github.com/ragulka
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            ss: [number + 'sekundi', number + 'sekundit'],
            m: ['ühe minuti', 'üks minut'],
            mm: [number + ' minuti', number + ' minutit'],
            h: ['ühe tunni', 'tund aega', 'üks tund'],
            hh: [number + ' tunni', number + ' tundi'],
            d: ['ühe päeva', 'üks päev'],
            M: ['kuu aja', 'kuu aega', 'üks kuu'],
            MM: [number + ' kuu', number + ' kuud'],
            y: ['ühe aasta', 'aasta', 'üks aasta'],
            yy: [number + ' aasta', number + ' aastat']
          };

          if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
          }

          return isFuture ? format[key][0] : format[key][1];
        }

        var et = moment.defineLocale('et', {
          months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
          monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
          weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
          weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
          weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[Täna,] LT',
            nextDay: '[Homme,] LT',
            nextWeek: '[Järgmine] dddd LT',
            lastDay: '[Eile,] LT',
            lastWeek: '[Eelmine] dddd LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s pärast',
            past: '%s tagasi',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: '%d päeva',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return et;
      });
      /***/

    },

    /***/
    "7C5Q":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-in.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function C5Q(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (India) [en-in]
      //! author : Jatin Agrawal : https://github.com/jatinag22
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enIn = moment.defineLocale('en-in', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 1st is the first week of the year.

          }
        });
        return enIn;
      });
      /***/

    },

    /***/
    "7aV9":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/si.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function aV9(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Sinhalese [si]
      //! author : Sampath Sitinamaluwa : https://github.com/sampathsris
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        /*jshint -W100*/

        var si = moment.defineLocale('si', {
          months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
          monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
          weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
          weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
          weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'a h:mm',
            LTS: 'a h:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY MMMM D',
            LLL: 'YYYY MMMM D, a h:mm',
            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
          },
          calendar: {
            sameDay: '[අද] LT[ට]',
            nextDay: '[හෙට] LT[ට]',
            nextWeek: 'dddd LT[ට]',
            lastDay: '[ඊයේ] LT[ට]',
            lastWeek: '[පසුගිය] dddd LT[ට]',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%sකින්',
            past: '%sකට පෙර',
            s: 'තත්පර කිහිපය',
            ss: 'තත්පර %d',
            m: 'මිනිත්තුව',
            mm: 'මිනිත්තු %d',
            h: 'පැය',
            hh: 'පැය %d',
            d: 'දිනය',
            dd: 'දින %d',
            M: 'මාසය',
            MM: 'මාස %d',
            y: 'වසර',
            yy: 'වසර %d'
          },
          dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
          ordinal: function ordinal(number) {
            return number + ' වැනි';
          },
          meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
          isPM: function isPM(input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
              return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
          }
        });
        return si;
      });
      /***/

    },

    /***/
    "8/+R":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/pa-in.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function R(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Punjabi (India) [pa-in]
      //! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '੧',
          2: '੨',
          3: '੩',
          4: '੪',
          5: '੫',
          6: '੬',
          7: '੭',
          8: '੮',
          9: '੯',
          0: '੦'
        },
            numberMap = {
          '੧': '1',
          '੨': '2',
          '੩': '3',
          '੪': '4',
          '੫': '5',
          '੬': '6',
          '੭': '7',
          '੮': '8',
          '੯': '9',
          '੦': '0'
        };
        var paIn = moment.defineLocale('pa-in', {
          // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
          months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
          monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
          weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
          weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
          weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm ਵਜੇ',
            LTS: 'A h:mm:ss ਵਜੇ',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
          },
          calendar: {
            sameDay: '[ਅਜ] LT',
            nextDay: '[ਕਲ] LT',
            nextWeek: '[ਅਗਲਾ] dddd, LT',
            lastDay: '[ਕਲ] LT',
            lastWeek: '[ਪਿਛਲੇ] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s ਵਿੱਚ',
            past: '%s ਪਿਛਲੇ',
            s: 'ਕੁਝ ਸਕਿੰਟ',
            ss: '%d ਸਕਿੰਟ',
            m: 'ਇਕ ਮਿੰਟ',
            mm: '%d ਮਿੰਟ',
            h: 'ਇੱਕ ਘੰਟਾ',
            hh: '%d ਘੰਟੇ',
            d: 'ਇੱਕ ਦਿਨ',
            dd: '%d ਦਿਨ',
            M: 'ਇੱਕ ਮਹੀਨਾ',
            MM: '%d ਮਹੀਨੇ',
            y: 'ਇੱਕ ਸਾਲ',
            yy: '%d ਸਾਲ'
          },
          preparse: function preparse(string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
          // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
          meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'ਰਾਤ') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
              return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'ਰਾਤ';
            } else if (hour < 10) {
              return 'ਸਵੇਰ';
            } else if (hour < 17) {
              return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
              return 'ਸ਼ਾਮ';
            } else {
              return 'ਰਾਤ';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return paIn;
      });
      /***/

    },

    /***/
    "8GDL":
    /*!*****************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/leaves-admin/leaves-admin.component.ts ***!
      \*****************************************************************************************/

    /*! exports provided: LeavesAdminComponent */

    /***/
    function GDL(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LeavesAdminComponent", function () {
        return LeavesAdminComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_leaves_admin_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./leaves-admin.component.html */
      "5Dz3");
      /* harmony import */


      var _leaves_admin_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./leaves-admin.component.css */
      "TPnH");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var angular_datatables__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! angular-datatables */
      "njyG");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");

      var LeavesAdminComponent = /*#__PURE__*/function () {
        function LeavesAdminComponent(formBuilder, srvModuleService, toastr) {
          _classCallCheck(this, LeavesAdminComponent);

          this.formBuilder = formBuilder;
          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.dtOptions = {};
          this.url = "adminleaves";
          this.rows = [];
          this.srch = [];
          this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
          this.pipe = new _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"]("en-US");
        }

        _createClass(LeavesAdminComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            // for floating label
            $(".floating").on("focus blur", function (e) {
              $(this).parents(".form-focus").toggleClass("focused", e.type === "focus" || this.value.length > 0);
            }).trigger("blur");
            this.loadLeaves();
            this.addLeaveadminForm = this.formBuilder.group({
              LeaveType: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              From: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              To: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              NoOfDays: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              RemainLeaves: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              LeaveReason: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            }); // Edit leaveadmin Form Validation And Getting Values

            this.editLeaveadminForm = this.formBuilder.group({
              LeaveType: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              From: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              To: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              NoOfDays: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              RemainLeaves: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              LeaveReason: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            }); // for data table configuration

            this.dtOptions = {
              // ... skipped ...
              pageLength: 10,
              dom: "lrtip"
            };
          }
        }, {
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this6 = this;

            setTimeout(function () {
              _this6.dtTrigger.next();
            }, 1000);
          } // manually rendering Data table

        }, {
          key: "rerender",
          value: function rerender() {
            var _this7 = this;

            $("#datatable").DataTable().clear();
            this.dtElement.dtInstance.then(function (dtInstance) {
              dtInstance.destroy();
            });
            this.lstLeave = [];
            this.loadLeaves();
            setTimeout(function () {
              _this7.dtTrigger.next();
            }, 1000);
          } // Get leave  Api Call

        }, {
          key: "loadLeaves",
          value: function loadLeaves() {
            var _this8 = this;

            this.srvModuleService.get(this.url).subscribe(function (data) {
              _this8.lstLeave = data;
              _this8.rows = _this8.lstLeave;
              _this8.srch = _toConsumableArray(_this8.rows);
            });
          } // Add leaves for admin Modal Api Call

        }, {
          key: "addleaves",
          value: function addleaves() {
            var _this9 = this;

            if (this.addLeaveadminForm.valid) {
              var fromDate = this.pipe.transform(this.addLeaveadminForm.value.From, "dd-MM-yyyy");
              var toDate = this.pipe.transform(this.addLeaveadminForm.value.To, "dd-MM-yyyy");
              var obj = {
                employeeName: "Mike Litorus",
                designation: "web developer",
                leaveType: this.addLeaveadminForm.value.LeaveType,
                from: fromDate,
                to: toDate,
                noofDays: this.addLeaveadminForm.value.NoOfDays,
                remainleaves: this.addLeaveadminForm.value.RemainLeaves,
                reason: this.addLeaveadminForm.value.LeaveReason,
                status: "Approved"
              };
              this.srvModuleService.add(obj, this.url).subscribe(function (data) {
                $("#datatable").DataTable().clear();

                _this9.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });

                _this9.dtTrigger.next();
              });
              this.loadLeaves();
              $("#add_leave").modal("hide");
              this.addLeaveadminForm.reset();
              this.toastr.success("Leaves added sucessfully...!", "Success");
            } else {
              this.toastr.warning("Mandatory fields required", "");
            }
          } // to know the date picker changes

        }, {
          key: "from",
          value: function from(data) {
            this.editFromDate = this.pipe.transform(data, "dd-MM-yyyy");
          }
        }, {
          key: "to",
          value: function to(data) {
            this.editToDate = this.pipe.transform(data, "dd-MM-yyyy");
          } // Edit leaves Modal Api Call

        }, {
          key: "editLeaves",
          value: function editLeaves() {
            var _this10 = this;

            if (this.editLeaveadminForm.valid) {
              var obj = {
                employeeName: "Mike Litorus",
                designation: "web developer",
                leaveType: this.editLeaveadminForm.value.LeaveType,
                from: this.editFromDate,
                to: this.editToDate,
                noofDays: this.editLeaveadminForm.value.NoOfDays,
                remainleaves: this.editLeaveadminForm.value.RemainLeaves,
                reason: this.editLeaveadminForm.value.LeaveReason,
                status: "Approved",
                id: this.editId
              };
              this.srvModuleService.update(obj, this.url).subscribe(function (data) {
                $("#datatable").DataTable().clear();

                _this10.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });

                _this10.dtTrigger.next();
              });
              this.loadLeaves();
              $("#edit_leave").modal("hide");
              this.toastr.success("Leaves Updated sucessfully...!", "Success");
            } else {
              this.toastr.warning("Mandatory fields required", "");
            }
          } // Delete leaves Modal Api Call

        }, {
          key: "deleteleaves",
          value: function deleteleaves() {
            var _this11 = this;

            this.srvModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              $("#datatable").DataTable().clear();

              _this11.dtElement.dtInstance.then(function (dtInstance) {
                dtInstance.destroy();
              });

              _this11.dtTrigger.next();
            });
            this.loadLeaves();
            $("#delete_approve").modal("hide");
            this.toastr.success("Leaves deleted sucessfully..!", "Success");
          } // To Get The leaves Edit Id And Set Values To Edit Modal Form

        }, {
          key: "edit",
          value: function edit(value) {
            this.editId = value;
            var index = this.lstLeave.findIndex(function (item) {
              return item.id === value;
            });
            var toSetValues = this.lstLeave[index];
            this.editLeaveadminForm.setValue({
              LeaveType: toSetValues.leaveType,
              From: toSetValues.from,
              To: toSetValues.to,
              NoOfDays: toSetValues.noofDays,
              RemainLeaves: toSetValues.remainleaves,
              LeaveReason: toSetValues.reason
            });
          } //search by name

        }, {
          key: "searchName",
          value: function searchName(val) {
            var _this$rows;

            this.rows.splice(0, this.rows.length);
            var temp = this.srch.filter(function (d) {
              val = val.toLowerCase();
              return d.employeeName.toLowerCase().indexOf(val) !== -1 || !val;
            });

            (_this$rows = this.rows).push.apply(_this$rows, _toConsumableArray(temp));
          } //search by status

        }, {
          key: "searchType",
          value: function searchType(val) {
            var _this$rows2;

            this.rows.splice(0, this.rows.length);
            var temp = this.srch.filter(function (d) {
              val = val.toLowerCase();
              return d.leaveType.toLowerCase().indexOf(val) !== -1 || !val;
            });

            (_this$rows2 = this.rows).push.apply(_this$rows2, _toConsumableArray(temp));
          }
        }, {
          key: "searchStatus",
          value: function searchStatus(val) {
            var _this$rows3;

            this.rows.splice(0, this.rows.length);
            var temp = this.srch.filter(function (d) {
              val = val.toLowerCase();
              return d.status.toLowerCase().indexOf(val) !== -1 || !val;
            });

            (_this$rows3 = this.rows).push.apply(_this$rows3, _toConsumableArray(temp));
          } //search by purchase

        }, {
          key: "searchByFrom",
          value: function searchByFrom(val) {
            var _this$rows4;

            var mySimpleFormat = this.pipe.transform(val, "dd-MM-yyyy");
            this.rows.splice(0, this.rows.length);
            var temp = this.srch.filter(function (d) {
              return d.from.indexOf(mySimpleFormat) !== -1 || !mySimpleFormat;
            });

            (_this$rows4 = this.rows).push.apply(_this$rows4, _toConsumableArray(temp));

            $(".floating").on("focus blur", function (e) {
              $(this).parents(".form-focus").toggleClass("focused", e.type === "focus" || this.value.length > 0);
            }).trigger("blur");
          } //search by warranty

        }, {
          key: "searchByTo",
          value: function searchByTo(val) {
            var _this$rows5;

            var mySimpleFormat = this.pipe.transform(val, "dd-MM-yyyy");
            this.rows.splice(0, this.rows.length);
            var temp = this.srch.filter(function (d) {
              return d.to.indexOf(mySimpleFormat) !== -1 || !mySimpleFormat;
            });

            (_this$rows5 = this.rows).push.apply(_this$rows5, _toConsumableArray(temp));

            $(".floating").on("focus blur", function (e) {
              $(this).parents(".form-focus").toggleClass("focused", e.type === "focus" || this.value.length > 0);
            }).trigger("blur");
          } //getting the status value

        }, {
          key: "getStatus",
          value: function getStatus(data) {
            this.statusValue = data;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // Do not forget to unsubscribe the event
            this.dtTrigger.unsubscribe();
          }
        }]);

        return LeavesAdminComponent;
      }();

      LeavesAdminComponent.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]
        }];
      };

      LeavesAdminComponent.propDecorators = {
        dtElement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"],
          args: [angular_datatables__WEBPACK_IMPORTED_MODULE_8__["DataTableDirective"], {
            "static": false
          }]
        }]
      };
      LeavesAdminComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-leaves-admin",
        template: _raw_loader_leaves_admin_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_leaves_admin_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])], LeavesAdminComponent);
      /***/
    },

    /***/
    "8LvB":
    /*!*******************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/departments/departments.component.html ***!
      \*******************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function LvB(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Department</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Department</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <a  class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_department\"><i\r\n                        class=\"fa fa-plus\"></i> Add Department</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div>\r\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                    class=\"table table-striped custom-table datatable mb-0\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 30px;\">#</th>\r\n                            <th>Department Name</th>\r\n                            <th class=\"text-right\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of lstDepartment\">\r\n                            <td>{{item.id}}</td>\r\n                            <td>{{item.departmentName}}</td>\r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a  class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#edit_department\" (click)=\"edit(item.id)\"><i\r\n                                                class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#delete_department\" (click)=\"tempId = item.id\"><i\r\n                                                class=\"fa fa-trash-o m-r-5\"></i>\r\n                                            Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Add Department Modal -->\r\n<div id=\"add_department\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Add Department</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            \r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"addDepartment()\" [formGroup]=\"addDepartmentForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Department Name <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"addDepartmentForm.get('DepartmentName').invalid && addDepartmentForm.get('DepartmentName').touched\"\r\n                            formControlName=\"DepartmentName\">\r\n                        <div\r\n                            *ngIf=\"addDepartmentForm.get('DepartmentName').invalid && addDepartmentForm.get('DepartmentName').touched\">\r\n                            <small\r\n                                *ngIf=\"addDepartmentForm.get('DepartmentName').invalid && addDepartmentForm.get('DepartmentName').touched\"\r\n                                class=\"text-danger\"> *Department Name required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Add Department Modal -->\r\n\r\n<!-- Edit Department Modal -->\r\n<div id=\"edit_department\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Edit Department</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"editDepartment()\" [formGroup]=\"editDepartmentForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Department Name <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" value=\"IT Management\" type=\"text\"\r\n                            [class.invalid]=\"editDepartmentForm.get('DepartmentName').invalid && editDepartmentForm.get('DepartmentName').touched\"\r\n                            formControlName=\"DepartmentName\">\r\n                        <div\r\n                            *ngIf=\"editDepartmentForm.get('DepartmentName').invalid && editDepartmentForm.get('DepartmentName').touched\">\r\n                            <small\r\n                                *ngIf=\"editDepartmentForm.get('DepartmentName').invalid && editDepartmentForm.get('DepartmentName').touched\"\r\n                                class=\"text-danger\"> *Department Name required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Edit Department Modal -->\r\n\r\n<!-- Delete Department Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_department\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Department</h3>\r\n                    <p>Are you sure want to delete?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a  class=\"btn btn-primary continue-btn\"\r\n                                (click)=\"deleteDepartment()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a  data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Delete Department Modal -->";
      /***/
    },

    /***/
    "8mBD":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/pt.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function mBD(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Portuguese [pt]
      //! author : Jefferson : https://github.com/jalex79
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var pt = moment.defineLocale('pt', {
          months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
          monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
          weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
          weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
          weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function lastWeek() {
              return this.day() === 0 || this.day() === 6 ? '[Último] dddd [às] LT' // Saturday + Sunday
              : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            w: 'uma semana',
            ww: '%d semanas',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return pt;
      });
      /***/

    },

    /***/
    "9rRi":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/gd.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function rRi(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Scottish Gaelic [gd]
      //! author : Jon Ashdown : https://github.com/jonashdown
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var months = ['Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'],
            monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'],
            weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'],
            weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
            weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];
        var gd = moment.defineLocale('gd', {
          months: months,
          monthsShort: monthsShort,
          monthsParseExact: true,
          weekdays: weekdays,
          weekdaysShort: weekdaysShort,
          weekdaysMin: weekdaysMin,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[An-diugh aig] LT',
            nextDay: '[A-màireach aig] LT',
            nextWeek: 'dddd [aig] LT',
            lastDay: '[An-dè aig] LT',
            lastWeek: 'dddd [seo chaidh] [aig] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'ann an %s',
            past: 'bho chionn %s',
            s: 'beagan diogan',
            ss: '%d diogan',
            m: 'mionaid',
            mm: '%d mionaidean',
            h: 'uair',
            hh: '%d uairean',
            d: 'latha',
            dd: '%d latha',
            M: 'mìos',
            MM: '%d mìosan',
            y: 'bliadhna',
            yy: '%d bliadhna'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function ordinal(number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return gd;
      });
      /***/

    },

    /***/
    "A+xa":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/cv.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function AXa(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chuvash [cv]
      //! author : Anatoly Mironov : https://github.com/mirontoli
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var cv = moment.defineLocale('cv', {
          months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
          monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
          weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
          weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
          weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
          },
          calendar: {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
          },
          relativeTime: {
            future: function future(output) {
              var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
              return output + affix;
            },
            past: '%s каялла',
            s: 'пӗр-ик ҫеккунт',
            ss: '%d ҫеккунт',
            m: 'пӗр минут',
            mm: '%d минут',
            h: 'пӗр сехет',
            hh: '%d сехет',
            d: 'пӗр кун',
            dd: '%d кун',
            M: 'пӗр уйӑх',
            MM: '%d уйӑх',
            y: 'пӗр ҫул',
            yy: '%d ҫул'
          },
          dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
          ordinal: '%d-мӗш',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return cv;
      });
      /***/

    },

    /***/
    "ADh3":
    /*!*****************************************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/all-employees/employee-page-content/employee-page-content.component.html ***!
      \*****************************************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function ADh3(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Employee</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\">\r\n                        <a routerLink=\"/dashboard\">Dashboard</a>\r\n                    </li>\r\n                    <li class=\"breadcrumb-item active\">Employee</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <!-- <a  class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_employee\"><i\r\n                        class=\"fa fa-plus\"></i> Add Employee</a> -->\r\n                <a class=\"btn add-btn\" routerLink=\"/employees/add-employee\"><i class=\"fa fa-plus\"></i> Add Employee</a>\r\n                <div class=\"view-icons\">\r\n                    <a routerLink=\"/employees/employeepage\" class=\"grid-view btn btn-link active\"><i\r\n                            class=\"fa fa-th\"></i></a>\r\n                    <a routerLink=\"/employees/employeelist\" class=\"list-view btn btn-link\"><i\r\n                            class=\"fa fa-bars\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    <!-- Search Filter -->\r\n    <div class=\"row filter-row\">\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"form-group form-focus\">\r\n                <input type=\"text\" class=\"form-control floating\" (input)=\"searchId($event.target.value)\" />\r\n                <label class=\"focus-label\">Emp Code</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"form-group form-focus\">\r\n                <input type=\"text\" class=\"form-control floating\" (input)=\"searchName($event.target.value)\" />\r\n                <label class=\"focus-label\">Employee Name</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\" *ngIf=\"designations\">\r\n            <div class=\"form-group form-focus select-focus\">\r\n                <select class=\"select form-control\" (input)=\"searchByDesignation($event.target.value)\">\r\n                    <option value=\"\">Select Designation</option>\r\n                    <option *ngFor=\"let data of designations\" [value]='data.id'>{{data.title}}\r\n                    </option>\r\n                </select>\r\n                <label class=\"focus-label\">Designation</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <a class=\"btn btn-success btn-block\"> Search </a>\r\n        </div>\r\n    </div>\r\n    <!-- Search Filter -->\r\n\r\n    <div class=\"row staff-grid-row\">\r\n        <div class=\"col-md-4 col-sm-6 col-12 col-lg-4 col-xl-3\" *ngFor=\"let emp of empList | paginate : {\r\n            itemsPerPage: pageSize,\r\n            currentPage: pageNum,\r\n            totalItems: totalItem\r\n        } ; let i = index\" [class.active]=\"i == currentIndex\">\r\n            <div class=\"profile-widget\">\r\n                <div class=\"profile-img\">\r\n                    <a [routerLink]=\"'/employees/employeeprofile/'+emp.id\" class=\"avatar\"><img style=\"height:80px;width:80px;\" src=\"{{ baseUrl + emp.pic_ }}\"\r\n                            alt=\"\" />\r\n                   \r\n                    </a>\r\n                </div>\r\n                <div class=\"dropdown profile-action\">\r\n                    <a class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\"><i\r\n                            class=\"material-icons\">more_vert</i></a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                        <a class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#edit_employee\"\r\n                            (click)=\"editEmp(emp.id)\"><i class=\"fa fa-lock m-r-5\"></i> Permission</a>\r\n                        <a class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#delete_employee\"\r\n                            (click)=\"tempId = emp.id\"><i class=\"fa fa-trash-o m-r-5\"></i> Delete</a>\r\n                    </div>\r\n                </div>\r\n                <h4 class=\"user-name m-t-10 mb-0 text-ellipsis\">\r\n                    <a routerLink=\"/employees/employeeprofile\">{{ emp.displayName }}</a>\r\n                </h4>\r\n                <div class=\"small text-muted\">{{emp.designation}} -- {{emp.department}}</div>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n    <!-- pagination -->\r\n    <div class=\"d-flex justify-content-end \">\r\n\r\n        <div class=\"\" [formGroup]=\"myGroup\">\r\n            Items per Page\r\n            <select (change)=\"handlePageSizeChange($event)\" class=\"pgn-pageSizeOption\" formControlName=\"pageSize\">\r\n                <option *ngFor=\"let size of pageSizes\" [value]=\"size\">\r\n                    {{ size }}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"pgn-pageSliceCt\">\r\n            <pagination-controls \r\n                responsive=\"true\" \r\n                previousLabel=\"Prev\" \r\n                nextLabel=\"Next\" \r\n                (pageChange)=\"handlePageChange($event)\">\r\n            </pagination-controls>\r\n        </div>\r\n        \r\n    </div>\r\n</div>\r\n\r\n<!-- /Page Content -->\r\n\r\n\r\n\r\n<!-- Delete Employee Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_employee\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Employee</h3>\r\n                    <p>Are you sure want to delete?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a class=\"btn btn-primary continue-btn\" (click)=\"deleteEmployee()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a data-dismiss=\"modal\" class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Delete Employee Modal -->\r\n\r\n<ngx-spinner bdColor = \"rgba(0,0,0,0.3)\" size = \"medium\" color = \"#667eea\" type = \"ball-clip-rotate\" [fullScreen] = \"false\"><p style=\"color: white\" > Processing... </p></ngx-spinner>";
      /***/
    },

    /***/
    "AQ68":
    /*!***********************************************!*\
      !*** ./node_modules/moment/locale/uz-latn.js ***!
      \***********************************************/

    /*! no static exports found */

    /***/
    function AQ68(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Uzbek Latin [uz-latn]
      //! author : Rasulbek Mirzayev : github.com/Rasulbeeek
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var uzLatn = moment.defineLocale('uz-latn', {
          months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
          monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
          weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
          weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
          weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm'
          },
          calendar: {
            sameDay: '[Bugun soat] LT [da]',
            nextDay: '[Ertaga] LT [da]',
            nextWeek: 'dddd [kuni soat] LT [da]',
            lastDay: '[Kecha soat] LT [da]',
            lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
            sameElse: 'L'
          },
          relativeTime: {
            future: 'Yaqin %s ichida',
            past: 'Bir necha %s oldin',
            s: 'soniya',
            ss: '%d soniya',
            m: 'bir daqiqa',
            mm: '%d daqiqa',
            h: 'bir soat',
            hh: '%d soat',
            d: 'bir kun',
            dd: '%d kun',
            M: 'bir oy',
            MM: '%d oy',
            y: 'bir yil',
            yy: '%d yil'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return uzLatn;
      });
      /***/

    },

    /***/
    "AuF9":
    /*!********************************************************************!*\
      !*** ./src/app/all-modules/employees/services/employee.service.ts ***!
      \********************************************************************/

    /*! exports provided: EmployeeService */

    /***/
    function AuF9(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EmployeeService", function () {
        return EmployeeService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "tk/3");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var src_environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/environments/environment */
      "AytR");

      var EmployeeService = /*#__PURE__*/function () {
        function EmployeeService(http) {
          _classCallCheck(this, EmployeeService);

          this.http = http;
          this.baseUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].baseUrl;
        } // Get Employee  Api Call


        _createClass(EmployeeService, [{
          key: "getEmployees",
          value: function getEmployees() {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmp/empList"));
          } // get empList list view 

        }, {
          key: "getEmpListView",
          value: function getEmpListView(apiURL, queryParams) {
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          } // Get Employee via paginations

        }, {
          key: "sendGetRequest",
          value: function sendGetRequest(apiURL, queryParams) {
            console.log("@sendGetRequest");
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          } // create HrCrEmp  Api Call

        }, {
          key: "createEmploy",
          value: function createEmploy(emp) {
            return this.http.post("".concat(this.baseUrl, "/hrCrEmp/create"), emp);
          } //update HrCrEmp Api Call

        }, {
          key: "updateEmploy",
          value: function updateEmploy(data) {
            // return this.http.put(`${baseUrl}/hrCrEmp/update`, data);
            return this.http.put("".concat(this.baseUrl, "/hrCrEmp/edit"), data);
          } // Get employee By id 

        }, {
          key: "getEmployeeById",
          value: function getEmployeeById(id) {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmp/get/").concat(id)); //return this.http.get(`${baseUrl}/hrCrEmp/get/${id}`);
          } // Get employee By id 

        }, {
          key: "findEmployeeById",
          value: function findEmployeeById(id) {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmp/find/").concat(id)); //return this.http.get(`${baseUrl}/hrCrEmp/get/${id}`);
          } //get employee by loginCode

        }, {
          key: "getEmployeeByLoginCode",
          value: function getEmployeeByLoginCode(loginCode) {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmp/findByLoginCode/").concat(loginCode));
          } //upload profile image file

        }, {
          key: "uploadProfileImage",
          value: function uploadProfileImage(id, formData) {
            return this.http.post("".concat(this.baseUrl, "/multimedia/profile/").concat(id), formData);
          } // Get ALKP Search By Keyword Api Call

        }, {
          key: "getAlkpSearchByKeyword",
          value: function getAlkpSearchByKeyword(keyword) {
            return this.http.get("".concat(this.baseUrl, "/alkp/search/").concat(keyword));
          } //save employee assignemnt data 

        }, {
          key: "saveEmployeeAssignemntData",
          value: function saveEmployeeAssignemntData(data) {
            return this.http.post("".concat(this.baseUrl, "/hrCrEmpAssgnmnt/create"), data);
          } //save employee assignemnt data 
          //  public saveEmployeeAssignemntData2(data){
          //   return this.http.post(`${baseUrl}/hrCrEmpAssgnmnt/save`,data);
          // }
          //update employeeAssignment 

        }, {
          key: "updateEmployeeAssignment",
          value: function updateEmployeeAssignment(data) {
            return this.http.put("".concat(this.baseUrl, "/hrCrEmpAssgnmnt/edit"), data);
          } // get last assignment by HrCrEmpId

        }, {
          key: "getLastAssignmentByHrCrEmpId",
          value: function getLastAssignmentByHrCrEmpId(id) {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmpAssgnmnt/getByHrCrEmp/").concat(id));
          } // get employee assignment By Id 

        }, {
          key: "getEmployeeAssignmentByHrCrEmpId",
          value: function getEmployeeAssignmentByHrCrEmpId(id) {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmpAssgnmnt/getByHrCrEmpId/").concat(id));
          } //save or update emp bank and payroll tabs data 

        }, {
          key: "saveOrUpdateBankAndPayroll",
          value: function saveOrUpdateBankAndPayroll(data) {
            return this.http.post("".concat(this.baseUrl, "/hrCrEmpAssgnmnt/saveBankAndPayroll"), data);
          } // get designation

        }, {
          key: "getDesignations",
          value: function getDesignations() {
            return this.http.get("".concat(this.baseUrl, "/designation/getAll"));
          } // Get All ALKP Api Call 

        }, {
          key: "getALLDivisions",
          value: function getALLDivisions(id) {
            return this.http.get("".concat(this.baseUrl, "/address/division/").concat(id));
          }
        }, {
          key: "fetchAllDivision",
          value: function fetchAllDivision() {
            return this.http.get("".concat(this.baseUrl, "/address/division/getAll"));
          }
        }, {
          key: "getDistrictByDivId",
          value: function getDistrictByDivId(id) {
            return this.http.get("".concat(this.baseUrl, "/address/division/").concat(id));
          }
        }, {
          key: "getAllDistrict",
          value: function getAllDistrict(apiURL, queryParams) {
            console.log("@getAllDistrict");
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          }
        }, {
          key: "getAllUpazila",
          value: function getAllUpazila(apiURL, queryParams) {
            console.log("@getAllUpazila");
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          }
        }, {
          key: "getAllUnions",
          value: function getAllUnions(apiURL, queryParams) {
            console.log("@sendGetRequest");
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          } // save hrCrEmpEdu informations

        }, {
          key: "saveHrCrEmpEdu",
          value: function saveHrCrEmpEdu(data) {
            return this.http.post("".concat(this.baseUrl, "/hrCrEmpEdu/create"), data);
          } //find by empId

        }, {
          key: "findhrCrEmpEduByEmpId",
          value: function findhrCrEmpEduByEmpId(empId) {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmpEdu/find/").concat(empId));
          } //find byId

        }, {
          key: "findhrCrEmpEduById",
          value: function findhrCrEmpEduById(id) {
            return this.http.get("".concat(this.baseUrl, "/hrCrEmpEdu/get/").concat(id));
          } //edit employee education 

        }, {
          key: "edithrCrEmpEducation",
          value: function edithrCrEmpEducation(data) {
            return this.http.put("".concat(this.baseUrl, "/hrCrEmpEdu/edit"), data);
          } //delete emp education

        }, {
          key: "deleteHrCrEmpEducation",
          value: function deleteHrCrEmpEducation(id) {
            return this.http["delete"]("".concat(this.baseUrl, "/hrCrEmpEdu/delete/").concat(id));
          } //Get Raw Attendance data from Device

        }, {
          key: "getAllRawAttendanceData",
          value: function getAllRawAttendanceData() {
            return this.http.get("".concat(this.baseUrl, "/attn/findAllBySrcType"));
          }
        }, {
          key: "getAllRawAttendanceData2",
          value: function getAllRawAttendanceData2(apiURL, queryParams) {
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          } //Post viaHrAttn

        }, {
          key: "createAttnViaHr",
          value: function createAttnViaHr(data) {
            return this.http.post("".concat(this.baseUrl, "/AttnViaHr/save"), data);
          } //Get viaHrAttn Attendance data from

        }, {
          key: "getAllViaHrAttnData",
          value: function getAllViaHrAttnData() {
            return this.http.get("".concat(this.baseUrl, "/AttnViaHr/findAllBySrcType"));
          }
        }, {
          key: "getAllViaHrAttnData2",
          value: function getAllViaHrAttnData2(apiURL, queryParams) {
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          }
        }, {
          key: "getSearchAttn",
          value: function getSearchAttn(apiURL, queryParams) {
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          } //Leave related api
          //crearte leave tenc

        }, {
          key: "createLeave",
          value: function createLeave(data) {
            return this.http.post("".concat(this.baseUrl, "/leaveTrnse/save"), data);
          }
        }]);

        return EmployeeService;
      }();

      EmployeeService.ctorParameters = function () {
        return [{
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
        }];
      };

      EmployeeService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])], EmployeeService);
      /***/
    },

    /***/
    "AvvY":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ml.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function AvvY(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malayalam [ml]
      //! author : Floyd Pink : https://github.com/floydpink
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ml = moment.defineLocale('ml', {
          months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
          monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
          monthsParseExact: true,
          weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
          weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
          weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm -നു',
            LTS: 'A h:mm:ss -നു',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm -നു',
            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു'
          },
          calendar: {
            sameDay: '[ഇന്ന്] LT',
            nextDay: '[നാളെ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ഇന്നലെ] LT',
            lastWeek: '[കഴിഞ്ഞ] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s കഴിഞ്ഞ്',
            past: '%s മുൻപ്',
            s: 'അൽപ നിമിഷങ്ങൾ',
            ss: '%d സെക്കൻഡ്',
            m: 'ഒരു മിനിറ്റ്',
            mm: '%d മിനിറ്റ്',
            h: 'ഒരു മണിക്കൂർ',
            hh: '%d മണിക്കൂർ',
            d: 'ഒരു ദിവസം',
            dd: '%d ദിവസം',
            M: 'ഒരു മാസം',
            MM: '%d മാസം',
            y: 'ഒരു വർഷം',
            yy: '%d വർഷം'
          },
          meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'രാത്രി' && hour >= 4 || meridiem === 'ഉച്ച കഴിഞ്ഞ്' || meridiem === 'വൈകുന്നേരം') {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'രാത്രി';
            } else if (hour < 12) {
              return 'രാവിലെ';
            } else if (hour < 17) {
              return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
              return 'വൈകുന്നേരം';
            } else {
              return 'രാത്രി';
            }
          }
        });
        return ml;
      });
      /***/

    },

    /***/
    "B55N":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ja.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function B55N(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Japanese [ja]
      //! author : LI Long : https://github.com/baryon
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ja = moment.defineLocale('ja', {
          eras: [{
            since: '2019-05-01',
            offset: 1,
            name: '令和',
            narrow: '㋿',
            abbr: 'R'
          }, {
            since: '1989-01-08',
            until: '2019-04-30',
            offset: 1,
            name: '平成',
            narrow: '㍻',
            abbr: 'H'
          }, {
            since: '1926-12-25',
            until: '1989-01-07',
            offset: 1,
            name: '昭和',
            narrow: '㍼',
            abbr: 'S'
          }, {
            since: '1912-07-30',
            until: '1926-12-24',
            offset: 1,
            name: '大正',
            narrow: '㍽',
            abbr: 'T'
          }, {
            since: '1873-01-01',
            until: '1912-07-29',
            offset: 6,
            name: '明治',
            narrow: '㍾',
            abbr: 'M'
          }, {
            since: '0001-01-01',
            until: '1873-12-31',
            offset: 1,
            name: '西暦',
            narrow: 'AD',
            abbr: 'AD'
          }, {
            since: '0000-12-31',
            until: -Infinity,
            offset: 1,
            name: '紀元前',
            narrow: 'BC',
            abbr: 'BC'
          }],
          eraYearOrdinalRegex: /(元|\d+)年/,
          eraYearOrdinalParse: function eraYearOrdinalParse(input, match) {
            return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);
          },
          months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
          weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
          weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
          weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日 dddd HH:mm',
            l: 'YYYY/MM/DD',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日(ddd) HH:mm'
          },
          meridiemParse: /午前|午後/i,
          isPM: function isPM(input) {
            return input === '午後';
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return '午前';
            } else {
              return '午後';
            }
          },
          calendar: {
            sameDay: '[今日] LT',
            nextDay: '[明日] LT',
            nextWeek: function nextWeek(now) {
              if (now.week() !== this.week()) {
                return '[来週]dddd LT';
              } else {
                return 'dddd LT';
              }
            },
            lastDay: '[昨日] LT',
            lastWeek: function lastWeek(now) {
              if (this.week() !== now.week()) {
                return '[先週]dddd LT';
              } else {
                return 'dddd LT';
              }
            },
            sameElse: 'L'
          },
          dayOfMonthOrdinalParse: /\d{1,2}日/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'y':
                return number === 1 ? '元年' : number + '年';

              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';

              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '数秒',
            ss: '%d秒',
            m: '1分',
            mm: '%d分',
            h: '1時間',
            hh: '%d時間',
            d: '1日',
            dd: '%d日',
            M: '1ヶ月',
            MM: '%dヶ月',
            y: '1年',
            yy: '%d年'
          }
        });
        return ja;
      });
      /***/

    },

    /***/
    "BVg3":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/is.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function BVg3(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Icelandic [is]
      //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function plural(n) {
          if (n % 100 === 11) {
            return true;
          } else if (n % 10 === 1) {
            return false;
          }

          return true;
        }

        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';

          switch (key) {
            case 's':
              return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';

            case 'ss':
              if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
              }

              return result + 'sekúnda';

            case 'm':
              return withoutSuffix ? 'mínúta' : 'mínútu';

            case 'mm':
              if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
              } else if (withoutSuffix) {
                return result + 'mínúta';
              }

              return result + 'mínútu';

            case 'hh':
              if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
              }

              return result + 'klukkustund';

            case 'd':
              if (withoutSuffix) {
                return 'dagur';
              }

              return isFuture ? 'dag' : 'degi';

            case 'dd':
              if (plural(number)) {
                if (withoutSuffix) {
                  return result + 'dagar';
                }

                return result + (isFuture ? 'daga' : 'dögum');
              } else if (withoutSuffix) {
                return result + 'dagur';
              }

              return result + (isFuture ? 'dag' : 'degi');

            case 'M':
              if (withoutSuffix) {
                return 'mánuður';
              }

              return isFuture ? 'mánuð' : 'mánuði';

            case 'MM':
              if (plural(number)) {
                if (withoutSuffix) {
                  return result + 'mánuðir';
                }

                return result + (isFuture ? 'mánuði' : 'mánuðum');
              } else if (withoutSuffix) {
                return result + 'mánuður';
              }

              return result + (isFuture ? 'mánuð' : 'mánuði');

            case 'y':
              return withoutSuffix || isFuture ? 'ár' : 'ári';

            case 'yy':
              if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
              }

              return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
          }
        }

        var is = moment.defineLocale('is', {
          months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
          monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
          weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
          weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
          weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm'
          },
          calendar: {
            sameDay: '[í dag kl.] LT',
            nextDay: '[á morgun kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[í gær kl.] LT',
            lastWeek: '[síðasta] dddd [kl.] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'eftir %s',
            past: 'fyrir %s síðan',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: 'klukkustund',
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return is;
      });
      /***/

    },

    /***/
    "ByF4":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/fo.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function ByF4(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Faroese [fo]
      //! author : Ragnar Johannesen : https://github.com/ragnar123
      //! author : Kristian Sakarisson : https://github.com/sakarisson
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var fo = moment.defineLocale('fo', {
          months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
          monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
          weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
          weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
          weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D. MMMM, YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Í dag kl.] LT',
            nextDay: '[Í morgin kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[Í gjár kl.] LT',
            lastWeek: '[síðstu] dddd [kl] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'um %s',
            past: '%s síðani',
            s: 'fá sekund',
            ss: '%d sekundir',
            m: 'ein minuttur',
            mm: '%d minuttir',
            h: 'ein tími',
            hh: '%d tímar',
            d: 'ein dagur',
            dd: '%d dagar',
            M: 'ein mánaður',
            MM: '%d mánaðir',
            y: 'eitt ár',
            yy: '%d ár'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return fo;
      });
      /***/

    },

    /***/
    "CITx":
    /*!************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/timesheet/timesheet.component.css ***!
      \************************************************************************************/

    /*! exports provided: default */

    /***/
    function CITx(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbWVzaGVldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtBQUNkIiwiZmlsZSI6InRpbWVzaGVldC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG5cdHBhZGRpbmc6IDMwcHg7XHJcbn0iXX0= */";
      /***/
    },

    /***/
    "CjzT":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/es-do.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function CjzT(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish (Dominican Republic) [es-do]
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
            _monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
            monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

        var esDo = moment.defineLocale('es-do', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
          monthsShort: function monthsShort(m, format) {
            if (!m) {
              return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
              return _monthsShort[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'
          },
          calendar: {
            sameDay: function sameDay() {
              return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function nextDay() {
              return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function nextWeek() {
              return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function lastDay() {
              return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function lastWeek() {
              return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return esDo;
      });
      /***/

    },

    /***/
    "CoRJ":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ar-ma.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function CoRJ(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Morocco) [ar-ma]
      //! author : ElFadili Yassine : https://github.com/ElFadiliY
      //! author : Abdel Said : https://github.com/abdelsaid
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var arMa = moment.defineLocale('ar-ma', {
          months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
          monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
          weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return arMa;
      });
      /***/

    },

    /***/
    "D/JM":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/eu.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function DJM(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Basque [eu]
      //! author : Eneko Illarramendi : https://github.com/eillarra
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var eu = moment.defineLocale('eu', {
          months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
          monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
          monthsParseExact: true,
          weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
          weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
          weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY[ko] MMMM[ren] D[a]',
            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l: 'YYYY-M-D',
            ll: 'YYYY[ko] MMM D[a]',
            lll: 'YYYY[ko] MMM D[a] HH:mm',
            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm'
          },
          calendar: {
            sameDay: '[gaur] LT[etan]',
            nextDay: '[bihar] LT[etan]',
            nextWeek: 'dddd LT[etan]',
            lastDay: '[atzo] LT[etan]',
            lastWeek: '[aurreko] dddd LT[etan]',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s barru',
            past: 'duela %s',
            s: 'segundo batzuk',
            ss: '%d segundo',
            m: 'minutu bat',
            mm: '%d minutu',
            h: 'ordu bat',
            hh: '%d ordu',
            d: 'egun bat',
            dd: '%d egun',
            M: 'hilabete bat',
            MM: '%d hilabete',
            y: 'urte bat',
            yy: '%d urte'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return eu;
      });
      /***/

    },

    /***/
    "DKr+":
    /*!************************************************!*\
      !*** ./node_modules/moment/locale/gom-latn.js ***!
      \************************************************/

    /*! no static exports found */

    /***/
    function DKr(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Konkani Latin script [gom-latn]
      //! author : The Discoverer : https://github.com/WikiDiscoverer
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ['thoddea sekondamni', 'thodde sekond'],
            ss: [number + ' sekondamni', number + ' sekond'],
            m: ['eka mintan', 'ek minut'],
            mm: [number + ' mintamni', number + ' mintam'],
            h: ['eka voran', 'ek vor'],
            hh: [number + ' voramni', number + ' voram'],
            d: ['eka disan', 'ek dis'],
            dd: [number + ' disamni', number + ' dis'],
            M: ['eka mhoinean', 'ek mhoino'],
            MM: [number + ' mhoineamni', number + ' mhoine'],
            y: ['eka vorsan', 'ek voros'],
            yy: [number + ' vorsamni', number + ' vorsam']
          };
          return isFuture ? format[key][0] : format[key][1];
        }

        var gomLatn = moment.defineLocale('gom-latn', {
          months: {
            standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
            format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split('_'),
            isFormat: /MMMM(\s)+D[oD]?/
          },
          monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
          monthsParseExact: true,
          weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split('_'),
          weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
          weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'A h:mm [vazta]',
            LTS: 'A h:mm:ss [vazta]',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY A h:mm [vazta]',
            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
          },
          calendar: {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Fuddlo] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fattlo] dddd[,] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s',
            past: '%s adim',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              // the ordinal 'er' only applies to day of the month
              case 'D':
                return number + 'er';

              default:
              case 'M':
              case 'Q':
              case 'DDD':
              case 'd':
              case 'w':
              case 'W':
                return number;
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week
            doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)

          },
          meridiemParse: /rati|sokallim|donparam|sanje/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'rati') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokallim') {
              return hour;
            } else if (meridiem === 'donparam') {
              return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'rati';
            } else if (hour < 12) {
              return 'sokallim';
            } else if (hour < 16) {
              return 'donparam';
            } else if (hour < 20) {
              return 'sanje';
            } else {
              return 'rati';
            }
          }
        });
        return gomLatn;
      });
      /***/

    },

    /***/
    "Da81":
    /*!**********************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/overtime/overtime.component.css ***!
      \**********************************************************************************/

    /*! exports provided: default */

    /***/
    function Da81(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm92ZXJ0aW1lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2QiLCJmaWxlIjoib3ZlcnRpbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59Il19 */";
      /***/
    },

    /***/
    "Dkky":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/fr-ch.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function Dkky(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French (Switzerland) [fr-ch]
      //! author : Gaspard Bucher : https://github.com/gaspard
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var frCh = moment.defineLocale('fr-ch', {
          months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
          monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
          monthsParseExact: true,
          weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
          weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
          weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              // Words with masculine grammatical gender: mois, trimestre, jour
              default:
              case 'M':
              case 'Q':
              case 'D':
              case 'DDD':
              case 'd':
                return number + (number === 1 ? 'er' : 'e');
              // Words with feminine grammatical gender: semaine

              case 'w':
              case 'W':
                return number + (number === 1 ? 're' : 'e');
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return frCh;
      });
      /***/

    },

    /***/
    "Dmvi":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-au.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function Dmvi(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Australia) [en-au]
      //! author : Jared Morse : https://github.com/jarcoal
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enAu = moment.defineLocale('en-au', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return enAu;
      });
      /***/

    },

    /***/
    "DoHr":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/tr.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function DoHr(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Turkish [tr]
      //! authors : Erhan Gundogan : https://github.com/erhangundogan,
      //!           Burak Yiğit Kaya: https://github.com/BYK
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var suffixes = {
          1: "'inci",
          5: "'inci",
          8: "'inci",
          70: "'inci",
          80: "'inci",
          2: "'nci",
          7: "'nci",
          20: "'nci",
          50: "'nci",
          3: "'üncü",
          4: "'üncü",
          100: "'üncü",
          6: "'ncı",
          9: "'uncu",
          10: "'uncu",
          30: "'uncu",
          60: "'ıncı",
          90: "'ıncı"
        };
        var tr = moment.defineLocale('tr', {
          months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
          monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
          weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
          weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
          weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 12) {
              return isLower ? 'öö' : 'ÖÖ';
            } else {
              return isLower ? 'ös' : 'ÖS';
            }
          },
          meridiemParse: /öö|ÖÖ|ös|ÖS/,
          isPM: function isPM(input) {
            return input === 'ös' || input === 'ÖS';
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[yarın saat] LT',
            nextWeek: '[gelecek] dddd [saat] LT',
            lastDay: '[dün] LT',
            lastWeek: '[geçen] dddd [saat] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s sonra',
            past: '%s önce',
            s: 'birkaç saniye',
            ss: '%d saniye',
            m: 'bir dakika',
            mm: '%d dakika',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            w: 'bir hafta',
            ww: '%d hafta',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir yıl',
            yy: '%d yıl'
          },
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'Do':
              case 'DD':
                return number;

              default:
                if (number === 0) {
                  // special case for zero
                  return number + "'ıncı";
                }

                var a = number % 10,
                    b = number % 100 - a,
                    c = number >= 100 ? 100 : null;
                return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return tr;
      });
      /***/

    },

    /***/
    "DxQv":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/da.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function DxQv(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Danish [da]
      //! author : Ulrik Nielsen : https://github.com/mrbase
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var da = moment.defineLocale('da', {
          months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
          monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
          weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
          weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
          weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
          },
          calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'på dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[i] dddd[s kl.] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'få sekunder',
            ss: '%d sekunder',
            m: 'et minut',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dage',
            M: 'en måned',
            MM: '%d måneder',
            y: 'et år',
            yy: '%d år'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return da;
      });
      /***/

    },

    /***/
    "Dzi0":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/tl-ph.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function Dzi0(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tagalog (Philippines) [tl-ph]
      //! author : Dan Hagman : https://github.com/hagmandan
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var tlPh = moment.defineLocale('tl-ph', {
          months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
          monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
          weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
          weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
          weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm'
          },
          calendar: {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            ss: '%d segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon'
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: function ordinal(number) {
            return number;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return tlPh;
      });
      /***/

    },

    /***/
    "E+lV":
    /*!***********************************************!*\
      !*** ./node_modules/moment/locale/sr-cyrl.js ***!
      \***********************************************/

    /*! no static exports found */

    /***/
    function ELV(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Serbian Cyrillic [sr-cyrl]
      //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
      //! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var translator = {
          words: {
            //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
          },
          correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
          },
          translate: function translate(number, withoutSuffix, key) {
            var wordKey = translator.words[key];

            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
          }
        };
        var srCyrl = moment.defineLocale('sr-cyrl', {
          months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
          monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
          monthsParseExact: true,
          weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
          weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
          weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D. M. YYYY.',
            LL: 'D. MMMM YYYY.',
            LLL: 'D. MMMM YYYY. H:mm',
            LLLL: 'dddd, D. MMMM YYYY. H:mm'
          },
          calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[у] [недељу] [у] LT';

                case 3:
                  return '[у] [среду] [у] LT';

                case 6:
                  return '[у] [суботу] [у] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[у] dddd [у] LT';
              }
            },
            lastDay: '[јуче у] LT',
            lastWeek: function lastWeek() {
              var lastWeekDays = ['[прошле] [недеље] [у] LT', '[прошлог] [понедељка] [у] LT', '[прошлог] [уторка] [у] LT', '[прошле] [среде] [у] LT', '[прошлог] [четвртка] [у] LT', '[прошлог] [петка] [у] LT', '[прошле] [суботе] [у] LT'];
              return lastWeekDays[this.day()];
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'за %s',
            past: 'пре %s',
            s: 'неколико секунди',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'дан',
            dd: translator.translate,
            M: 'месец',
            MM: translator.translate,
            y: 'годину',
            yy: translator.translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.

          }
        });
        return srCyrl;
      });
      /***/

    },

    /***/
    "EOgW":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/th.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function EOgW(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Thai [th]
      //! author : Kridsada Thanabulpong : https://github.com/sirn
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var th = moment.defineLocale('th', {
          months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
          monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
          monthsParseExact: true,
          weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
          weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'),
          // yes, three characters difference
          weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY เวลา H:mm',
            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'
          },
          meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
          isPM: function isPM(input) {
            return input === 'หลังเที่ยง';
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ก่อนเที่ยง';
            } else {
              return 'หลังเที่ยง';
            }
          },
          calendar: {
            sameDay: '[วันนี้ เวลา] LT',
            nextDay: '[พรุ่งนี้ เวลา] LT',
            nextWeek: 'dddd[หน้า เวลา] LT',
            lastDay: '[เมื่อวานนี้ เวลา] LT',
            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'อีก %s',
            past: '%sที่แล้ว',
            s: 'ไม่กี่วินาที',
            ss: '%d วินาที',
            m: '1 นาที',
            mm: '%d นาที',
            h: '1 ชั่วโมง',
            hh: '%d ชั่วโมง',
            d: '1 วัน',
            dd: '%d วัน',
            w: '1 สัปดาห์',
            ww: '%d สัปดาห์',
            M: '1 เดือน',
            MM: '%d เดือน',
            y: '1 ปี',
            yy: '%d ปี'
          }
        });
        return th;
      });
      /***/

    },

    /***/
    "Fnuy":
    /*!**********************************************!*\
      !*** ./node_modules/moment/locale/oc-lnc.js ***!
      \**********************************************/

    /*! no static exports found */

    /***/
    function Fnuy(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Occitan, lengadocian dialecte [oc-lnc]
      //! author : Quentin PAGÈS : https://github.com/Quenty31
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ocLnc = moment.defineLocale('oc-lnc', {
          months: {
            standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split('_'),
            format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
          },
          monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split('_'),
          weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
          weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [de] YYYY',
            ll: 'D MMM YYYY',
            LLL: 'D MMMM [de] YYYY [a] H:mm',
            lll: 'D MMM YYYY, H:mm',
            LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
            llll: 'ddd D MMM YYYY, H:mm'
          },
          calendar: {
            sameDay: '[uèi a] LT',
            nextDay: '[deman a] LT',
            nextWeek: 'dddd [a] LT',
            lastDay: '[ièr a] LT',
            lastWeek: 'dddd [passat a] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: "d'aquí %s",
            past: 'fa %s',
            s: 'unas segondas',
            ss: '%d segondas',
            m: 'una minuta',
            mm: '%d minutas',
            h: 'una ora',
            hh: '%d oras',
            d: 'un jorn',
            dd: '%d jorns',
            M: 'un mes',
            MM: '%d meses',
            y: 'un an',
            yy: '%d ans'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
          ordinal: function ordinal(number, period) {
            var output = number === 1 ? 'r' : number === 2 ? 'n' : number === 3 ? 'r' : number === 4 ? 't' : 'è';

            if (period === 'w' || period === 'W') {
              output = 'a';
            }

            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4
          }
        });
        return ocLnc;
      });
      /***/

    },

    /***/
    "Fpll":
    /*!*********************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/attendance-row-admin/attendance-row-admin.component.ts ***!
      \*********************************************************************************************************/

    /*! exports provided: AttendanceRowAdminComponent */

    /***/
    function Fpll(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AttendanceRowAdminComponent", function () {
        return AttendanceRowAdminComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_attendance_row_admin_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./attendance-row-admin.component.html */
      "Ft0J");
      /* harmony import */


      var _attendance_row_admin_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./attendance-row-admin.component.css */
      "TPpV");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var src_environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! src/environments/environment */
      "AytR");
      /* harmony import */


      var _services_employee_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../../services/employee.service */
      "AuF9");

      var AttendanceRowAdminComponent = /*#__PURE__*/function () {
        function AttendanceRowAdminComponent(formBuilder, toastr, empService, datePipe, hrEmp) {
          _classCallCheck(this, AttendanceRowAdminComponent);

          this.formBuilder = formBuilder;
          this.toastr = toastr;
          this.empService = empService;
          this.datePipe = datePipe;
          this.hrEmp = hrEmp;
          this.hrTlAttenDaily = [];
          this.dtOptions = {};
          this.listData = [];
          this.baseUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].baseUrl; //pagination config

          this.pageNum = 1;
          this.pageSize = 3;
          this.pageSizes = [3, 5, 10, 25, 50, 100, 200, 500, 1000];
          this.totalItem = 50;
          this.pngDiplayLastSeq = 10;
          this.pngConfig = {
            pageNum: 1,
            pageSize: 5,
            totalItem: 50
          };
        }

        _createClass(AttendanceRowAdminComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            //for input floting
            if ($('.floating').length > 0) {
              $('.floating').on('focus blur', function (e) {
                $(this).parents('.form-focus').toggleClass('focused', e.type === 'focus' || this.value.length > 0);
              }).trigger('blur');
            } // for data table configuration


            this.dtOptions = {
              // ... skipped ...
              pageLength: 10,
              dom: "lrtip"
            };
            this.initializeForm(); //this.getAllRawAttendanceData();

            this.getAllRawAttendanceData2();
          }
        }, {
          key: "initializeForm",
          value: function initializeForm() {
            this.inputForm = this.formBuilder.group({
              empCode: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              executeDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]]
            });
          }
        }, {
          key: "getAllRawAttendanceData",
          value: function getAllRawAttendanceData() {
            var _this12 = this;

            this.empService.getAllRawAttendanceData().subscribe(function (data) {
              _this12.hrTlAttenDaily = data;
            });
          }
        }, {
          key: "getAllRawAttendanceData2",
          value: function getAllRawAttendanceData2() {
            var _this13 = this;

            var apiURL = this.baseUrl + "/attn/findAllBySrcType";
            var queryParams = {};
            var params = this.getUserQueryParams(this.pageNum, this.pageSize);
            queryParams = params;
            queryParams.srcType = "DEVICE";
            this.empService.getAllRawAttendanceData2(apiURL, queryParams).subscribe(function (response) {
              _this13.hrTlAttenDaily = response.objectList;
              _this13.totalItem = response.totalItems;

              _this13.setDisplayLastSequence(); // console.log(this.hrTlAttenDaily);
              // this.setDisplayLastSequence();

            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "getUserQueryParams",
          value: function getUserQueryParams(page, pageSize) {
            var params = {};

            if (page) {
              params["pageNum"] = page - 0;
            }

            if (pageSize) {
              params["pageSize"] = pageSize;
            }

            return params;
          }
        }, {
          key: "setDisplayLastSequence",
          value: function setDisplayLastSequence() {
            this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;

            if (this.listData.length < this.pageSize) {
              this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;
            }

            if (this.totalItem < this.pngDiplayLastSeq) {
              this.pngDiplayLastSeq = this.totalItem;
            }
          }
        }, {
          key: "handlePageChange",
          value: function handlePageChange(event) {
            this.pageNum = event;
            this.getAllRawAttendanceData2();
          }
        }, {
          key: "handlePageSizeChange",
          value: function handlePageSizeChange(event) {
            this.pageSize = event.target.value;
            this.pageNum = 1;
            this.getAllRawAttendanceData2();
          }
        }, {
          key: "searchAttn",
          value: function searchAttn() {
            var _this14 = this;

            var eCode = this.inputForm.value.empCode;
            var eDate = this.inputForm.value.executeDate;
            var converteDate = this.datePipe.transform(eDate, "yyyy-MM-dd").toString().slice(0, 10);
            var apiURL = this.baseUrl + "/attn/searchRowAttn";
            var queryParams = {};
            queryParams.srcType = "DEVICE";
            queryParams.eCode = eCode;
            queryParams.eDate = converteDate;
            this.empService.getSearchAttn(apiURL, queryParams).subscribe(function (data) {
              _this14.hrTlAttenDaily = data;
            }, function (error) {
              console.log(error);
            });
          } // for unsubscribe datatable

        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {// Do not forget to unsubscribe the event
          }
        }]);

        return AttendanceRowAdminComponent;
      }();

      AttendanceRowAdminComponent.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]
        }, {
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"]
        }, {
          type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]
        }, {
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"]
        }];
      };

      AttendanceRowAdminComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: 'app-attendance-row-admin',
        template: _raw_loader_attendance_row_admin_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_attendance_row_admin_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"], _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"], _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"]])], AttendanceRowAdminComponent);
      /***/
    },

    /***/
    "Ft0J":
    /*!*************************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/attendance-row-admin/attendance-row-admin.component.html ***!
      \*************************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function Ft0J(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\n<div class=\"content container-fluid\">\n\n    <!-- Page Header -->\n    <div class=\"page-header\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <h3 class=\"page-title\">Attendance Raw </h3>\n                <ul class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\n                    <li class=\"breadcrumb-item active\">AttendanceRaw</li>\n                </ul>\n            </div>\n            \n        </div>\n        \n    </div>\n    <!-- /Page Header -->\n\n   \t<!-- Search Filter -->\n       <form (ngSubmit)=\"searchAttn()\" [formGroup]=\"inputForm\">\n        <div class=\"row filter-row mb-4\"> \n        <div class=\"col-sm-6 col-md-3\">  \n            <div class=\"form-group form-focus\">\n                <div >\n                    <input class=\"form-control floating\"   formControlName=\"empCode\" type=\"text\" >\n                </div>\n                <label class=\"focus-label\">Emp Code</label>\n            </div>\n        </div>\n        <div class=\"col-sm-6 col-md-3\">  \n            <div class=\"form-group form-focus\">\n                <div class=\"cal-icon\">\n                    <input class=\"form-control floating datetimepicker\" formControlName=\"executeDate\" type=\"text\" bsDatepicker>\n                </div>\n                <label class=\"focus-label\">Date</label>\n            </div>\n        </div>\n        <div class=\"col-sm-6 col-md-3\">  \n            <button  class=\"btn btn-primary submit-btn\" type=\"submit\">\n                Search\n                <!-- [disabled]=\"!addEmployeeForm.valid\" -->\n            </button>\n        </div>  \t\t\n        </div>\n    </form>\n    <!-- /Search Filter -->\n\n    \n<!-- list view start -->\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"table-responsive\">\n                <div class=\"d-flex justify-content-start pb-1\">\n                    <div class=\"pgn-displayDataInfo\">\n                        <span class=\"page-item disabled\">Displaying ( {{ ( ((pageNum-1) * pageSize) + (1) ) }}  to {{pngDiplayLastSeq}} of {{totalItem}} ) entries</span>\n                    </div>\n                </div>\n                <table   class=\"table table-striped custom-table datatable\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Employee ID</th>\n                            <th>Card Number</th>\n                            <th>Punch Time</th>\n                            <th>Punch Date</th>\n                            <th>Source Type</th>\n                            <th class=\"text-right no-sort\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                       \n                        <tr *ngFor=\"let row of hrTlAttenDaily | paginate : {\n                            itemsPerPage: pageSize,\n                            currentPage: pageNum,\n                            totalItems: totalItem\n                        };let i = index\" [class.active]=\"i == currentIndex\">    \n                        <td>\n                            {{ 1 + i}}\n                        </td>\n                       \n                        <td>{{row.hrCrEmpId.firstName}}</td>\n                        <td>{{row.hrCrEmpId.loginCode}}</td>\n                        <td>{{row.cardNumber}}</td>\n                        <td>{{row.entryTime|date:'medium'}}</td>\n                        <td>{{row.entryDate|date}}</td>\n                        <td>{{row.srcType}}</td>\n                          \n                          \n                            <td class=\"text-right\">\n                                <div class=\"dropdown dropdown-action\">\n                                    <a  class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\n                                        data-target=\"#edit_employee\" (click)=\"edit(row.id)\"><i\n                                            class=\"fa fa-user m-r-5\"></i> Details</a>\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\n                                            data-target=\"#edit_employee\" (click)=\"edit(row.id)\"><i\n                                                class=\"fa fa-pencil m-r-5\"></i> Edit</a>\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\n                                            data-target=\"#delete_employee\" (click)=\"tempId = row.id\"><i\n                                                class=\"fa fa-trash-o m-r-5\"></i>\n                                            Delete</a>\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr *ngIf=\"hrTlAttenDaily.length === 0\">\n                            <td colspan=\"10\">\n                                <h5 style=\"text-align: center;\">No data found</h5>\n                            </td>\n                           \n                        </tr>\n                    </tbody>\n\n                </table>\n                <div class=\"d-flex justify-content-end \">\n\n                    <div >\n                        Items per Page\n                        <select (change)=\"handlePageSizeChange($event)\" class=\"pgn-pageSizeOption\" >\n                            <option *ngFor=\"let size of pageSizes\" [value]=\"size\">\n                                {{ size }}\n                            </option>\n                        </select>\n                    </div>\n\n                    <div class=\"pgn-pageSliceCt\">\n                        <pagination-controls \n                            responsive=\"true\" \n                            previousLabel=\"Prev\" \n                            nextLabel=\"Next\" \n                            (pageChange)=\"handlePageChange($event)\">\n                        </pagination-controls>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- list view end -->\n</div>\n<!-- /Page Content -->\n\n";
      /***/
    },

    /***/
    "G0Uy":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/mt.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function G0Uy(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Maltese (Malta) [mt]
      //! author : Alessandro Maruccia : https://github.com/alesma
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var mt = moment.defineLocale('mt', {
          months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
          monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
          weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
          weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
          weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Illum fil-]LT',
            nextDay: '[Għada fil-]LT',
            nextWeek: 'dddd [fil-]LT',
            lastDay: '[Il-bieraħ fil-]LT',
            lastWeek: 'dddd [li għadda] [fil-]LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'f’ %s',
            past: '%s ilu',
            s: 'ftit sekondi',
            ss: '%d sekondi',
            m: 'minuta',
            mm: '%d minuti',
            h: 'siegħa',
            hh: '%d siegħat',
            d: 'ġurnata',
            dd: '%d ġranet',
            M: 'xahar',
            MM: '%d xhur',
            y: 'sena',
            yy: '%d sni'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return mt;
      });
      /***/

    },

    /***/
    "H3EQ":
    /*!**************************************************************!*\
      !*** ./src/app/all-modules/employees/employees.component.ts ***!
      \**************************************************************/

    /*! exports provided: EmployeesComponent */

    /***/
    function H3EQ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EmployeesComponent", function () {
        return EmployeesComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_employees_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./employees.component.html */
      "ouRR");
      /* harmony import */


      var _employees_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./employees.component.css */
      "eopi");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");

      var EmployeesComponent = /*#__PURE__*/function () {
        function EmployeesComponent(ngZone) {
          var _this15 = this;

          _classCallCheck(this, EmployeesComponent);

          this.ngZone = ngZone;

          window.onresize = function (e) {
            _this15.ngZone.run(function () {
              _this15.innerHeight = window.innerHeight + 'px';
            });
          };

          this.getScreenHeight();
        }

        _createClass(EmployeesComponent, [{
          key: "getScreenHeight",
          value: function getScreenHeight() {
            this.innerHeight = window.innerHeight + 'px';
          }
        }, {
          key: "ngOnInit",
          value: function ngOnInit() {}
        }, {
          key: "onResize",
          value: function onResize(event) {
            this.innerHeight = event.target.innerHeight + 'px';
          }
        }]);

        return EmployeesComponent;
      }();

      EmployeesComponent.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }];
      };

      EmployeesComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-employees',
        template: _raw_loader_employees_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_employees_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"])('window: resize', ['$event']), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]])], EmployeesComponent);
      /***/
    },

    /***/
    "H8ED":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/be.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function H8ED(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Belarusian [be]
      //! author : Dmitry Demidov : https://github.com/demidov91
      //! author: Praleska: http://praleska.pro/
      //! Author : Menelion Elensúle : https://github.com/Oire
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function plural(word, num) {
          var forms = word.split('_');
          return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
        }

        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            dd: 'дзень_дні_дзён',
            MM: 'месяц_месяцы_месяцаў',
            yy: 'год_гады_гадоў'
          };

          if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
          } else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
          } else {
            return number + ' ' + plural(format[key], +number);
          }
        }

        var be = moment.defineLocale('be', {
          months: {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
          },
          monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
          weekdays: {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
          },
          weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
          weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., HH:mm',
            LLLL: 'dddd, D MMMM YYYY г., HH:mm'
          },
          calendar: {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function nextWeek() {
              return '[У] dddd [ў] LT';
            },
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return '[У мінулую] dddd [ў] LT';

                case 1:
                case 2:
                case 4:
                  return '[У мінулы] dddd [ў] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'праз %s',
            past: '%s таму',
            s: 'некалькі секунд',
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithPlural,
            hh: relativeTimeWithPlural,
            d: 'дзень',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural
          },
          meridiemParse: /ночы|раніцы|дня|вечара/,
          isPM: function isPM(input) {
            return /^(дня|вечара)$/.test(input);
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'ночы';
            } else if (hour < 12) {
              return 'раніцы';
            } else if (hour < 17) {
              return 'дня';
            } else {
              return 'вечара';
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
              case 'w':
              case 'W':
                return (number % 10 === 2 || number % 10 === 3) && number % 100 !== 12 && number % 100 !== 13 ? number + '-і' : number + '-ы';

              case 'D':
                return number + '-га';

              default:
                return number;
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return be;
      });
      /***/

    },

    /***/
    "HP3h":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ar-ly.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function HP3h(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Lybia) [ar-ly]
      //! author : Ali Hmer: https://github.com/kikoanis
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '1',
          2: '2',
          3: '3',
          4: '4',
          5: '5',
          6: '6',
          7: '7',
          8: '8',
          9: '9',
          0: '0'
        },
            pluralForm = function pluralForm(n) {
          return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
        },
            plurals = {
          s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
          m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
          h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
          d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
          M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
          y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
        },
            pluralize = function pluralize(u) {
          return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];

            if (f === 2) {
              str = str[withoutSuffix ? 0 : 1];
            }

            return str.replace(/%d/i, number);
          };
        },
            months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];

        var arLy = moment.defineLocale('ar-ly', {
          months: months,
          monthsShort: months,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: "D/\u200FM/\u200FYYYY",
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          meridiemParse: /ص|م/,
          isPM: function isPM(input) {
            return 'م' === input;
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ص';
            } else {
              return 'م';
            }
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y')
          },
          preparse: function preparse(string) {
            return string.replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            }).replace(/,/g, '،');
          },
          week: {
            dow: 6,
            // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return arLy;
      });
      /***/

    },

    /***/
    "IBtZ":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ka.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function IBtZ(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Georgian [ka]
      //! author : Irakli Janiashvili : https://github.com/IrakliJani
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ka = moment.defineLocale('ka', {
          months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
          monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
          weekdays: {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
          },
          weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
          weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[დღეს] LT[-ზე]',
            nextDay: '[ხვალ] LT[-ზე]',
            lastDay: '[გუშინ] LT[-ზე]',
            nextWeek: '[შემდეგ] dddd LT[-ზე]',
            lastWeek: '[წინა] dddd LT-ზე',
            sameElse: 'L'
          },
          relativeTime: {
            future: function future(s) {
              return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function ($0, $1, $2) {
                return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';
              });
            },
            past: function past(s) {
              if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
                return s.replace(/(ი|ე)$/, 'ის წინ');
              }

              if (/წელი/.test(s)) {
                return s.replace(/წელი$/, 'წლის წინ');
              }

              return s;
            },
            s: 'რამდენიმე წამი',
            ss: '%d წამი',
            m: 'წუთი',
            mm: '%d წუთი',
            h: 'საათი',
            hh: '%d საათი',
            d: 'დღე',
            dd: '%d დღე',
            M: 'თვე',
            MM: '%d თვე',
            y: 'წელი',
            yy: '%d წელი'
          },
          dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
          ordinal: function ordinal(number) {
            if (number === 0) {
              return number;
            }

            if (number === 1) {
              return number + '-ლი';
            }

            if (number < 20 || number <= 100 && number % 20 === 0 || number % 100 === 0) {
              return 'მე-' + number;
            }

            return number + '-ე';
          },
          week: {
            dow: 1,
            doy: 7
          }
        });
        return ka;
      });
      /***/

    },

    /***/
    "Ivi+":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ko.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Ivi(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Korean [ko]
      //! author : Kyungwook, Park : https://github.com/kyungw00k
      //! author : Jeeeyul Lee <jeeeyul@gmail.com>
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ko = moment.defineLocale('ko', {
          months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
          monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
          weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
          weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
          weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY년 MMMM D일',
            LLL: 'YYYY년 MMMM D일 A h:mm',
            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
            l: 'YYYY.MM.DD.',
            ll: 'YYYY년 MMMM D일',
            lll: 'YYYY년 MMMM D일 A h:mm',
            llll: 'YYYY년 MMMM D일 dddd A h:mm'
          },
          calendar: {
            sameDay: '오늘 LT',
            nextDay: '내일 LT',
            nextWeek: 'dddd LT',
            lastDay: '어제 LT',
            lastWeek: '지난주 dddd LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s 후',
            past: '%s 전',
            s: '몇 초',
            ss: '%d초',
            m: '1분',
            mm: '%d분',
            h: '한 시간',
            hh: '%d시간',
            d: '하루',
            dd: '%d일',
            M: '한 달',
            MM: '%d달',
            y: '일 년',
            yy: '%d년'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '일';

              case 'M':
                return number + '월';

              case 'w':
              case 'W':
                return number + '주';

              default:
                return number;
            }
          },
          meridiemParse: /오전|오후/,
          isPM: function isPM(token) {
            return token === '오후';
          },
          meridiem: function meridiem(hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
          }
        });
        return ko;
      });
      /***/

    },

    /***/
    "JCF/":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ku.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function JCF(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kurdish [ku]
      //! author : Shahram Mebashar : https://github.com/ShahramMebashar
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '١',
          2: '٢',
          3: '٣',
          4: '٤',
          5: '٥',
          6: '٦',
          7: '٧',
          8: '٨',
          9: '٩',
          0: '٠'
        },
            numberMap = {
          '١': '1',
          '٢': '2',
          '٣': '3',
          '٤': '4',
          '٥': '5',
          '٦': '6',
          '٧': '7',
          '٨': '8',
          '٩': '9',
          '٠': '0'
        },
            months = ['کانونی دووەم', 'شوبات', 'ئازار', 'نیسان', 'ئایار', 'حوزەیران', 'تەمموز', 'ئاب', 'ئەیلوول', 'تشرینی یەكەم', 'تشرینی دووەم', 'كانونی یەکەم'];
        var ku = moment.defineLocale('ku', {
          months: months,
          monthsShort: months,
          weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),
          weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),
          weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          meridiemParse: /ئێواره‌|به‌یانی/,
          isPM: function isPM(input) {
            return /ئێواره‌/.test(input);
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'به‌یانی';
            } else {
              return 'ئێواره‌';
            }
          },
          calendar: {
            sameDay: '[ئه‌مرۆ كاتژمێر] LT',
            nextDay: '[به‌یانی كاتژمێر] LT',
            nextWeek: 'dddd [كاتژمێر] LT',
            lastDay: '[دوێنێ كاتژمێر] LT',
            lastWeek: 'dddd [كاتژمێر] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'له‌ %s',
            past: '%s',
            s: 'چه‌ند چركه‌یه‌ك',
            ss: 'چركه‌ %d',
            m: 'یه‌ك خوله‌ك',
            mm: '%d خوله‌ك',
            h: 'یه‌ك كاتژمێر',
            hh: '%d كاتژمێر',
            d: 'یه‌ك ڕۆژ',
            dd: '%d ڕۆژ',
            M: 'یه‌ك مانگ',
            MM: '%d مانگ',
            y: 'یه‌ك ساڵ',
            yy: '%d ساڵ'
          },
          preparse: function preparse(string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
              return numberMap[match];
            }).replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            }).replace(/,/g, '،');
          },
          week: {
            dow: 6,
            // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return ku;
      });
      /***/

    },

    /***/
    "JVSJ":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/bs.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function JVSJ(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bosnian [bs]
      //! author : Nedim Cholich : https://github.com/frontyard
      //! based on (hr) translation by Bojan Marković
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function translate(number, withoutSuffix, key) {
          var result = number + ' ';

          switch (key) {
            case 'ss':
              if (number === 1) {
                result += 'sekunda';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'sekunde';
              } else {
                result += 'sekundi';
              }

              return result;

            case 'm':
              return withoutSuffix ? 'jedna minuta' : 'jedne minute';

            case 'mm':
              if (number === 1) {
                result += 'minuta';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
              } else {
                result += 'minuta';
              }

              return result;

            case 'h':
              return withoutSuffix ? 'jedan sat' : 'jednog sata';

            case 'hh':
              if (number === 1) {
                result += 'sat';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
              } else {
                result += 'sati';
              }

              return result;

            case 'dd':
              if (number === 1) {
                result += 'dan';
              } else {
                result += 'dana';
              }

              return result;

            case 'MM':
              if (number === 1) {
                result += 'mjesec';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
              } else {
                result += 'mjeseci';
              }

              return result;

            case 'yy':
              if (number === 1) {
                result += 'godina';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
              } else {
                result += 'godina';
              }

              return result;
          }
        }

        var bs = moment.defineLocale('bs', {
          months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
          monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
          weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[u] [nedjelju] [u] LT';

                case 3:
                  return '[u] [srijedu] [u] LT';

                case 6:
                  return '[u] [subotu] [u] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                case 3:
                  return '[prošlu] dddd [u] LT';

                case 6:
                  return '[prošle] [subote] [u] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[prošli] dddd [u] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return bs;
      });
      /***/

    },

    /***/
    "JvlW":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/lt.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function JvlW(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Lithuanian [lt]
      //! author : Mindaugas Mozūras : https://github.com/mmozuras
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var units = {
          ss: 'sekundė_sekundžių_sekundes',
          m: 'minutė_minutės_minutę',
          mm: 'minutės_minučių_minutes',
          h: 'valanda_valandos_valandą',
          hh: 'valandos_valandų_valandas',
          d: 'diena_dienos_dieną',
          dd: 'dienos_dienų_dienas',
          M: 'mėnuo_mėnesio_mėnesį',
          MM: 'mėnesiai_mėnesių_mėnesius',
          y: 'metai_metų_metus',
          yy: 'metai_metų_metus'
        };

        function translateSeconds(number, withoutSuffix, key, isFuture) {
          if (withoutSuffix) {
            return 'kelios sekundės';
          } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
          }
        }

        function translateSingular(number, withoutSuffix, key, isFuture) {
          return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];
        }

        function special(number) {
          return number % 10 === 0 || number > 10 && number < 20;
        }

        function forms(key) {
          return units[key].split('_');
        }

        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';

          if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
          } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
          } else {
            if (isFuture) {
              return result + forms(key)[1];
            } else {
              return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
          }
        }

        var lt = moment.defineLocale('lt', {
          months: {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
          },
          monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
          weekdays: {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
          },
          weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
          weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY [m.] MMMM D [d.]',
            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l: 'YYYY-MM-DD',
            ll: 'YYYY [m.] MMMM D [d.]',
            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
          },
          calendar: {
            sameDay: '[Šiandien] LT',
            nextDay: '[Rytoj] LT',
            nextWeek: 'dddd LT',
            lastDay: '[Vakar] LT',
            lastWeek: '[Praėjusį] dddd LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'po %s',
            past: 'prieš %s',
            s: translateSeconds,
            ss: translate,
            m: translateSingular,
            mm: translate,
            h: translateSingular,
            hh: translate,
            d: translateSingular,
            dd: translate,
            M: translateSingular,
            MM: translate,
            y: translateSingular,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}-oji/,
          ordinal: function ordinal(number) {
            return number + '-oji';
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return lt;
      });
      /***/

    },

    /***/
    "K/tc":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/af.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function KTc(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Afrikaans [af]
      //! author : Werner Mollentze : https://github.com/wernerm
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var af = moment.defineLocale('af', {
          months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
          monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
          weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
          weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
          weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
          meridiemParse: /vm|nm/i,
          isPM: function isPM(input) {
            return /^nm$/i.test(input);
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 12) {
              return isLower ? 'vm' : 'VM';
            } else {
              return isLower ? 'nm' : 'NM';
            }
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Vandag om] LT',
            nextDay: '[Môre om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[Gister om] LT',
            lastWeek: '[Laas] dddd [om] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'oor %s',
            past: '%s gelede',
            s: "'n paar sekondes",
            ss: '%d sekondes',
            m: "'n minuut",
            mm: '%d minute',
            h: "'n uur",
            hh: '%d ure',
            d: "'n dag",
            dd: '%d dae',
            M: "'n maand",
            MM: '%d maande',
            y: "'n jaar",
            yy: '%d jaar'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
          },
          week: {
            dow: 1,
            // Maandag is die eerste dag van die week.
            doy: 4 // Die week wat die 4de Januarie bevat is die eerste week van die jaar.

          }
        });
        return af;
      });
      /***/

    },

    /***/
    "KL8J":
    /*!***************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/designation/designation.component.ts ***!
      \***************************************************************************************/

    /*! exports provided: DesignationComponent */

    /***/
    function KL8J(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DesignationComponent", function () {
        return DesignationComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_designation_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./designation.component.html */
      "OsKc");
      /* harmony import */


      var _designation_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./designation.component.css */
      "ZDnT");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var angular_datatables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! angular-datatables */
      "njyG");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");

      var DesignationComponent = /*#__PURE__*/function () {
        function DesignationComponent(formBuilder, srvModuleService, toastr) {
          _classCallCheck(this, DesignationComponent);

          this.formBuilder = formBuilder;
          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.dtOptions = {};
          this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
          this.url = "designation";
          this.rows = [];
          this.srch = [];
        }

        _createClass(DesignationComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.dtOptions = {
              // ... skipped ...
              pageLength: 10,
              dom: "lrtip"
            };
            this.LoadDesignation();
            this.addDesignationForm = this.formBuilder.group({
              Designation: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              DepartmentName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
            this.editDesignationForm = this.formBuilder.group({
              Designation: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              DepartmentName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
          } // Get designation list  Api Call

        }, {
          key: "LoadDesignation",
          value: function LoadDesignation() {
            var _this16 = this;

            this.srvModuleService.get(this.url).subscribe(function (data) {
              _this16.lstDesignation = data;

              _this16.dtTrigger.next();

              _this16.rows = _this16.lstDesignation;
              _this16.srch = _toConsumableArray(_this16.rows);
            });
          } // Add Designation  Modal Api Call

        }, {
          key: "addDesignation",
          value: function addDesignation() {
            var _this17 = this;

            if (this.addDesignationForm.valid) {
              var obj = {
                designation: this.addDesignationForm.value.Designation,
                departmentName: this.addDesignationForm.value.DepartmentName,
                id: 1
              };
              this.srvModuleService.add(obj, this.url).subscribe(function (data) {
                _this17.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.LoadDesignation();
              $("#add_designation").modal("hide");
              this.addDesignationForm.reset();
              this.toastr.success("Desigantion added sucessfully...!", "Success");
            }
          }
        }, {
          key: "editDesignation",
          value: function editDesignation() {
            var _this18 = this;

            if (this.editDesignationForm.valid) {
              var obj = {
                designation: this.editDesignationForm.value.Designation,
                departmentName: this.editDesignationForm.value.DepartmentName,
                id: this.editId
              };
              this.srvModuleService.update(obj, this.url).subscribe(function (data1) {
                _this18.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.LoadDesignation();
              $("#edit_designation").modal("hide");
              this.toastr.success("Department Updated sucessfully...!", "Success");
            }
          } // To Get The timesheet Edit Id And Set Values To Edit Modal Form

        }, {
          key: "edit",
          value: function edit(value) {
            this.editId = value;
            var index = this.lstDesignation.findIndex(function (item) {
              return item.id === value;
            });
            var toSetValues = this.lstDesignation[index];
            this.editDesignationForm.setValue({
              Designation: toSetValues.designation,
              DepartmentName: toSetValues.departmentName
            });
          } // Delete timedsheet Modal Api Call

        }, {
          key: "deleteDesignation",
          value: function deleteDesignation() {
            var _this19 = this;

            this.srvModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              _this19.dtElement.dtInstance.then(function (dtInstance) {
                dtInstance.destroy();

                _this19.LoadDesignation();

                $("#delete_designation").modal("hide");

                _this19.toastr.success("Designation deleted sucessfully..!", "Success");
              });
            });
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // Do not forget to unsubscribe the event
            this.dtTrigger.unsubscribe();
          }
        }]);

        return DesignationComponent;
      }();

      DesignationComponent.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_8__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]
        }];
      };

      DesignationComponent.propDecorators = {
        dtElement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"],
          args: [angular_datatables__WEBPACK_IMPORTED_MODULE_6__["DataTableDirective"], {
            "static": false
          }]
        }]
      };
      DesignationComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-designation",
        template: _raw_loader_designation_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_designation_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_8__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])], DesignationComponent);
      /***/
    },

    /***/
    "KSF8":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/vi.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function KSF8(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Vietnamese [vi]
      //! author : Bang Nguyen : https://github.com/bangnk
      //! author : Chien Kira : https://github.com/chienkira
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var vi = moment.defineLocale('vi', {
          months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
          monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split('_'),
          monthsParseExact: true,
          weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
          weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
          weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
          weekdaysParseExact: true,
          meridiemParse: /sa|ch/i,
          isPM: function isPM(input) {
            return /^ch$/i.test(input);
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 12) {
              return isLower ? 'sa' : 'SA';
            } else {
              return isLower ? 'ch' : 'CH';
            }
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [năm] YYYY',
            LLL: 'D MMMM [năm] YYYY HH:mm',
            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
            l: 'DD/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần trước lúc] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s tới',
            past: '%s trước',
            s: 'vài giây',
            ss: '%d giây',
            m: 'một phút',
            mm: '%d phút',
            h: 'một giờ',
            hh: '%d giờ',
            d: 'một ngày',
            dd: '%d ngày',
            w: 'một tuần',
            ww: '%d tuần',
            M: 'một tháng',
            MM: '%d tháng',
            y: 'một năm',
            yy: '%d năm'
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: function ordinal(number) {
            return number;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return vi;
      });
      /***/

    },

    /***/
    "KTz0":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/me.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function KTz0(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Montenegrin [me]
      //! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var translator = {
          words: {
            //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
          },
          correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
          },
          translate: function translate(number, withoutSuffix, key) {
            var wordKey = translator.words[key];

            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
          }
        };
        var me = moment.defineLocale('me', {
          months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
          monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
          weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[u] [nedjelju] [u] LT';

                case 3:
                  return '[u] [srijedu] [u] LT';

                case 6:
                  return '[u] [subotu] [u] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[juče u] LT',
            lastWeek: function lastWeek() {
              var lastWeekDays = ['[prošle] [nedjelje] [u] LT', '[prošlog] [ponedjeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srijede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];
              return lastWeekDays[this.day()];
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mjesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return me;
      });
      /***/

    },

    /***/
    "KdDO":
    /*!***********************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/attendance-employee/attendance-employee.component.html ***!
      \***********************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function KdDO(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <h3 class=\"page-title\">Attendance</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Attendance</li>\r\n                </ul>\r\n                <div class=\"col-auto float-right ml-auto\">\r\n                    <a href=\"#\" class=\"btn add-btn m-r-5\" data-toggle=\"modal\" data-target=\"#add_attendance\">Add Attendance</a>\r\n               \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    \r\n\r\n   \t<!-- Search Filter -->\r\n       <form (ngSubmit)=\"searchAttn()\" [formGroup]=\"inputForm\">\r\n        <div class=\"row filter-row mb-4\"> \r\n        <div class=\"col-sm-6 col-md-3\">  \r\n            <div class=\"form-group form-focus\">\r\n                <div >\r\n                    <input class=\"form-control floating\"   formControlName=\"empCode\" type=\"text\" >\r\n                </div>\r\n                <label class=\"focus-label\">Emp Code</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">  \r\n            <div class=\"form-group form-focus\">\r\n                <div class=\"cal-icon\">\r\n                    <input class=\"form-control floating datetimepicker\" formControlName=\"executeDate\" type=\"text\" bsDatepicker>\r\n                </div>\r\n                <label class=\"focus-label\">Date</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">  \r\n            <button  class=\"btn btn-primary submit-btn\" type=\"submit\">\r\n                Search\r\n                <!-- [disabled]=\"!addEmployeeForm.valid\" -->\r\n            </button>\r\n        </div>  \t\t\r\n        </div>\r\n    </form>\r\n    <!-- /Search Filter -->\r\n\r\n    <!-- list view start -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <div class=\"d-flex justify-content-start pb-1\">\r\n                    <div class=\"pgn-displayDataInfo\">\r\n                        <span class=\"page-item disabled\">Displaying ( {{ ( ((pageNum-1) * pageSize) + (1) ) }}  to {{pngDiplayLastSeq}} of {{totalItem}} ) entries</span>\r\n                    </div>\r\n                </div>\r\n                <table  \r\n               \r\n                 class=\"table table-striped custom-table datatable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Employee ID</th>\r\n                            <th>Create Date</th>\r\n                            <th>Punch Time</th>\r\n                            <th>Punch Date</th>\r\n                            <th>Source Type</th>\r\n                            <th class=\"text-right no-sort\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       \r\n                            <tr *ngFor=\"let row of hrTlAttnDaily | paginate : {\r\n                                itemsPerPage: pageSize,\r\n                                currentPage: pageNum,\r\n                                totalItems: totalItem\r\n                            };let i = index\" [class.active]=\"i == currentIndex\">    \r\n                            <td>\r\n                                {{ 1 + i}}\r\n                            </td>\r\n                       \r\n                        <td>{{row.hrCrEmpId.firstName}}</td>\r\n                        <td>{{row.hrCrEmpId.loginCode}}</td>\r\n                        <td>{{row.createDate}}</td>\r\n                        <td>{{row.entryTime|date:'medium'}}</td>\r\n                        <td>{{row.entryDate|date}}</td>\r\n                        <td>{{row.srcType}}</td>\r\n                          \r\n                          \r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a  class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                        data-target=\"#edit_employee\" (click)=\"edit(row.id)\"><i\r\n                                            class=\"fa fa-user m-r-5\"></i> Details</a>\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#edit_employee\" (click)=\"edit(row.id)\"><i\r\n                                                class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#delete_employee\" (click)=\"tempId = row.id\"><i\r\n                                                class=\"fa fa-trash-o m-r-5\"></i>\r\n                                            Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr *ngIf=\"hrTlAttnDaily.length === 0\">\r\n                            <td colspan=\"10\">\r\n                                <h5 style=\"text-align: center;\">No data found</h5>\r\n                            </td>\r\n                           \r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </table>\r\n                <div class=\"d-flex justify-content-end \">\r\n\r\n                    <div >\r\n                        Items per Page\r\n                        <select (change)=\"handlePageSizeChange($event)\" class=\"pgn-pageSizeOption\" >\r\n                            <option *ngFor=\"let size of pageSizes\" [value]=\"size\">\r\n                                {{ size }}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"pgn-pageSliceCt\">\r\n                        <pagination-controls \r\n                            responsive=\"true\" \r\n                            previousLabel=\"Prev\" \r\n                            nextLabel=\"Next\" \r\n                            (pageChange)=\"handlePageChange($event)\">\r\n                        </pagination-controls>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- list view end -->\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n <!-- Add Shift Modal -->\r\n <div id=\"add_attendance\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Add Attendance</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"addAttn()\" [formGroup]=\"addAttnForm\">\r\n                    <div class=\"row filter-row mb-6\"> \r\n                        <div class=\"col-sm-6 col-md-6\">  \r\n                            <div class=\"form-group\">\r\n                                <label>Emp Code<span class=\"text-danger\">*</span></label>\r\n                                <input class=\"form-control\" formControlName=\"hrCrEmp\" class=\"form-control\" type=\"text\" (keyup)=\"onKeyUp($event)\">\r\n                                <p>{{empName}}</p>\r\n                            </div>\r\n                        </div>\r\n                       \r\n\r\n                        <div class=\"col-sm-6 col-md-6\">  \r\n\t\t\t\t\t\t\t<div class=\"form-group \">\r\n\t\t\t\t\t\t\t\t\r\n                                <label>Attendance Date<span class=\"text-danger\">*</span></label>\r\n                                <div class=\"cal-icon\"></div>\r\n\t\t\t\t\t\t\t\t<input class=\"form-control floating datetimepicker  dateEntryField\"   formControlName=\"attendanceDate\" type=\"text\" bsDatepicker>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                        \r\n                        <div class=\"col-sm-6 col-md-6\">  \r\n                            <div class=\"form-group\">\r\n                                <label>In Time<span class=\"text-danger\">*</span></label>\r\n                                <input class=\"form-control\" formControlName=\"inTime\" class=\"form-control\" type=\"time\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6 col-md-6\">  \r\n                            <div class=\"form-group\">\r\n                                <label>Out Time<span class=\"text-danger\">*</span></label>\r\n                                <input class=\"form-control\" formControlName=\"outTime\" class=\"form-control\" type=\"time\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>Remarks</label>\r\n                                <textarea rows=\"2\" class=\"form-control\" formControlName=\"remarks\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-sm-6 col-md-6\">  \r\n                            <button  class=\"btn btn-primary submit-btn\" type=\"submit\">\r\n                                Submit\r\n                                <!-- [disabled]=\"!addEmployeeForm.valid\" -->\r\n                            </button>\r\n                        </div>  \t\t\r\n                     </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Add Shift Modal -->";
      /***/
    },

    /***/
    "Loxo":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/uz.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Loxo(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Uzbek [uz]
      //! author : Sardor Muminov : https://github.com/muminoff
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var uz = moment.defineLocale('uz', {
          months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
          monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
          weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
          weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
          weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm'
          },
          calendar: {
            sameDay: '[Бугун соат] LT [да]',
            nextDay: '[Эртага] LT [да]',
            nextWeek: 'dddd [куни соат] LT [да]',
            lastDay: '[Кеча соат] LT [да]',
            lastWeek: '[Утган] dddd [куни соат] LT [да]',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'Якин %s ичида',
            past: 'Бир неча %s олдин',
            s: 'фурсат',
            ss: '%d фурсат',
            m: 'бир дакика',
            mm: '%d дакика',
            h: 'бир соат',
            hh: '%d соат',
            d: 'бир кун',
            dd: '%d кун',
            M: 'бир ой',
            MM: '%d ой',
            y: 'бир йил',
            yy: '%d йил'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return uz;
      });
      /***/

    },

    /***/
    "My8Z":
    /*!*************************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/all-employees/employee-list/employee-list.component.html ***!
      \*************************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function My8Z(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Employee</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Employee</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <!-- <a  class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_employee\"><i\r\n                        class=\"fa fa-plus\"></i> Add Employee</a> -->\r\n                <a class=\"btn add-btn\" routerLink=\"/employees/add-employee\"><i class=\"fa fa-plus\"></i> Add Employee</a>\r\n                <div class=\"view-icons\">\r\n                    <a routerLink=\"/employees/employeepage\" class=\"grid-view btn btn-link\"><i class=\"fa fa-th\"></i></a>\r\n                    <a routerLink=\"/employees/employeelist\" class=\"list-view btn btn-link active\"><i\r\n                            class=\"fa fa-bars\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    <!-- Search Filter -->\r\n    <div class=\"row filter-row\">\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"form-group form-focus\">\r\n                <input type=\"text\" class=\"form-control floating\" (input)=\"searchId($event.target.value)\" />\r\n                <label class=\"focus-label\">Emp Code</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"form-group form-focus\">\r\n                <input type=\"text\" class=\"form-control floating\" (input)=\"searchName($event.target.value)\" />\r\n                <label class=\"focus-label\">Employee Name</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\" *ngIf=\"designations\">\r\n            <div class=\"form-group form-focus select-focus\">\r\n                <select class=\"select form-control\" (input)=\"searchByDesignation($event.target.value)\">\r\n                    <option value=\"\">Select Designation</option>\r\n                    <option *ngFor=\"let data of designations\" [value]='data.id'>{{data.title}}\r\n                    </option>\r\n                </select>\r\n                <label class=\"focus-label\">Designation</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <a class=\"btn btn-success btn-block\"> Search </a>\r\n        </div>\r\n    </div>\r\n    <!-- /Search Filter -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-striped custom-table\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>SL</th>\r\n                            <th>Name</th>\r\n                            <th> Employee ID</th>\r\n                            <th>Designation</th>\r\n                            <th>Education</th>\r\n                            <th>Responsibility</th>\r\n                            <th> \r\n                                Operating Unit <br>\r\n                                Product <br>\r\n                                Department<br>\r\n                            \r\n                            </th>\r\n                            <th> \r\n                                Section<br>\r\n                                Sub Section <br>\r\n                                Team\r\n                            \r\n                            </th>\r\n                            \r\n                            <th> \r\n                                Mobile <br>\r\n                                Email\r\n                            </th>\r\n                            \r\n                            <th>Blood Group</th>\r\n                            <th>\r\n                                Category<br>\r\n                                Status <br>\r\n                            </th>\r\n                            <th>Date Of Joining</th>\r\n                            <th>Date Of Birth</th>\r\n                            <th class=\"text-right no-sort\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let row of empList | paginate : {\r\n                            itemsPerPage: pageSize,\r\n                            currentPage: pageNum,\r\n                            totalItems: totalItem\r\n                        } ; let i = index\" [class.active]=\"i == currentIndex\">\r\n                            <td>{{i+1}}</td>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a routerLink=\"/employees/employeeprofile/{{row.id}}\" class=\"avatar\"><img class=\"img-avatar\" alt=\"\"\r\n                                        src=\"{{ baseUrl + row.pic_ }}\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile/{{row.id}}\">{{row.displayName}}\r\n                                      </a>\r\n                                </h2>\r\n                            </td>\r\n                            <td>{{row?.loginCode}}</td>\r\n                            <td>{{row.designation}} </td>\r\n                            <td></td>\r\n                            <td>{{row.responsibility}}</td>\r\n                            <td>\r\n                                {{row.operatingUnit}} <br>\r\n                                {{row.product}} <br>\r\n                                {{row.department}}\r\n\r\n                            </td>\r\n                            <td>\r\n                                {{row.section}} <br>\r\n                                {{row.subSection}} <br>\r\n                                {{row.team}} <br>\r\n                            \r\n                            </td>\r\n                        \r\n                           \r\n                            <td>\r\n                                {{row?.mobCode}}\r\n                                <br/>\r\n                                {{row?.email}}\r\n                            </td>\r\n                            \r\n                            <td>{{row.bloodGroup}}</td>\r\n                            <td>{{row.status}}</td>\r\n                            <td>{{row?.joiningDate}}</td>\r\n                            <td>{{row?.dob}}</td>\r\n                    \r\n           \r\n                            \r\n                           \r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a  class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#edit_employee\" (click)=\"edit(row.id)\"><i\r\n                                                class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#delete_employee\" (click)=\"tempId = row.id\"><i\r\n                                                class=\"fa fa-trash-o m-r-5\"></i>\r\n                                            Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr *ngIf=\"empList.length === 0\">\r\n                            <td colspan=\"10\">\r\n                                <h5 style=\"text-align: center;\">No data found</h5>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"d-flex justify-content-end \">\r\n\r\n                    <div class=\"\" [formGroup]=\"myGroup\">\r\n                        Items per Page\r\n                        <select (change)=\"handlePageSizeChange($event)\" class=\"pgn-pageSizeOption\" formControlName=\"pageSize\">\r\n                            <option *ngFor=\"let size of pageSizes\" [value]=\"size\">\r\n                                {{ size }}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"pgn-pageSliceCt\">\r\n                        <pagination-controls \r\n                            responsive=\"true\" \r\n                            previousLabel=\"Prev\" \r\n                            nextLabel=\"Next\" \r\n                            (pageChange)=\"handlePageChange($event)\">\r\n                        </pagination-controls>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n\r\n\r\n\r\n<!-- Delete Employee Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_employee\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Employee</h3>\r\n                    <p>Are you sure want to delete?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a class=\"btn btn-primary continue-btn\"\r\n                                (click)=\"deleteEmployee()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Delete Employee Modal -->\r\n\r\n<ngx-spinner bdColor = \"rgba(0,0,0,0.3)\" size = \"medium\" color = \"#667eea\" type = \"ball-clip-rotate\" [fullScreen] = \"false\"><p style=\"color: white\" > Processing... </p></ngx-spinner>";
      /***/
    },

    /***/
    "OIYi":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-ca.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function OIYi(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Canada) [en-ca]
      //! author : Jonathan Abourbih : https://github.com/jonbca
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enCa = moment.defineLocale('en-ca', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'YYYY-MM-DD',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          }
        });
        return enCa;
      });
      /***/

    },

    /***/
    "Oaa7":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-gb.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function Oaa7(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (United Kingdom) [en-gb]
      //! author : Chris Gedrim : https://github.com/chrisgedrim
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enGb = moment.defineLocale('en-gb', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return enGb;
      });
      /***/

    },

    /***/
    "Ob0Z":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/mr.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Ob0Z(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Marathi [mr]
      //! author : Harshad Kale : https://github.com/kalehv
      //! author : Vivek Athalye : https://github.com/vnathalye
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '१',
          2: '२',
          3: '३',
          4: '४',
          5: '५',
          6: '६',
          7: '७',
          8: '८',
          9: '९',
          0: '०'
        },
            numberMap = {
          '१': '1',
          '२': '2',
          '३': '3',
          '४': '4',
          '५': '5',
          '६': '6',
          '७': '7',
          '८': '8',
          '९': '9',
          '०': '0'
        };

        function relativeTimeMr(number, withoutSuffix, string, isFuture) {
          var output = '';

          if (withoutSuffix) {
            switch (string) {
              case 's':
                output = 'काही सेकंद';
                break;

              case 'ss':
                output = '%d सेकंद';
                break;

              case 'm':
                output = 'एक मिनिट';
                break;

              case 'mm':
                output = '%d मिनिटे';
                break;

              case 'h':
                output = 'एक तास';
                break;

              case 'hh':
                output = '%d तास';
                break;

              case 'd':
                output = 'एक दिवस';
                break;

              case 'dd':
                output = '%d दिवस';
                break;

              case 'M':
                output = 'एक महिना';
                break;

              case 'MM':
                output = '%d महिने';
                break;

              case 'y':
                output = 'एक वर्ष';
                break;

              case 'yy':
                output = '%d वर्षे';
                break;
            }
          } else {
            switch (string) {
              case 's':
                output = 'काही सेकंदां';
                break;

              case 'ss':
                output = '%d सेकंदां';
                break;

              case 'm':
                output = 'एका मिनिटा';
                break;

              case 'mm':
                output = '%d मिनिटां';
                break;

              case 'h':
                output = 'एका तासा';
                break;

              case 'hh':
                output = '%d तासां';
                break;

              case 'd':
                output = 'एका दिवसा';
                break;

              case 'dd':
                output = '%d दिवसां';
                break;

              case 'M':
                output = 'एका महिन्या';
                break;

              case 'MM':
                output = '%d महिन्यां';
                break;

              case 'y':
                output = 'एका वर्षा';
                break;

              case 'yy':
                output = '%d वर्षां';
                break;
            }
          }

          return output.replace(/%d/i, number);
        }

        var mr = moment.defineLocale('mr', {
          months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
          monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
          monthsParseExact: true,
          weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
          weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
          weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
          longDateFormat: {
            LT: 'A h:mm वाजता',
            LTS: 'A h:mm:ss वाजता',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm वाजता',
            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता'
          },
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[उद्या] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
          },
          preparse: function preparse(string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {
              return hour;
            } else if (meridiem === 'दुपारी' || meridiem === 'सायंकाळी' || meridiem === 'रात्री') {
              return hour >= 12 ? hour : hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour >= 0 && hour < 6) {
              return 'पहाटे';
            } else if (hour < 12) {
              return 'सकाळी';
            } else if (hour < 17) {
              return 'दुपारी';
            } else if (hour < 20) {
              return 'सायंकाळी';
            } else {
              return 'रात्री';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return mr;
      });
      /***/

    },

    /***/
    "OjkT":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ne.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function OjkT(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Nepalese [ne]
      //! author : suvash : https://github.com/suvash
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '१',
          2: '२',
          3: '३',
          4: '४',
          5: '५',
          6: '६',
          7: '७',
          8: '८',
          9: '९',
          0: '०'
        },
            numberMap = {
          '१': '1',
          '२': '2',
          '३': '3',
          '४': '4',
          '५': '5',
          '६': '6',
          '७': '7',
          '८': '8',
          '९': '9',
          '०': '0'
        };
        var ne = moment.defineLocale('ne', {
          months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
          monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
          monthsParseExact: true,
          weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
          weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
          weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'Aको h:mm बजे',
            LTS: 'Aको h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, Aको h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे'
          },
          preparse: function preparse(string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'राति') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
              return hour;
            } else if (meridiem === 'दिउँसो') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 3) {
              return 'राति';
            } else if (hour < 12) {
              return 'बिहान';
            } else if (hour < 16) {
              return 'दिउँसो';
            } else if (hour < 20) {
              return 'साँझ';
            } else {
              return 'राति';
            }
          },
          calendar: {
            sameDay: '[आज] LT',
            nextDay: '[भोलि] LT',
            nextWeek: '[आउँदो] dddd[,] LT',
            lastDay: '[हिजो] LT',
            lastWeek: '[गएको] dddd[,] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%sमा',
            past: '%s अगाडि',
            s: 'केही क्षण',
            ss: '%d सेकेण्ड',
            m: 'एक मिनेट',
            mm: '%d मिनेट',
            h: 'एक घण्टा',
            hh: '%d घण्टा',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महिना',
            MM: '%d महिना',
            y: 'एक बर्ष',
            yy: '%d बर्ष'
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return ne;
      });
      /***/

    },

    /***/
    "OmwH":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/zh-mo.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function OmwH(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (Macau) [zh-mo]
      //! author : Ben : https://github.com/ben-lin
      //! author : Chris Lam : https://github.com/hehachris
      //! author : Tan Yuanhong : https://github.com/le0tan
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var zhMo = moment.defineLocale('zh-mo', {
          months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
          weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
          weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
          weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'D/M/YYYY',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm'
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
              return hour;
            } else if (meridiem === '中午') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;

            if (hm < 600) {
              return '凌晨';
            } else if (hm < 900) {
              return '早上';
            } else if (hm < 1130) {
              return '上午';
            } else if (hm < 1230) {
              return '中午';
            } else if (hm < 1800) {
              return '下午';
            } else {
              return '晚上';
            }
          },
          calendar: {
            sameDay: '[今天] LT',
            nextDay: '[明天] LT',
            nextWeek: '[下]dddd LT',
            lastDay: '[昨天] LT',
            lastWeek: '[上]dddd LT',
            sameElse: 'L'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';

              case 'M':
                return number + '月';

              case 'w':
              case 'W':
                return number + '週';

              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s內',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年'
          }
        });
        return zhMo;
      });
      /***/

    },

    /***/
    "Oryf":
    /*!*************************************************************************!*\
      !*** ./src/app/all-modules/settings/systems/services/system.service.ts ***!
      \*************************************************************************/

    /*! exports provided: SystemService */

    /***/
    function Oryf(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SystemService", function () {
        return SystemService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "tk/3");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var src_environments_environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! src/environments/environment */
      "AytR");

      var SystemService = /*#__PURE__*/function () {
        function SystemService(http) {
          _classCallCheck(this, SystemService);

          this.http = http;
          this.sysRes = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
          this.baseUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].baseUrl;
        } // get All System User 


        _createClass(SystemService, [{
          key: "getAllUsers",
          value: function getAllUsers() {
            return this.http.get("".concat(this.baseUrl, "/user/getAll"));
          } // // get All paginated System getusers
          // public getAllPaginatedUsers(queryParams){
          //   return this.http.get(`${this.baseUrl}/user/get`,{params: queryParams}).pipe( retry(3));
          // }
          // get All paginated System getusers

        }, {
          key: "getAllPaginatedUsers",
          value: function getAllPaginatedUsers(queryParams) {
            return this.http.get("".concat(this.baseUrl, "/api/common/getUser"), {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["retry"])(3));
          } // Get All System User whose has no employee created

        }, {
          key: "getNotEmpUsers",
          value: function getNotEmpUsers() {
            return this.http.get("".concat(this.baseUrl, "/user/notEmp"));
          } // get group user api 

        }, {
          key: "getGroupUser",
          value: function getGroupUser() {
            return this.http.get("".concat(this.baseUrl, "/user/getGroupUser"));
          } // create sysResDef

        }, {
          key: "createSysResDef",
          value: function createSysResDef(reqBody) {
            return this.http.post("".concat(this.baseUrl, "/sysDef/create"), reqBody);
          } //update sysResDef

        }, {
          key: "updateSysResDef",
          value: function updateSysResDef(id, reqBody) {
            return this.http.put("".concat(this.baseUrl, "/sysDef/update/").concat(id), reqBody);
          } // get SysResDef 

        }, {
          key: "getSysResDef",
          value: function getSysResDef(queryParams) {
            return this.http.get("".concat(this.baseUrl, "/sysDef/get"), {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["retry"])(3));
          } //delete SysResDef

        }, {
          key: "deleteSysResDef",
          value: function deleteSysResDef(id) {
            return this.http["delete"]("".concat(this.baseUrl, "/sysDef/delete/").concat(id));
          } //create SysResAuth 

        }, {
          key: "createSysResAuth",
          value: function createSysResAuth(reqBody) {
            return this.http.post("".concat(this.baseUrl, "/sysAuth/create"), reqBody);
          } // get SysResAuth

        }, {
          key: "getSysResAuth",
          value: function getSysResAuth(queryParams) {
            return this.http.get("".concat(this.baseUrl, "/sysAuth/get"), {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["retry"])(3));
          }
        }, {
          key: "getSysResAuthByIds",
          value: function getSysResAuthByIds(id) {
            return this.http.get("".concat(this.baseUrl, "/sysAuth/find/").concat(id));
          } //get SysAuth By id

        }, {
          key: "getSysResAuthById",
          value: function getSysResAuthById(id) {
            return this.http.get("".concat(this.baseUrl, "/sysAuth/get/").concat(id));
          } //update sysResDef

        }, {
          key: "updateSysResAuth",
          value: function updateSysResAuth(reqBody) {
            return this.http.put("".concat(this.baseUrl, "/sysAuth/update"), reqBody);
          } //delete SysResDef

        }, {
          key: "deleteSysResAuth",
          value: function deleteSysResAuth(id) {
            return this.http["delete"]("".concat(this.baseUrl, "/sysAuth/delete/").concat(id));
          } //get roles

        }, {
          key: "getRoles",
          value: function getRoles() {
            return this.http.get("".concat(this.baseUrl, "/roles"));
          }
        }, {
          key: "sendGetRequest",
          value: function sendGetRequest(apiURL, queryParams) {
            console.log("@sendGetRequest");
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["retry"])(3));
          }
        }, {
          key: "sendPostRequest",
          value: function sendPostRequest(apiURL, formData) {
            console.log("@sendPostRequest");
            return this.http.post(apiURL, formData);
          }
        }]);

        return SystemService;
      }();

      SystemService.ctorParameters = function () {
        return [{
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
        }];
      };

      SystemService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])], SystemService);
      /***/
    },

    /***/
    "OsKc":
    /*!*******************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/designation/designation.component.html ***!
      \*******************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function OsKc(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Designations</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Designations</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <a  class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_designation\"><i\r\n                        class=\"fa fa-plus\"></i> Add Designation</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                    class=\"table table-striped custom-table mb-0 datatable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 30px;\">#</th>\r\n                            <th>Designation </th>\r\n                            <th>Department </th>\r\n                            <th class=\"text-right\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of lstDesignation\">\r\n                            <td>{{item.id}}</td>\r\n                            <td>{{item.designation}}</td>\r\n                            <td>{{item.departmentName}}</td>\r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a  class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#edit_designation\" (click)=\"edit(item.id)\"><i\r\n                                                class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#delete_designation\" (click)=\"tempId = item.id\"><i\r\n                                                class=\"fa fa-trash-o m-r-5\"></i>\r\n                                            Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Add Designation Modal -->\r\n<div id=\"add_designation\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Add Designation</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"addDesignation()\" [formGroup]=\"addDesignationForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Designation Name <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"addDesignationForm.get('Designation').invalid && addDesignationForm.get('Designation').touched\"\r\n                            formControlName=\"Designation\">\r\n                        <div\r\n                            *ngIf=\"addDesignationForm.get('Designation').invalid && addDesignationForm.get('Designation').touched\">\r\n                            <small\r\n                                *ngIf=\"addDesignationForm.get('Designation').invalid && addDesignationForm.get('Designation').touched\"\r\n                                class=\"text-danger\"> Designation is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Department <span class=\"text-danger\">*</span></label>\r\n                        <select class=\"select form-control\" [class.invalid]=\"addDesignationForm.get('DepartmentName').invalid &&\r\n                            addDesignationForm.get('DepartmentName').touched\" formControlName=\"DepartmentName\">\r\n                            <option>Select Department</option>\r\n                            <option>Web Development</option>\r\n                            <option>IT Management</option>\r\n                            <option> Marketing</option>\r\n                        </select>\r\n                        <div\r\n                            *ngIf=\"addDesignationForm.get('DepartmentName').invalid && addDesignationForm.get('DepartmentName').touched\">\r\n                            <small\r\n                                *ngIf=\"addDesignationForm.get('DepartmentName').invalid && addDesignationForm.get('DepartmentName').touched\"\r\n                                class=\"text-danger\"> Department is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Add Designation Modal -->\r\n\r\n<!-- Edit Designation Modal -->\r\n<div id=\"edit_designation\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Edit Designation</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"editDesignation()\" [formGroup]=\"editDesignationForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Designation Name <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"editDesignationForm.get('Designation').invalid && editDesignationForm.get('Designation').touched\"\r\n                            formControlName=\"Designation\">\r\n                        <div\r\n                            *ngIf=\"editDesignationForm.get('Designation').invalid && editDesignationForm.get('Designation').touched\">\r\n                            <small\r\n                                *ngIf=\"editDesignationForm.get('Designation').invalid && editDesignationForm.get('Designation').touched\"\r\n                                class=\"text-danger\"> *Department Name required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Department <span class=\"text-danger\">*</span></label>\r\n                        <select class=\"select form-control\"\r\n                            [class.invalid]=\"editDesignationForm.get('DepartmentName').invalid && editDesignationForm.get('DepartmentName').touched\"\r\n                            formControlName=\"DepartmentName\">\r\n                            <option>Select Department</option>\r\n                            <option>Web Development</option>\r\n                            <option>IT Management</option>\r\n                            <option>Marketing</option>\r\n                        </select>\r\n                        <div\r\n                            *ngIf=\"editDesignationForm.get('DepartmentName').invalid && editDesignationForm.get('DepartmentName').touched\">\r\n                            <small\r\n                                *ngIf=\"editDesignationForm.get('DepartmentName').invalid && editDesignationForm.get('DepartmentName').touched\"\r\n                                class=\"text-danger\"> *Department Name required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Edit Designation Modal -->\r\n\r\n<!-- Delete Designation Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_designation\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Designation</h3>\r\n                    <p>Are you sure want to delete?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a  class=\"btn btn-primary continue-btn\"\r\n                                (click)=\"deleteDesignation()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a  data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Delete Designation Modal -->";
      /***/
    },

    /***/
    "Oxv6":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/tg.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Oxv6(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tajik [tg]
      //! author : Orif N. Jr. : https://github.com/orif-jr
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var suffixes = {
          0: '-ум',
          1: '-ум',
          2: '-юм',
          3: '-юм',
          4: '-ум',
          5: '-ум',
          6: '-ум',
          7: '-ум',
          8: '-ум',
          9: '-ум',
          10: '-ум',
          12: '-ум',
          13: '-ум',
          20: '-ум',
          30: '-юм',
          40: '-ум',
          50: '-ум',
          60: '-ум',
          70: '-ум',
          80: '-ум',
          90: '-ум',
          100: '-ум'
        };
        var tg = moment.defineLocale('tg', {
          months: {
            format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split('_'),
            standalone: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_')
          },
          monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
          weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
          weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
          weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Имрӯз соати] LT',
            nextDay: '[Фардо соати] LT',
            lastDay: '[Дирӯз соати] LT',
            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'баъди %s',
            past: '%s пеш',
            s: 'якчанд сония',
            m: 'як дақиқа',
            mm: '%d дақиқа',
            h: 'як соат',
            hh: '%d соат',
            d: 'як рӯз',
            dd: '%d рӯз',
            M: 'як моҳ',
            MM: '%d моҳ',
            y: 'як сол',
            yy: '%d сол'
          },
          meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'шаб') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
              return hour;
            } else if (meridiem === 'рӯз') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'шаб';
            } else if (hour < 11) {
              return 'субҳ';
            } else if (hour < 16) {
              return 'рӯз';
            } else if (hour < 19) {
              return 'бегоҳ';
            } else {
              return 'шаб';
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
          ordinal: function ordinal(number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1th is the first week of the year.

          }
        });
        return tg;
      });
      /***/

    },

    /***/
    "P8UC":
    /*!***********************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/timesheet/timesheet.component.ts ***!
      \***********************************************************************************/

    /*! exports provided: TimesheetComponent */

    /***/
    function P8UC(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "TimesheetComponent", function () {
        return TimesheetComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_timesheet_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./timesheet.component.html */
      "mEZS");
      /* harmony import */


      var _timesheet_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./timesheet.component.css */
      "CITx");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var angular_datatables__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! angular-datatables */
      "njyG");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");

      var TimesheetComponent = /*#__PURE__*/function () {
        function TimesheetComponent(formBuilder, srvModuleService, toastr) {
          _classCallCheck(this, TimesheetComponent);

          this.formBuilder = formBuilder;
          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.dtOptions = {};
          this.url = "timesheet";
          this.rows = [];
          this.srch = [];
          this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
          this.pipe = new _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"]("en-US");
        }

        _createClass(TimesheetComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            // for data table configuration
            this.dtOptions = {
              // ... skipped ...
              pageLength: 10,
              dom: "lrtip"
            };
            this.LoadTimewsheet();
            this.addTimesheetForm = this.formBuilder.group({
              Project: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              TimeDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              DeadlineName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              totalHours: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              remainingHours: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              Hrs: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              Description: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
            this.editTimesheetForm = this.formBuilder.group({
              Project: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              TimeDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              DeadlineName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              totalHours: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              remainingHours: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              Hrs: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              Description: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
          }
        }, {
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this20 = this;

            setTimeout(function () {
              _this20.dtTrigger.next();
            }, 1000);
          } // Get Timesheet list  Api Call

        }, {
          key: "LoadTimewsheet",
          value: function LoadTimewsheet() {
            var _this21 = this;

            this.srvModuleService.get(this.url).subscribe(function (data) {
              _this21.lstTimesheet = data;
              _this21.rows = _this21.lstTimesheet;
              _this21.srch = _toConsumableArray(_this21.rows);
            });
          } // Add Department  Modal Api Call

        }, {
          key: "addTimesheet",
          value: function addTimesheet() {
            var _this22 = this;

            if (this.addTimesheetForm.valid) {
              var Datetime = this.pipe.transform(this.addTimesheetForm.value.TimeDate, "dd-MM-yyyy");
              var deadLine = this.pipe.transform(this.addTimesheetForm.value.DeadlineName, "dd-MM-yyyy");
              var obj = {
                id: 6,
                employee: "John doe Galaviz",
                project: this.addTimesheetForm.value.Project,
                date: Datetime,
                deadline: deadLine,
                totalhrs: this.addTimesheetForm.value.totalHours,
                remainHrs: this.addTimesheetForm.value.remainingHours,
                assignedhours: "20",
                hrs: this.addTimesheetForm.value.Hrs,
                description: this.addTimesheetForm.value.Description
              };
              this.srvModuleService.add(obj, this.url).subscribe(function (data) {
                $("#datatable").DataTable().clear();

                _this22.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });

                _this22.dtTrigger.next();
              });
              this.LoadTimewsheet();
              $("#add_todaywork").modal("hide");
              this.addTimesheetForm.reset();
              this.toastr.success("Timesheet added sucessfully...!", "Success");
            } else {
              this.toastr.warning("Mandatory fields required", "");
            }
          } // to know the date picker changes

        }, {
          key: "from",
          value: function from(data) {
            this.editDatetime = this.pipe.transform(data, "dd-MM-yyyy");
          }
        }, {
          key: "to",
          value: function to(data) {
            this.editDeadline = this.pipe.transform(data, "dd-MM-yyyy");
          }
        }, {
          key: "editTimesheet",
          value: function editTimesheet() {
            var _this23 = this;

            if (this.editTimesheetForm.valid) {
              var obj = {
                employee: "John doe Galaviz",
                project: this.editTimesheetForm.value.Project,
                date: this.editDatetime,
                deadline: this.editDeadline,
                totalhrs: this.editTimesheetForm.value.totalHours,
                remainHrs: this.editTimesheetForm.value.remainingHours,
                assignedhours: "20",
                hrs: this.editTimesheetForm.value.Hrs,
                description: this.editTimesheetForm.value.Description,
                id: this.editId
              };
              this.srvModuleService.update(obj, this.url).subscribe(function (data1) {
                $("#datatable").DataTable().clear();

                _this23.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });

                _this23.dtTrigger.next();
              });
              this.LoadTimewsheet();
              $("#edit_todaywork").modal("hide");
              this.toastr.success("Timesheet Updated sucessfully...!", "Success");
            } else {
              this.toastr.warning("Mandatory fields required", "");
            }
          } // To Get The timesheet Edit Id And Set Values To Edit Modal Form

        }, {
          key: "edit",
          value: function edit(value) {
            this.editId = value;
            var index = this.lstTimesheet.findIndex(function (item) {
              return item.id === value;
            });
            var toSetValues = this.lstTimesheet[index];
            this.editTimesheetForm.setValue({
              Project: toSetValues.project,
              TimeDate: toSetValues.date,
              DeadlineName: toSetValues.deadline,
              totalHours: toSetValues.totalhrs,
              remainingHours: toSetValues.remainHrs,
              Hrs: toSetValues.hrs,
              Description: toSetValues.description
            });
          } // Delete timedsheet Modal Api Call

        }, {
          key: "deleteTimesheet",
          value: function deleteTimesheet() {
            var _this24 = this;

            this.srvModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              $("#datatable").DataTable().clear();

              _this24.dtElement.dtInstance.then(function (dtInstance) {
                dtInstance.destroy();
              });

              _this24.dtTrigger.next();

              _this24.LoadTimewsheet();

              $("#delete_timesheet").modal("hide");

              _this24.toastr.success("Timesheet deleted sucessfully..!", "Success");
            });
          } //getting the status value

        }, {
          key: "getStatus",
          value: function getStatus(data) {
            this.statusValue = data;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // Do not forget to unsubscribe the event
            this.dtTrigger.unsubscribe();
          }
        }]);

        return TimesheetComponent;
      }();

      TimesheetComponent.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]
        }];
      };

      TimesheetComponent.propDecorators = {
        dtElement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"],
          args: [angular_datatables__WEBPACK_IMPORTED_MODULE_8__["DataTableDirective"], {
            "static": false
          }]
        }]
      };
      TimesheetComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-timesheet",
        template: _raw_loader_timesheet_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_timesheet_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])], TimesheetComponent);
      /***/
    },

    /***/
    "PA2r":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/cs.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function PA2r(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Czech [cs]
      //! author : petrbela : https://github.com/petrbela
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
            monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
            monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i],
            // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

        function plural(n) {
          return n > 1 && n < 5 && ~~(n / 10) !== 1;
        }

        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';

          switch (key) {
            case 's':
              // a few seconds / in a few seconds / a few seconds ago
              return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';

            case 'ss':
              // 9 seconds / in 9 seconds / 9 seconds ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'sekundy' : 'sekund');
              } else {
                return result + 'sekundami';
              }

            case 'm':
              // a minute / in a minute / a minute ago
              return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';

            case 'mm':
              // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minuty' : 'minut');
              } else {
                return result + 'minutami';
              }

            case 'h':
              // an hour / in an hour / an hour ago
              return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';

            case 'hh':
              // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodin');
              } else {
                return result + 'hodinami';
              }

            case 'd':
              // a day / in a day / a day ago
              return withoutSuffix || isFuture ? 'den' : 'dnem';

            case 'dd':
              // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dny' : 'dní');
              } else {
                return result + 'dny';
              }

            case 'M':
              // a month / in a month / a month ago
              return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';

            case 'MM':
              // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'měsíce' : 'měsíců');
              } else {
                return result + 'měsíci';
              }

            case 'y':
              // a year / in a year / a year ago
              return withoutSuffix || isFuture ? 'rok' : 'rokem';

            case 'yy':
              // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'let');
              } else {
                return result + 'lety';
              }

          }
        }

        var cs = moment.defineLocale('cs', {
          months: months,
          monthsShort: monthsShort,
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
          // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
          monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
          monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
          weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
          weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
            l: 'D. M. YYYY'
          },
          calendar: {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[v neděli v] LT';

                case 1:
                case 2:
                  return '[v] dddd [v] LT';

                case 3:
                  return '[ve středu v] LT';

                case 4:
                  return '[ve čtvrtek v] LT';

                case 5:
                  return '[v pátek v] LT';

                case 6:
                  return '[v sobotu v] LT';
              }
            },
            lastDay: '[včera v] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                  return '[minulou neděli v] LT';

                case 1:
                case 2:
                  return '[minulé] dddd [v] LT';

                case 3:
                  return '[minulou středu v] LT';

                case 4:
                case 5:
                  return '[minulý] dddd [v] LT';

                case 6:
                  return '[minulou sobotu v] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'za %s',
            past: 'před %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return cs;
      });
      /***/

    },

    /***/
    "PeUW":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ta.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function PeUW(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tamil [ta]
      //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '௧',
          2: '௨',
          3: '௩',
          4: '௪',
          5: '௫',
          6: '௬',
          7: '௭',
          8: '௮',
          9: '௯',
          0: '௦'
        },
            numberMap = {
          '௧': '1',
          '௨': '2',
          '௩': '3',
          '௪': '4',
          '௫': '5',
          '௬': '6',
          '௭': '7',
          '௮': '8',
          '௯': '9',
          '௦': '0'
        };
        var ta = moment.defineLocale('ta', {
          months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
          monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
          weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
          weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
          weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, HH:mm',
            LLLL: 'dddd, D MMMM YYYY, HH:mm'
          },
          calendar: {
            sameDay: '[இன்று] LT',
            nextDay: '[நாளை] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[நேற்று] LT',
            lastWeek: '[கடந்த வாரம்] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s இல்',
            past: '%s முன்',
            s: 'ஒரு சில விநாடிகள்',
            ss: '%d விநாடிகள்',
            m: 'ஒரு நிமிடம்',
            mm: '%d நிமிடங்கள்',
            h: 'ஒரு மணி நேரம்',
            hh: '%d மணி நேரம்',
            d: 'ஒரு நாள்',
            dd: '%d நாட்கள்',
            M: 'ஒரு மாதம்',
            MM: '%d மாதங்கள்',
            y: 'ஒரு வருடம்',
            yy: '%d ஆண்டுகள்'
          },
          dayOfMonthOrdinalParse: /\d{1,2}வது/,
          ordinal: function ordinal(number) {
            return number + 'வது';
          },
          preparse: function preparse(string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          // refer http://ta.wikipedia.org/s/1er1
          meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 2) {
              return ' யாமம்';
            } else if (hour < 6) {
              return ' வைகறை'; // வைகறை
            } else if (hour < 10) {
              return ' காலை'; // காலை
            } else if (hour < 14) {
              return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
              return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
              return ' மாலை'; // மாலை
            } else {
              return ' யாமம்';
            }
          },
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'யாமம்') {
              return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
              return hour;
            } else if (meridiem === 'நண்பகல்') {
              return hour >= 10 ? hour : hour + 12;
            } else {
              return hour + 12;
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return ta;
      });
      /***/

    },

    /***/
    "PpIw":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/kn.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function PpIw(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kannada [kn]
      //! author : Rajeev Naik : https://github.com/rajeevnaikte
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '೧',
          2: '೨',
          3: '೩',
          4: '೪',
          5: '೫',
          6: '೬',
          7: '೭',
          8: '೮',
          9: '೯',
          0: '೦'
        },
            numberMap = {
          '೧': '1',
          '೨': '2',
          '೩': '3',
          '೪': '4',
          '೫': '5',
          '೬': '6',
          '೭': '7',
          '೮': '8',
          '೯': '9',
          '೦': '0'
        };
        var kn = moment.defineLocale('kn', {
          months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
          monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
          monthsParseExact: true,
          weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
          weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
          weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm'
          },
          calendar: {
            sameDay: '[ಇಂದು] LT',
            nextDay: '[ನಾಳೆ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ನಿನ್ನೆ] LT',
            lastWeek: '[ಕೊನೆಯ] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s ನಂತರ',
            past: '%s ಹಿಂದೆ',
            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss: '%d ಸೆಕೆಂಡುಗಳು',
            m: 'ಒಂದು ನಿಮಿಷ',
            mm: '%d ನಿಮಿಷ',
            h: 'ಒಂದು ಗಂಟೆ',
            hh: '%d ಗಂಟೆ',
            d: 'ಒಂದು ದಿನ',
            dd: '%d ದಿನ',
            M: 'ಒಂದು ತಿಂಗಳು',
            MM: '%d ತಿಂಗಳು',
            y: 'ಒಂದು ವರ್ಷ',
            yy: '%d ವರ್ಷ'
          },
          preparse: function preparse(string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'ರಾತ್ರಿ') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
              return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
              return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
              return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
              return 'ಸಂಜೆ';
            } else {
              return 'ರಾತ್ರಿ';
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
          ordinal: function ordinal(number) {
            return number + 'ನೇ';
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return kn;
      });
      /***/

    },

    /***/
    "QAzK":
    /*!*********************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/leave-settings/leave-settings.component.ts ***!
      \*********************************************************************************************/

    /*! exports provided: LeaveSettingsComponent */

    /***/
    function QAzK(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "LeaveSettingsComponent", function () {
        return LeaveSettingsComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_leave_settings_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./leave-settings.component.html */
      "QoNG");
      /* harmony import */


      var _leave_settings_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./leave-settings.component.css */
      "ywOM");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var primeng_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! primeng/api */
      "7zfz");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");

      var LeaveSettingsComponent = /*#__PURE__*/function () {
        function LeaveSettingsComponent(primengConfig, allModuleService, formBuilder, toastr) {
          _classCallCheck(this, LeaveSettingsComponent);

          this.primengConfig = primengConfig;
          this.allModuleService = allModuleService;
          this.formBuilder = formBuilder;
          this.toastr = toastr;
          this.url1 = "pickListNames";
          this.url = "customPolicy";
          this.allCustomPolicy = [];
        }

        _createClass(LeaveSettingsComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            // Leave Settings button show
            $(document).on("click", ".leave-edit-btn", function () {
              $(this).removeClass("leave-edit-btn").addClass("btn btn-white leave-cancel-btn").text("Cancel");
              $(this).closest("div.leave-right").append('<button class="btn btn-primary leave-save-btn" type="submit">Save</button>');
              $(this).parent().parent().find("input").prop("disabled", false);
              return false;
            });
            $(document).on("click", ".leave-cancel-btn", function () {
              $(this).removeClass("btn btn-white leave-cancel-btn").addClass("leave-edit-btn").text("Edit");
              $(this).closest("div.leave-right").find(".leave-save-btn").remove();
              $(this).parent().parent().find("input").prop("disabled", true);
              return false;
            });
            $(document).on("change", ".leave-box .onoffswitch-checkbox", function () {
              var id = $(this).attr("id").split("_")[1];

              if ($(this).prop("checked") == true) {
                $("#leave_" + id + " .leave-edit-btn").prop("disabled", false);
                $("#leave_" + id + " .leave-action .btn").prop("disabled", false);
              } else {
                $("#leave_" + id + " .leave-action .btn").prop("disabled", true);
                $("#leave_" + id + " .leave-cancel-btn").parent().parent().find("input").prop("disabled", true);
                $("#leave_" + id + " .leave-cancel-btn").closest("div.leave-right").find(".leave-save-btn").remove();
                $("#leave_" + id + " .leave-cancel-btn").removeClass("btn btn-white leave-cancel-btn").addClass("leave-edit-btn").text("Edit");
                $("#leave_" + id + " .leave-edit-btn").prop("disabled", true);
              }
            });
            $(".leave-box .onoffswitch-checkbox").each(function () {
              var id = $(this).attr("id").split("_")[1];

              if ($(this).prop("checked") == true) {
                $("#leave_" + id + " .leave-edit-btn").prop("disabled", false);
                $("#leave_" + id + " .leave-action .btn").prop("disabled", false);
              } else {
                $("#leave_" + id + " .leave-action .btn").prop("disabled", true);
                $("#leave_" + id + " .leave-cancel-btn").parent().parent().find("input").prop("disabled", true);
                $("#leave_" + id + " .leave-cancel-btn").closest("div.leave-right").find(".leave-save-btn").remove();
                $("#leave_" + id + " .leave-cancel-btn").removeClass("btn btn-white leave-cancel-btn").addClass("leave-edit-btn").text("Edit");
                $("#leave_" + id + " .leave-edit-btn").prop("disabled", true);
              }
            });

            if ($("#customleave_select").length > 0) {
              $("#customleave_select").multiselect();
            }

            if ($("#edit_customleave_select").length > 0) {
              $("#edit_customleave_select").multiselect();
            }

            this.primengConfig.ripple = true;
            this.getPickList();
            this.getCustomPolicy(); // Add CustomPolicyForm Validation And Getting Values

            this.addCustomPolicyForm = this.formBuilder.group({
              addNames: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              addDays: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            }); // Edit CustomPolicyForm Validation And Getting Values

            this.editCustomPolicy = this.formBuilder.group({
              editNames: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              editDays: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
          } //get pick list

        }, {
          key: "getPickList",
          value: function getPickList() {
            var _this25 = this;

            this.allModuleService.get(this.url1).subscribe(function (data) {
              _this25.sourceProducts = data;
              _this25.targetProducts = [];
            });
          } //get custom policy

        }, {
          key: "getCustomPolicy",
          value: function getCustomPolicy() {
            var _this26 = this;

            this.allModuleService.get(this.url).subscribe(function (data) {
              _this26.allCustomPolicy = data;
            });
          } // Add Custom Modal Api Call

        }, {
          key: "addCustom",
          value: function addCustom() {
            if (this.addCustomPolicyForm.valid) {
              var obj = {
                name: this.addCustomPolicyForm.value.addNames,
                days: this.addCustomPolicyForm.value.addDays
              };
              this.allModuleService.add(obj, this.url).subscribe(function (data) {});
              this.getCustomPolicy();
              $("#add_custom_policy").modal("hide");
              this.addCustomPolicyForm.reset();
              this.toastr.success("Custom Policy is added", "Success");
            }
          } // Edit Custom Modal Api Call

        }, {
          key: "editCustom",
          value: function editCustom() {
            var obj = {
              name: this.editCustomPolicy.value.editNames,
              days: this.editCustomPolicy.value.editDays,
              id: this.editId
            };
            this.allModuleService.update(obj, this.url).subscribe(function (data1) {});
            this.getCustomPolicy();
            $("#edit_custom_policy").modal("hide");
            this.toastr.success("Custom Policy is edited", "Success");
          }
        }, {
          key: "edit",
          value: function edit(value) {
            this.editId = value;
            var index = this.allCustomPolicy.findIndex(function (item) {
              return item.id === value;
            });
            var toSetValues = this.allCustomPolicy[index];
            this.editCustomPolicy.setValue({
              editNames: toSetValues.name,
              editDays: toSetValues.days
            });
          } // Delete Custom Modal Api Call

        }, {
          key: "deleteCustom",
          value: function deleteCustom() {
            var _this27 = this;

            this.allModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              _this27.getCustomPolicy();

              $("#delete_custom_policy").modal("hide");

              _this27.toastr.success("Custom Policy is deleted", "Success");
            });
          }
        }]);

        return LeaveSettingsComponent;
      }();

      LeaveSettingsComponent.ctorParameters = function () {
        return [{
          type: primeng_api__WEBPACK_IMPORTED_MODULE_6__["PrimeNGConfig"]
        }, {
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_7__["AllModulesService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]
        }];
      };

      LeaveSettingsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-leave-settings",
        template: _raw_loader_leave_settings_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_leave_settings_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [primeng_api__WEBPACK_IMPORTED_MODULE_6__["PrimeNGConfig"], src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_7__["AllModulesService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])], LeaveSettingsComponent);
      /***/
    },

    /***/
    "Qj4J":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ar-kw.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function Qj4J(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Kuwait) [ar-kw]
      //! author : Nusret Parlak: https://github.com/nusretparlak
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var arKw = moment.defineLocale('ar-kw', {
          months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
          monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
          weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
          weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return arKw;
      });
      /***/

    },

    /***/
    "QoNG":
    /*!*************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/leave-settings/leave-settings.component.html ***!
      \*************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function QoNG(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <h3 class=\"page-title\">Leave Settings</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Leave Settings</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <!-- Annual Leave -->\r\n            <div class=\"card leave-box\" id=\"leave_annual\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h3 card-title with-switch\">\r\n                        Annual\r\n                        <div class=\"onoffswitch\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"switch_annual\"\r\n                                checked>\r\n                            <label class=\"onoffswitch-label\" for=\"switch_annual\">\r\n                                <span class=\"onoffswitch-inner\"></span>\r\n                                <span class=\"onoffswitch-switch\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"leave-item\">\r\n\r\n                        <!-- Annual Days Leave -->\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Days</label>\r\n                                        <input type=\"text\" class=\"form-control\" disabled>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">Edit</button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /Annual Days Leave -->\r\n\r\n                        <!-- Carry Forward -->\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <label class=\"d-block\">Carry forward</label>\r\n                                    <div class=\"leave-inline-form\">\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                                                id=\"carry_no\" value=\"option1\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"carry_no\">No</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                                                id=\"carry_yes\" value=\"option2\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"carry_yes\">Yes</label>\r\n                                        </div>\r\n                                        <div class=\"input-group\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\">Max</span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /Carry Forward -->\r\n\r\n                        <!-- Earned Leave -->\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <label class=\"d-block\">Earned leave</label>\r\n                                    <div class=\"leave-inline-form\">\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                                                id=\"earned_no\" value=\"option1\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"earned_no\">No</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                                                id=\"earned_yes\" value=\"option2\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"earned_yes\">Yes</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /Earned Leave -->\r\n\r\n                    </div>\r\n\r\n                    <!-- Custom Policy -->\r\n                    <div class=\"custom-policy\">\r\n                        <div class=\"leave-header\">\r\n                            <div class=\"title\">Custom policy</div>\r\n                            <div class=\"leave-action\">\r\n                                <button class=\"btn btn-sm btn-primary\" type=\"button\" data-toggle=\"modal\"\r\n                                    data-target=\"#add_custom_policy\"><i class=\"fa fa-plus\"></i> Add custom\r\n                                    policy</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-hover table-nowrap leave-table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"l-name\">Name</th>\r\n                                        <th class=\"l-days\">Days</th>\r\n                                        <th class=\"l-assignee\">Assignee</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let custom of allCustomPolicy;let i = index\">\r\n                                        <td>{{custom.name}} </td>\r\n                                        <td>{{custom.days}}</td>\r\n                                        <td>\r\n                                            <a routerLink=\"/employees/employeeprofile\" class=\"avatar\"><img alt=\"\"\r\n                                                    src=\"assets/img/profiles/avatar-2.jpg\"></a>\r\n                                            <a routerLink=\"/employees/employeeprofile\">John Doe</a>\r\n                                        </td>\r\n                                        <td class=\"text-right\">\r\n                                            <div class=\"dropdown dropdown-action\">\r\n                                                <a aria-expanded=\"false\" data-toggle=\"dropdown\"\r\n                                                    class=\"action-icon dropdown-toggle\"><i\r\n                                                        class=\"material-icons\">more_vert</i></a>\r\n                                                <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                                    <a class=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                        data-target=\"#edit_custom_policy\" (click)=\"edit(custom.id)\"><i\r\n                                                            class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                                    <a class=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                        data-target=\"#delete_custom_policy\"\r\n                                                        (click)=\"tempId = custom.id\"><i class=\"fa fa-trash-o m-r-5\"></i>\r\n                                                        Delete</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <!-- /Custom Policy -->\r\n\r\n                </div>\r\n            </div>\r\n            <!-- /Annual Leave -->\r\n\r\n            <!-- Sick Leave -->\r\n            <div class=\"card leave-box\" id=\"leave_sick\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h3 card-title with-switch\">\r\n                        Sick\r\n                        <div class=\"onoffswitch\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"switch_sick\"\r\n                                checked>\r\n                            <label class=\"onoffswitch-label\" for=\"switch_sick\">\r\n                                <span class=\"onoffswitch-inner\"></span>\r\n                                <span class=\"onoffswitch-switch\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"leave-item\">\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Days</label>\r\n                                        <input type=\"text\" class=\"form-control\" disabled>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- /Sick Leave -->\r\n\r\n            <!-- Hospitalisation Leave -->\r\n            <div class=\"card leave-box\" id=\"leave_hospitalisation\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h3 card-title with-switch\">\r\n                        Hospitalisation\r\n                        <div class=\"onoffswitch\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\"\r\n                                id=\"switch_hospitalisation\">\r\n                            <label class=\"onoffswitch-label\" for=\"switch_hospitalisation\">\r\n                                <span class=\"onoffswitch-inner\"></span>\r\n                                <span class=\"onoffswitch-switch\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"leave-item\">\r\n\r\n                        <!-- Annual Days Leave -->\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Days</label>\r\n                                        <input type=\"text\" class=\"form-control\" disabled>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /Annual Days Leave -->\r\n\r\n                    </div>\r\n\r\n                    <!-- Custom Policy -->\r\n                    <div class=\"custom-policy\">\r\n                        <div class=\"leave-header\">\r\n                            <div class=\"title\">Custom policy</div>\r\n                            <div class=\"leave-action\">\r\n                                <button class=\"btn btn-sm btn-primary\" type=\"button\" data-toggle=\"modal\"\r\n                                    data-target=\"#add_custom_policy\"><i class=\"fa fa-plus\"></i> Add custom\r\n                                    policy</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-hover table-nowrap leave-table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"l-name\">Name</th>\r\n                                        <th class=\"l-days\">Days</th>\r\n                                        <th class=\"l-assignee\">Assignee</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let custom of allCustomPolicy;let i = index\">\r\n                                        <td>{{custom.name}} </td>\r\n                                        <td>{{custom.days}}</td>\r\n                                        <td>\r\n                                            <a class=\"avatar\"><img alt=\"\" src=\"assets/img/profiles/avatar-2.jpg\"></a>\r\n                                            <a>John Doe</a>\r\n                                        </td>\r\n                                        <td class=\"text-right\">\r\n                                            <div class=\"dropdown dropdown-action\">\r\n                                                <a aria-expanded=\"false\" data-toggle=\"dropdown\"\r\n                                                    class=\"action-icon dropdown-toggle\"><i\r\n                                                        class=\"material-icons\">more_vert</i></a>\r\n                                                <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                                    <a class=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                        data-target=\"#edit_custom_policy\" (click)=\"edit(custom.id)\"><i\r\n                                                            class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                                    <a class=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                        data-target=\"#delete_custom_policy\"\r\n                                                        (click)=\"tempId = custom.id\"><i class=\"fa fa-trash-o m-r-5\"></i>\r\n                                                        Delete</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <!-- /Custom Policy -->\r\n\r\n                </div>\r\n            </div>\r\n            <!-- /Hospitalisation Leave -->\r\n\r\n            <!-- Maternity Leave -->\r\n            <div class=\"card leave-box\" id=\"leave_maternity\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h3 card-title with-switch\">\r\n                        Maternity <span class=\"subtitle\">Assigned to female only</span>\r\n                        <div class=\"onoffswitch\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"switch_maternity\"\r\n                                checked>\r\n                            <label class=\"onoffswitch-label\" for=\"switch_maternity\">\r\n                                <span class=\"onoffswitch-inner\"></span>\r\n                                <span class=\"onoffswitch-switch\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"leave-item\">\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Days</label>\r\n                                        <input type=\"text\" class=\"form-control\" disabled>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- /Maternity Leave -->\r\n\r\n            <!-- Paternity Leave -->\r\n            <div class=\"card leave-box\" id=\"leave_paternity\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h3 card-title with-switch\">\r\n                        Paternity <span class=\"subtitle\">Assigned to male only</span>\r\n                        <div class=\"onoffswitch\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\"\r\n                                id=\"switch_paternity\">\r\n                            <label class=\"onoffswitch-label\" for=\"switch_paternity\">\r\n                                <span class=\"onoffswitch-inner\"></span>\r\n                                <span class=\"onoffswitch-switch\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"leave-item\">\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Days</label>\r\n                                        <input type=\"text\" class=\"form-control\" disabled>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- /Paternity Leave -->\r\n\r\n            <!-- Custom Create Leave -->\r\n            <div class=\"card leave-box mb-0\" id=\"leave_custom01\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"h3 card-title with-switch\">\r\n                        LOP\r\n                        <div class=\"onoffswitch\">\r\n                            <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"switch_custom01\"\r\n                                checked>\r\n                            <label class=\"onoffswitch-label\" for=\"switch_custom01\">\r\n                                <span class=\"onoffswitch-inner\"></span>\r\n                                <span class=\"onoffswitch-switch\"></span>\r\n                            </label>\r\n                        </div>\r\n                        <button class=\"btn btn-danger leave-delete-btn\" type=\"button\">Delete</button>\r\n                    </div>\r\n                    <div class=\"leave-item\">\r\n\r\n                        <!-- Annual Days Leave -->\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <div class=\"form-group\">\r\n                                        <label>Days</label>\r\n                                        <input type=\"text\" class=\"form-control\" disabled>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">Edit</button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /Annual Days Leave -->\r\n\r\n                        <!-- Carry Forward -->\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <label class=\"d-block\">Carry forward</label>\r\n                                    <div class=\"leave-inline-form\">\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"carryForward\"\r\n                                                id=\"carry_no_01\" value=\"option1\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"carry_no_01\">No</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"carryForward\"\r\n                                                id=\"carry_yes_01\" value=\"option2\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"carry_yes_01\">Yes</label>\r\n                                        </div>\r\n                                        <div class=\"input-group\">\r\n                                            <div class=\"input-group-prepend\">\r\n                                                <span class=\"input-group-text\">Max</span>\r\n                                            </div>\r\n                                            <input type=\"text\" class=\"form-control\" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /Carry Forward -->\r\n\r\n                        <!-- Earned Leave -->\r\n                        <div class=\"leave-row\">\r\n                            <div class=\"leave-left\">\r\n                                <div class=\"input-box\">\r\n                                    <label class=\"d-block\">Earned leave</label>\r\n                                    <div class=\"leave-inline-form\">\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                                                id=\"inlineRadio1\" value=\"option1\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"inlineRadio1\">No</label>\r\n                                        </div>\r\n                                        <div class=\"form-check form-check-inline\">\r\n                                            <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\"\r\n                                                id=\"inlineRadio2\" value=\"option2\" disabled>\r\n                                            <label class=\"form-check-label\" for=\"inlineRadio2\">Yes</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"leave-right\">\r\n                                <button class=\"leave-edit-btn\">\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- /Earned Leave -->\r\n\r\n                    </div>\r\n\r\n                    <!-- Custom Policy -->\r\n                    <div class=\"custom-policy\">\r\n                        <div class=\"leave-header\">\r\n                            <div class=\"title\">Custom policy</div>\r\n                            <div class=\"leave-action\">\r\n                                <button class=\"btn btn-sm btn-primary\" type=\"button\" data-toggle=\"modal\"\r\n                                    data-target=\"#add_custom_policy\"><i class=\"fa fa-plus\"></i> Add custom\r\n                                    policy</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-hover table-nowrap leave-table mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class=\"l-name\">Name</th>\r\n                                        <th class=\"l-days\">Days</th>\r\n                                        <th class=\"l-assignee\">Assignee</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let custom of allCustomPolicy;let i = index\">\r\n                                        <td>{{custom.name}} </td>\r\n                                        <td>{{custom.days}}</td>\r\n                                        <td>\r\n                                            <a class=\"avatar\"><img alt=\"\" src=\"assets/img/profiles/avatar-2.jpg\"></a>\r\n                                            <a>John Doe</a>\r\n                                        </td>\r\n                                        <td class=\"text-right\">\r\n                                            <div class=\"dropdown dropdown-action\">\r\n                                                <a aria-expanded=\"false\" data-toggle=\"dropdown\"\r\n                                                    class=\"action-icon dropdown-toggle\"><i\r\n                                                        class=\"material-icons\">more_vert</i></a>\r\n                                                <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                                    <a class=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                        data-target=\"#edit_custom_policy\" (click)=\"edit(custom.id)\"><i\r\n                                                            class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                                    <a class=\"dropdown-item\" data-toggle=\"modal\"\r\n                                                        data-target=\"#delete_custom_policy\"\r\n                                                        (click)=\"tempId = custom.id\"><i class=\"fa fa-trash-o m-r-5\"></i>\r\n                                                        Delete</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <!-- /Custom Policy -->\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- /Page Content -->\r\n\r\n        <!-- Add Custom Policy Modal -->\r\n        <div id=\"add_custom_policy\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n            <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">Add Custom Policy</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form (ngSubmit)=\"addCustom()\" [formGroup]=\"addCustomPolicyForm\">\r\n                            <div class=\"form-group\">\r\n                                <label>Policy Name <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\"\r\n                                    [class.invalid]=\"addCustomPolicyForm.get('addNames').invalid && addCustomPolicyForm.get('addNames').touched\"\r\n                                    formControlName=\"addNames\">\r\n                                <div\r\n                                    *ngIf=\"addCustomPolicyForm.get('addNames').invalid && addCustomPolicyForm.get('addNames').touched\">\r\n                                    <small\r\n                                        *ngIf=\"addCustomPolicyForm.get('addNames').invalid && addCustomPolicyForm.get('addNames').touched\"\r\n                                        class=\"text-danger\"> *Policy name is required</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Days <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\"\r\n                                    [class.invalid]=\"addCustomPolicyForm.get('addDays').invalid && addCustomPolicyForm.get('addDays').touched\"\r\n                                    formControlName=\"addDays\">\r\n                                <div\r\n                                    *ngIf=\"addCustomPolicyForm.get('addDays').invalid && addCustomPolicyForm.get('addDays').touched\">\r\n                                    <small\r\n                                        *ngIf=\"addCustomPolicyForm.get('addDays').invalid && addCustomPolicyForm.get('addDays').touched\"\r\n                                        class=\"text-danger\"> *Days is required</small>\r\n                                </div>\r\n                            </div>\r\n                            <p-pickList [source]=\"sourceProducts\" [target]=\"targetProducts\" sourceHeader=\"Employee List\"\r\n                                targetHeader=\"Selected Employee\" dragdrop=\"true\" [responsive]=\"true\"\r\n                                [sourceStyle]=\"{'height':'300px'}\" [targetStyle]=\"{'height':'300px'}\" filterBy=\"name\"\r\n                                sourceFilterPlaceholder=\"Search by name\" targetFilterPlaceholder=\"Search by name\">\r\n                                <ng-template let-product pTemplate=\"item\">\r\n                                    <div class=\"product-item\">\r\n                                        <div class=\"product-list-detail\">\r\n                                            <h5 class=\"p-mb-2\">{{product.name}}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </p-pickList>\r\n\r\n                            <div class=\"submit-section\">\r\n                                <button class=\"btn btn-primary submit-btn\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- /Add Custom Policy Modal -->\r\n\r\n        <!-- Edit Custom Policy Modal -->\r\n        <div id=\"edit_custom_policy\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n            <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\">Edit Custom Policy</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form (ngSubmit)=\"editCustom()\" [formGroup]=\"editCustomPolicy\">\r\n                            <div class=\"form-group\">\r\n                                <label>Policy Name <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\"\r\n                                    [class.invalid]=\"editCustomPolicy.get('editNames').invalid && editCustomPolicy.get('editNames').touched\"\r\n                                    formControlName=\"editNames\">\r\n                                <div\r\n                                    *ngIf=\"editCustomPolicy.get('editNames').invalid && editCustomPolicy.get('editNames').touched\">\r\n                                    <small\r\n                                        *ngIf=\"editCustomPolicy.get('editNames').invalid && editCustomPolicy.get('editNames').touched\"\r\n                                        class=\"text-danger\"> *Policy name is required</small>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Days <span class=\"text-danger\">*</span></label>\r\n                                <input type=\"text\" class=\"form-control\" value=\"4\"\r\n                                    [class.invalid]=\"editCustomPolicy.get('editDays').invalid && editCustomPolicy.get('editDays').touched\"\r\n                                    formControlName=\"editDays\">\r\n                                <div\r\n                                    *ngIf=\"editCustomPolicy.get('editDays').invalid && editCustomPolicy.get('editDays').touched\">\r\n                                    <small\r\n                                        *ngIf=\"editCustomPolicy.get('editDays').invalid && editCustomPolicy.get('editDays').touched\"\r\n                                        class=\"text-danger\"> *Days is required</small>\r\n                                </div>\r\n                            </div>\r\n                            <p-pickList [source]=\"sourceProducts\" [target]=\"targetProducts\" sourceHeader=\"Employee List\"\r\n                                targetHeader=\"Selected Employee\" dragdrop=\"true\" [responsive]=\"true\"\r\n                                [sourceStyle]=\"{'height':'300px'}\" [targetStyle]=\"{'height':'300px'}\" filterBy=\"name\"\r\n                                sourceFilterPlaceholder=\"Search by name\" targetFilterPlaceholder=\"Search by name\">\r\n                                <ng-template let-product pTemplate=\"item\">\r\n                                    <div class=\"product-item\">\r\n                                        <div class=\"product-list-detail\">\r\n                                            <h5 class=\"p-mb-2\">{{product.name}}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </p-pickList>\r\n\r\n                            <div class=\"submit-section\">\r\n                                <button class=\"btn btn-primary submit-btn\">Submit</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- /Edit Custom Policy Modal -->\r\n\r\n        <!-- Delete Custom Policy Modal -->\r\n        <div class=\"modal custom-modal fade\" id=\"delete_custom_policy\" role=\"dialog\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"form-header\">\r\n                            <h3>Delete Custom Policy</h3>\r\n                            <p>Are you sure want to delete?</p>\r\n                        </div>\r\n                        <div class=\"modal-btn delete-action\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-6\">\r\n                                    <a  class=\"btn btn-primary continue-btn\"\r\n                                        (click)='deleteCustom()'>Delete</a>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <a  data-dismiss=\"modal\"\r\n                                        class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- /Delete Custom Policy Modal -->";
      /***/
    },

    /***/
    "RAwQ":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/lb.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function RAwQ(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Luxembourgish [lb]
      //! author : mweimerskirch : https://github.com/mweimerskirch
      //! author : David Raison : https://github.com/kwisatz
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ['eng Minutt', 'enger Minutt'],
            h: ['eng Stonn', 'enger Stonn'],
            d: ['een Dag', 'engem Dag'],
            M: ['ee Mount', 'engem Mount'],
            y: ['ee Joer', 'engem Joer']
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        function processFutureTime(string) {
          var number = string.substr(0, string.indexOf(' '));

          if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
          }

          return 'an ' + string;
        }

        function processPastTime(string) {
          var number = string.substr(0, string.indexOf(' '));

          if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
          }

          return 'virun ' + string;
        }
        /**
         * Returns true if the word before the given number loses the '-n' ending.
         * e.g. 'an 10 Deeg' but 'a 5 Deeg'
         *
         * @param number {integer}
         * @returns {boolean}
         */


        function eifelerRegelAppliesToNumber(number) {
          number = parseInt(number, 10);

          if (isNaN(number)) {
            return false;
          }

          if (number < 0) {
            // Negative Number --> always true
            return true;
          } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
              return true;
            }

            return false;
          } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10,
                firstDigit = number / 10;

            if (lastDigit === 0) {
              return eifelerRegelAppliesToNumber(firstDigit);
            }

            return eifelerRegelAppliesToNumber(lastDigit);
          } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
              number = number / 10;
            }

            return eifelerRegelAppliesToNumber(number);
          } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
          }
        }

        var lb = moment.defineLocale('lb', {
          months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
          monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
          monthsParseExact: true,
          weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
          weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
          weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
          },
          calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function lastWeek() {
              // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
              switch (this.day()) {
                case 2:
                case 4:
                  return '[Leschten] dddd [um] LT';

                default:
                  return '[Leschte] dddd [um] LT';
              }
            }
          },
          relativeTime: {
            future: processFutureTime,
            past: processPastTime,
            s: 'e puer Sekonnen',
            ss: '%d Sekonnen',
            m: processRelativeTime,
            mm: '%d Minutten',
            h: processRelativeTime,
            hh: '%d Stonnen',
            d: processRelativeTime,
            dd: '%d Deeg',
            M: processRelativeTime,
            MM: '%d Méint',
            y: processRelativeTime,
            yy: '%d Joer'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return lb;
      });
      /***/

    },

    /***/
    "RIvN":
    /*!**********************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/holidays/holidays.component.css ***!
      \**********************************************************************************/

    /*! exports provided: default */

    /***/
    function RIvN(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbGlkYXlzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2QiLCJmaWxlIjoiaG9saWRheXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59Il19 */";
      /***/
    },

    /***/
    "RnhZ":
    /*!**************************************************!*\
      !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
      \**************************************************/

    /*! no static exports found */

    /***/
    function RnhZ(module, exports, __webpack_require__) {
      var map = {
        "./af": "K/tc",
        "./af.js": "K/tc",
        "./ar": "jnO4",
        "./ar-dz": "o1bE",
        "./ar-dz.js": "o1bE",
        "./ar-kw": "Qj4J",
        "./ar-kw.js": "Qj4J",
        "./ar-ly": "HP3h",
        "./ar-ly.js": "HP3h",
        "./ar-ma": "CoRJ",
        "./ar-ma.js": "CoRJ",
        "./ar-sa": "gjCT",
        "./ar-sa.js": "gjCT",
        "./ar-tn": "bYM6",
        "./ar-tn.js": "bYM6",
        "./ar.js": "jnO4",
        "./az": "SFxW",
        "./az.js": "SFxW",
        "./be": "H8ED",
        "./be.js": "H8ED",
        "./bg": "hKrs",
        "./bg.js": "hKrs",
        "./bm": "p/rL",
        "./bm.js": "p/rL",
        "./bn": "kEOa",
        "./bn-bd": "loYQ",
        "./bn-bd.js": "loYQ",
        "./bn.js": "kEOa",
        "./bo": "0mo+",
        "./bo.js": "0mo+",
        "./br": "aIdf",
        "./br.js": "aIdf",
        "./bs": "JVSJ",
        "./bs.js": "JVSJ",
        "./ca": "1xZ4",
        "./ca.js": "1xZ4",
        "./cs": "PA2r",
        "./cs.js": "PA2r",
        "./cv": "A+xa",
        "./cv.js": "A+xa",
        "./cy": "l5ep",
        "./cy.js": "l5ep",
        "./da": "DxQv",
        "./da.js": "DxQv",
        "./de": "tGlX",
        "./de-at": "s+uk",
        "./de-at.js": "s+uk",
        "./de-ch": "u3GI",
        "./de-ch.js": "u3GI",
        "./de.js": "tGlX",
        "./dv": "WYrj",
        "./dv.js": "WYrj",
        "./el": "jUeY",
        "./el.js": "jUeY",
        "./en-au": "Dmvi",
        "./en-au.js": "Dmvi",
        "./en-ca": "OIYi",
        "./en-ca.js": "OIYi",
        "./en-gb": "Oaa7",
        "./en-gb.js": "Oaa7",
        "./en-ie": "4dOw",
        "./en-ie.js": "4dOw",
        "./en-il": "czMo",
        "./en-il.js": "czMo",
        "./en-in": "7C5Q",
        "./en-in.js": "7C5Q",
        "./en-nz": "b1Dy",
        "./en-nz.js": "b1Dy",
        "./en-sg": "t+mt",
        "./en-sg.js": "t+mt",
        "./eo": "Zduo",
        "./eo.js": "Zduo",
        "./es": "iYuL",
        "./es-do": "CjzT",
        "./es-do.js": "CjzT",
        "./es-mx": "tbfe",
        "./es-mx.js": "tbfe",
        "./es-us": "Vclq",
        "./es-us.js": "Vclq",
        "./es.js": "iYuL",
        "./et": "7BjC",
        "./et.js": "7BjC",
        "./eu": "D/JM",
        "./eu.js": "D/JM",
        "./fa": "jfSC",
        "./fa.js": "jfSC",
        "./fi": "gekB",
        "./fi.js": "gekB",
        "./fil": "1ppg",
        "./fil.js": "1ppg",
        "./fo": "ByF4",
        "./fo.js": "ByF4",
        "./fr": "nyYc",
        "./fr-ca": "2fjn",
        "./fr-ca.js": "2fjn",
        "./fr-ch": "Dkky",
        "./fr-ch.js": "Dkky",
        "./fr.js": "nyYc",
        "./fy": "cRix",
        "./fy.js": "cRix",
        "./ga": "USCx",
        "./ga.js": "USCx",
        "./gd": "9rRi",
        "./gd.js": "9rRi",
        "./gl": "iEDd",
        "./gl.js": "iEDd",
        "./gom-deva": "qvJo",
        "./gom-deva.js": "qvJo",
        "./gom-latn": "DKr+",
        "./gom-latn.js": "DKr+",
        "./gu": "4MV3",
        "./gu.js": "4MV3",
        "./he": "x6pH",
        "./he.js": "x6pH",
        "./hi": "3E1r",
        "./hi.js": "3E1r",
        "./hr": "S6ln",
        "./hr.js": "S6ln",
        "./hu": "WxRl",
        "./hu.js": "WxRl",
        "./hy-am": "1rYy",
        "./hy-am.js": "1rYy",
        "./id": "UDhR",
        "./id.js": "UDhR",
        "./is": "BVg3",
        "./is.js": "BVg3",
        "./it": "bpih",
        "./it-ch": "bxKX",
        "./it-ch.js": "bxKX",
        "./it.js": "bpih",
        "./ja": "B55N",
        "./ja.js": "B55N",
        "./jv": "tUCv",
        "./jv.js": "tUCv",
        "./ka": "IBtZ",
        "./ka.js": "IBtZ",
        "./kk": "bXm7",
        "./kk.js": "bXm7",
        "./km": "6B0Y",
        "./km.js": "6B0Y",
        "./kn": "PpIw",
        "./kn.js": "PpIw",
        "./ko": "Ivi+",
        "./ko.js": "Ivi+",
        "./ku": "JCF/",
        "./ku.js": "JCF/",
        "./ky": "lgnt",
        "./ky.js": "lgnt",
        "./lb": "RAwQ",
        "./lb.js": "RAwQ",
        "./lo": "sp3z",
        "./lo.js": "sp3z",
        "./lt": "JvlW",
        "./lt.js": "JvlW",
        "./lv": "uXwI",
        "./lv.js": "uXwI",
        "./me": "KTz0",
        "./me.js": "KTz0",
        "./mi": "aIsn",
        "./mi.js": "aIsn",
        "./mk": "aQkU",
        "./mk.js": "aQkU",
        "./ml": "AvvY",
        "./ml.js": "AvvY",
        "./mn": "lYtQ",
        "./mn.js": "lYtQ",
        "./mr": "Ob0Z",
        "./mr.js": "Ob0Z",
        "./ms": "6+QB",
        "./ms-my": "ZAMP",
        "./ms-my.js": "ZAMP",
        "./ms.js": "6+QB",
        "./mt": "G0Uy",
        "./mt.js": "G0Uy",
        "./my": "honF",
        "./my.js": "honF",
        "./nb": "bOMt",
        "./nb.js": "bOMt",
        "./ne": "OjkT",
        "./ne.js": "OjkT",
        "./nl": "+s0g",
        "./nl-be": "2ykv",
        "./nl-be.js": "2ykv",
        "./nl.js": "+s0g",
        "./nn": "uEye",
        "./nn.js": "uEye",
        "./oc-lnc": "Fnuy",
        "./oc-lnc.js": "Fnuy",
        "./pa-in": "8/+R",
        "./pa-in.js": "8/+R",
        "./pl": "jVdC",
        "./pl.js": "jVdC",
        "./pt": "8mBD",
        "./pt-br": "0tRk",
        "./pt-br.js": "0tRk",
        "./pt.js": "8mBD",
        "./ro": "lyxo",
        "./ro.js": "lyxo",
        "./ru": "lXzo",
        "./ru.js": "lXzo",
        "./sd": "Z4QM",
        "./sd.js": "Z4QM",
        "./se": "//9w",
        "./se.js": "//9w",
        "./si": "7aV9",
        "./si.js": "7aV9",
        "./sk": "e+ae",
        "./sk.js": "e+ae",
        "./sl": "gVVK",
        "./sl.js": "gVVK",
        "./sq": "yPMs",
        "./sq.js": "yPMs",
        "./sr": "zx6S",
        "./sr-cyrl": "E+lV",
        "./sr-cyrl.js": "E+lV",
        "./sr.js": "zx6S",
        "./ss": "Ur1D",
        "./ss.js": "Ur1D",
        "./sv": "X709",
        "./sv.js": "X709",
        "./sw": "dNwA",
        "./sw.js": "dNwA",
        "./ta": "PeUW",
        "./ta.js": "PeUW",
        "./te": "XLvN",
        "./te.js": "XLvN",
        "./tet": "V2x9",
        "./tet.js": "V2x9",
        "./tg": "Oxv6",
        "./tg.js": "Oxv6",
        "./th": "EOgW",
        "./th.js": "EOgW",
        "./tk": "Wv91",
        "./tk.js": "Wv91",
        "./tl-ph": "Dzi0",
        "./tl-ph.js": "Dzi0",
        "./tlh": "z3Vd",
        "./tlh.js": "z3Vd",
        "./tr": "DoHr",
        "./tr.js": "DoHr",
        "./tzl": "z1FC",
        "./tzl.js": "z1FC",
        "./tzm": "wQk9",
        "./tzm-latn": "tT3J",
        "./tzm-latn.js": "tT3J",
        "./tzm.js": "wQk9",
        "./ug-cn": "YRex",
        "./ug-cn.js": "YRex",
        "./uk": "raLr",
        "./uk.js": "raLr",
        "./ur": "UpQW",
        "./ur.js": "UpQW",
        "./uz": "Loxo",
        "./uz-latn": "AQ68",
        "./uz-latn.js": "AQ68",
        "./uz.js": "Loxo",
        "./vi": "KSF8",
        "./vi.js": "KSF8",
        "./x-pseudo": "/X5v",
        "./x-pseudo.js": "/X5v",
        "./yo": "fzPg",
        "./yo.js": "fzPg",
        "./zh-cn": "XDpg",
        "./zh-cn.js": "XDpg",
        "./zh-hk": "SatO",
        "./zh-hk.js": "SatO",
        "./zh-mo": "OmwH",
        "./zh-mo.js": "OmwH",
        "./zh-tw": "kOpN",
        "./zh-tw.js": "kOpN"
      };

      function webpackContext(req) {
        var id = webpackContextResolve(req);
        return __webpack_require__(id);
      }

      function webpackContextResolve(req) {
        if (!__webpack_require__.o(map, req)) {
          var e = new Error("Cannot find module '" + req + "'");
          e.code = 'MODULE_NOT_FOUND';
          throw e;
        }

        return map[req];
      }

      webpackContext.keys = function webpackContextKeys() {
        return Object.keys(map);
      };

      webpackContext.resolve = webpackContextResolve;
      module.exports = webpackContext;
      webpackContext.id = "RnhZ";
      /***/
    },

    /***/
    "S6ln":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/hr.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function S6ln(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Croatian [hr]
      //! author : Bojan Marković : https://github.com/bmarkovic
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function translate(number, withoutSuffix, key) {
          var result = number + ' ';

          switch (key) {
            case 'ss':
              if (number === 1) {
                result += 'sekunda';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'sekunde';
              } else {
                result += 'sekundi';
              }

              return result;

            case 'm':
              return withoutSuffix ? 'jedna minuta' : 'jedne minute';

            case 'mm':
              if (number === 1) {
                result += 'minuta';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
              } else {
                result += 'minuta';
              }

              return result;

            case 'h':
              return withoutSuffix ? 'jedan sat' : 'jednog sata';

            case 'hh':
              if (number === 1) {
                result += 'sat';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
              } else {
                result += 'sati';
              }

              return result;

            case 'dd':
              if (number === 1) {
                result += 'dan';
              } else {
                result += 'dana';
              }

              return result;

            case 'MM':
              if (number === 1) {
                result += 'mjesec';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
              } else {
                result += 'mjeseci';
              }

              return result;

            case 'yy':
              if (number === 1) {
                result += 'godina';
              } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
              } else {
                result += 'godina';
              }

              return result;
          }
        }

        var hr = moment.defineLocale('hr', {
          months: {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
          },
          monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
          monthsParseExact: true,
          weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
          weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM YYYY',
            LLL: 'Do MMMM YYYY H:mm',
            LLLL: 'dddd, Do MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[u] [nedjelju] [u] LT';

                case 3:
                  return '[u] [srijedu] [u] LT';

                case 6:
                  return '[u] [subotu] [u] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                  return '[prošlu] [nedjelju] [u] LT';

                case 3:
                  return '[prošlu] [srijedu] [u] LT';

                case 6:
                  return '[prošle] [subote] [u] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[prošli] dddd [u] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return hr;
      });
      /***/

    },

    /***/
    "SFxW":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/az.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function SFxW(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Azerbaijani [az]
      //! author : topchiyev : https://github.com/topchiyev
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var suffixes = {
          1: '-inci',
          5: '-inci',
          8: '-inci',
          70: '-inci',
          80: '-inci',
          2: '-nci',
          7: '-nci',
          20: '-nci',
          50: '-nci',
          3: '-üncü',
          4: '-üncü',
          100: '-üncü',
          6: '-ncı',
          9: '-uncu',
          10: '-uncu',
          30: '-uncu',
          60: '-ıncı',
          90: '-ıncı'
        };
        var az = moment.defineLocale('az', {
          months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
          monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
          weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
          weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
          weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[sabah saat] LT',
            nextWeek: '[gələn həftə] dddd [saat] LT',
            lastDay: '[dünən] LT',
            lastWeek: '[keçən həftə] dddd [saat] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s sonra',
            past: '%s əvvəl',
            s: 'bir neçə saniyə',
            ss: '%d saniyə',
            m: 'bir dəqiqə',
            mm: '%d dəqiqə',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir il',
            yy: '%d il'
          },
          meridiemParse: /gecə|səhər|gündüz|axşam/,
          isPM: function isPM(input) {
            return /^(gündüz|axşam)$/.test(input);
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'gecə';
            } else if (hour < 12) {
              return 'səhər';
            } else if (hour < 17) {
              return 'gündüz';
            } else {
              return 'axşam';
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
          ordinal: function ordinal(number) {
            if (number === 0) {
              // special case for zero
              return number + '-ıncı';
            }

            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return az;
      });
      /***/

    },

    /***/
    "SatO":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/zh-hk.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function SatO(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (Hong Kong) [zh-hk]
      //! author : Ben : https://github.com/ben-lin
      //! author : Chris Lam : https://github.com/hehachris
      //! author : Konstantin : https://github.com/skfd
      //! author : Anthony : https://github.com/anthonylau
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var zhHk = moment.defineLocale('zh-hk', {
          months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
          weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
          weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
          weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm'
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
              return hour;
            } else if (meridiem === '中午') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;

            if (hm < 600) {
              return '凌晨';
            } else if (hm < 900) {
              return '早上';
            } else if (hm < 1200) {
              return '上午';
            } else if (hm === 1200) {
              return '中午';
            } else if (hm < 1800) {
              return '下午';
            } else {
              return '晚上';
            }
          },
          calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: '[下]ddddLT',
            lastDay: '[昨天]LT',
            lastWeek: '[上]ddddLT',
            sameElse: 'L'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';

              case 'M':
                return number + '月';

              case 'w':
              case 'W':
                return number + '週';

              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年'
          }
        });
        return zhHk;
      });
      /***/

    },

    /***/
    "Sp4O":
    /*!*************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/attendance-admin/attendance-admin.component.ts ***!
      \*************************************************************************************************/

    /*! exports provided: AttendanceAdminComponent */

    /***/
    function Sp4O(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AttendanceAdminComponent", function () {
        return AttendanceAdminComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_attendance_admin_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./attendance-admin.component.html */
      "YmPF");
      /* harmony import */


      var _attendance_admin_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./attendance-admin.component.css */
      "z9Bv");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");

      var AttendanceAdminComponent = /*#__PURE__*/function () {
        function AttendanceAdminComponent() {
          _classCallCheck(this, AttendanceAdminComponent);
        }

        _createClass(AttendanceAdminComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {}
        }]);

        return AttendanceAdminComponent;
      }();

      AttendanceAdminComponent.ctorParameters = function () {
        return [];
      };

      AttendanceAdminComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: 'app-attendance-admin',
        template: _raw_loader_attendance_admin_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_attendance_admin_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [])], AttendanceAdminComponent);
      /***/
    },

    /***/
    "TPnH":
    /*!******************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/leaves-admin/leaves-admin.component.css ***!
      \******************************************************************************************/

    /*! exports provided: default */

    /***/
    function TPnH(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxlYXZlcy1hZG1pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtBQUNkIiwiZmlsZSI6ImxlYXZlcy1hZG1pbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xyXG5cdHBhZGRpbmc6IDMwcHg7XHJcbn0iXX0= */";
      /***/
    },

    /***/
    "TPpV":
    /*!**********************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/attendance-row-admin/attendance-row-admin.component.css ***!
      \**********************************************************************************************************/

    /*! exports provided: default */

    /***/
    function TPpV(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0dGVuZGFuY2Utcm93LWFkbWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2QiLCJmaWxlIjoiYXR0ZW5kYW5jZS1yb3ctYWRtaW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59Il19 */";
      /***/
    },

    /***/
    "UDhR":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/id.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function UDhR(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Indonesian [id]
      //! author : Mohammad Satrio Utomo : https://github.com/tyok
      //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var id = moment.defineLocale('id', {
          months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
          weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
          weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
          weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
          },
          meridiemParse: /pagi|siang|sore|malam/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'pagi') {
              return hour;
            } else if (meridiem === 'siang') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
              return 'pagi';
            } else if (hours < 15) {
              return 'siang';
            } else if (hours < 19) {
              return 'sore';
            } else {
              return 'malam';
            }
          },
          calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Besok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kemarin pukul] LT',
            lastWeek: 'dddd [lalu pukul] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'dalam %s',
            past: '%s yang lalu',
            s: 'beberapa detik',
            ss: '%d detik',
            m: 'semenit',
            mm: '%d menit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun'
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return id;
      });
      /***/

    },

    /***/
    "USCx":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ga.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function USCx(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Irish or Irish Gaelic [ga]
      //! author : André Silva : https://github.com/askpt
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var months = ['Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Meitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deireadh Fómhair', 'Samhain', 'Nollaig'],
            monthsShort = ['Ean', 'Feabh', 'Márt', 'Aib', 'Beal', 'Meith', 'Iúil', 'Lún', 'M.F.', 'D.F.', 'Samh', 'Noll'],
            weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Sathairn'],
            weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],
            weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];
        var ga = moment.defineLocale('ga', {
          months: months,
          monthsShort: monthsShort,
          monthsParseExact: true,
          weekdays: weekdays,
          weekdaysShort: weekdaysShort,
          weekdaysMin: weekdaysMin,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné ag] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d míonna',
            y: 'bliain',
            yy: '%d bliain'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
          ordinal: function ordinal(number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return ga;
      });
      /***/

    },

    /***/
    "UpQW":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ur.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function UpQW(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Urdu [ur]
      //! author : Sawood Alam : https://github.com/ibnesayeed
      //! author : Zack : https://github.com/ZackVision
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var months = ['جنوری', 'فروری', 'مارچ', 'اپریل', 'مئی', 'جون', 'جولائی', 'اگست', 'ستمبر', 'اکتوبر', 'نومبر', 'دسمبر'],
            days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];
        var ur = moment.defineLocale('ur', {
          months: months,
          monthsShort: months,
          weekdays: days,
          weekdaysShort: days,
          weekdaysMin: days,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm'
          },
          meridiemParse: /صبح|شام/,
          isPM: function isPM(input) {
            return 'شام' === input;
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'صبح';
            }

            return 'شام';
          },
          calendar: {
            sameDay: '[آج بوقت] LT',
            nextDay: '[کل بوقت] LT',
            nextWeek: 'dddd [بوقت] LT',
            lastDay: '[گذشتہ روز بوقت] LT',
            lastWeek: '[گذشتہ] dddd [بوقت] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s بعد',
            past: '%s قبل',
            s: 'چند سیکنڈ',
            ss: '%d سیکنڈ',
            m: 'ایک منٹ',
            mm: '%d منٹ',
            h: 'ایک گھنٹہ',
            hh: '%d گھنٹے',
            d: 'ایک دن',
            dd: '%d دن',
            M: 'ایک ماہ',
            MM: '%d ماہ',
            y: 'ایک سال',
            yy: '%d سال'
          },
          preparse: function preparse(string) {
            return string.replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/,/g, '،');
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return ur;
      });
      /***/

    },

    /***/
    "Ur1D":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ss.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Ur1D(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : siSwati [ss]
      //! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ss = moment.defineLocale('ss', {
          months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
          monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
          weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
          weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
          weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
          },
          calendar: {
            sameDay: '[Namuhla nga] LT',
            nextDay: '[Kusasa nga] LT',
            nextWeek: 'dddd [nga] LT',
            lastDay: '[Itolo nga] LT',
            lastWeek: 'dddd [leliphelile] [nga] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'nga %s',
            past: 'wenteka nga %s',
            s: 'emizuzwana lomcane',
            ss: '%d mzuzwana',
            m: 'umzuzu',
            mm: '%d emizuzu',
            h: 'lihora',
            hh: '%d emahora',
            d: 'lilanga',
            dd: '%d emalanga',
            M: 'inyanga',
            MM: '%d tinyanga',
            y: 'umnyaka',
            yy: '%d iminyaka'
          },
          meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
              return 'ekuseni';
            } else if (hours < 15) {
              return 'emini';
            } else if (hours < 19) {
              return 'entsambama';
            } else {
              return 'ebusuku';
            }
          },
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'ekuseni') {
              return hour;
            } else if (meridiem === 'emini') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
              if (hour === 0) {
                return 0;
              }

              return hour + 12;
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}/,
          ordinal: '%d',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return ss;
      });
      /***/

    },

    /***/
    "V2x9":
    /*!*******************************************!*\
      !*** ./node_modules/moment/locale/tet.js ***!
      \*******************************************/

    /*! no static exports found */

    /***/
    function V2x9(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Tetun Dili (East Timor) [tet]
      //! author : Joshua Brooks : https://github.com/joshbrooks
      //! author : Onorio De J. Afonso : https://github.com/marobo
      //! author : Sonia Simoes : https://github.com/soniasimoes
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var tet = moment.defineLocale('tet', {
          months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
          monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
          weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
          weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
          weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'iha %s',
            past: '%s liuba',
            s: 'segundu balun',
            ss: 'segundu %d',
            m: 'minutu ida',
            mm: 'minutu %d',
            h: 'oras ida',
            hh: 'oras %d',
            d: 'loron ida',
            dd: 'loron %d',
            M: 'fulan ida',
            MM: 'fulan %d',
            y: 'tinan ida',
            yy: 'tinan %d'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return tet;
      });
      /***/

    },

    /***/
    "Vclq":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/es-us.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function Vclq(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish (United States) [es-us]
      //! author : bustta : https://github.com/bustta
      //! author : chrisrodz : https://github.com/chrisrodz
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
            _monthsShort2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
            monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

        var esUs = moment.defineLocale('es-us', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
          monthsShort: function monthsShort(m, format) {
            if (!m) {
              return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
              return _monthsShort2[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'MM/DD/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'
          },
          calendar: {
            sameDay: function sameDay() {
              return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function nextDay() {
              return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function nextWeek() {
              return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function lastDay() {
              return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function lastWeek() {
              return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return esUs;
      });
      /***/

    },

    /***/
    "WYrj":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/dv.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function WYrj(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Maldivian [dv]
      //! author : Jawish Hameed : https://github.com/jawish
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var months = ['ޖެނުއަރީ', 'ފެބްރުއަރީ', 'މާރިޗު', 'އޭޕްރީލު', 'މޭ', 'ޖޫން', 'ޖުލައި', 'އޯގަސްޓު', 'ސެޕްޓެމްބަރު', 'އޮކްޓޯބަރު', 'ނޮވެމްބަރު', 'ޑިސެމްބަރު'],
            weekdays = ['އާދިއްތަ', 'ހޯމަ', 'އަންގާރަ', 'ބުދަ', 'ބުރާސްފަތި', 'ހުކުރު', 'ހޮނިހިރު'];
        var dv = moment.defineLocale('dv', {
          months: months,
          monthsShort: months,
          weekdays: weekdays,
          weekdaysShort: weekdays,
          weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/M/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          meridiemParse: /މކ|މފ/,
          isPM: function isPM(input) {
            return 'މފ' === input;
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'މކ';
            } else {
              return 'މފ';
            }
          },
          calendar: {
            sameDay: '[މިއަދު] LT',
            nextDay: '[މާދަމާ] LT',
            nextWeek: 'dddd LT',
            lastDay: '[އިއްޔެ] LT',
            lastWeek: '[ފާއިތުވި] dddd LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'ތެރޭގައި %s',
            past: 'ކުރިން %s',
            s: 'ސިކުންތުކޮޅެއް',
            ss: 'd% ސިކުންތު',
            m: 'މިނިޓެއް',
            mm: 'މިނިޓު %d',
            h: 'ގަޑިއިރެއް',
            hh: 'ގަޑިއިރު %d',
            d: 'ދުވަހެއް',
            dd: 'ދުވަސް %d',
            M: 'މަހެއް',
            MM: 'މަސް %d',
            y: 'އަހަރެއް',
            yy: 'އަހަރު %d'
          },
          preparse: function preparse(string) {
            return string.replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/,/g, '،');
          },
          week: {
            dow: 7,
            // Sunday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return dv;
      });
      /***/

    },

    /***/
    "Wddu":
    /*!*************************************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/employee-page-content/employee-page-content.component.ts ***!
      \*************************************************************************************************************************/

    /*! exports provided: EmployeePageContentComponent */

    /***/
    function Wddu(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EmployeePageContentComponent", function () {
        return EmployeePageContentComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_employee_page_content_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./employee-page-content.component.html */
      "ADh3");
      /* harmony import */


      var _employee_page_content_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./employee-page-content.component.css */
      "+tSY");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var _services_employee_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../../../services/employee.service */
      "AuF9");
      /* harmony import */


      var ngx_spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ngx-spinner */
      "JqCM");
      /* harmony import */


      var src_environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! src/environments/environment */
      "AytR");

      var EmployeePageContentComponent = /*#__PURE__*/function () {
        function EmployeePageContentComponent(srvModuleService, toastr, formBuilder, employeeService, spinnerService) {
          _classCallCheck(this, EmployeePageContentComponent);

          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.formBuilder = formBuilder;
          this.employeeService = employeeService;
          this.spinnerService = spinnerService;
          this.url = "employeelist";
          this.baseUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].baseUrl;
          this.pipe = new _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"]("en-US");
          this.rows = [];
          this.srch = []; //pagination config

          this.pageNum = 1;
          this.pageSize = 10;
          this.pageSizes = [3, 5, 10, 25, 50, 100, 200, 500, 1000];
          this.totalItem = 50;
          this.pngDiplayLastSeq = 10;
          this.loginCode = '';
          this.displayName = '';
          this.designationId = '';
          this.pngConfig = {
            pageNum: 1,
            pageSize: 5,
            totalItem: 50,
            loginCode: ''
          };
        }

        _createClass(EmployeePageContentComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.myGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"]({
              pageSize: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]()
            });
            this.myGroup.get('pageSize').setValue(this.pageSize);
            this.loadAllEmployee();
            this.getDesignations();
          }
        }, {
          key: "getDesignations",
          value: function getDesignations() {
            var _this28 = this;

            this.employeeService.getDesignations().subscribe(function (data) {
              _this28.designations = data;
            }, function (error) {
              _this28.toastr.error(error.error.message);
            });
          }
        }, {
          key: "loadAllEmployee",
          value: function loadAllEmployee() {
            var _this29 = this;

            // let apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var apiURL = this.baseUrl + "/hrCrEmp/empListData";
            var queryParams = {};
            var params = this.getUserQueryParams(this.pageNum, this.pageSize);
            queryParams = params;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this29.empList = response.objectList;
              _this29.totalItem = response.totalItems;

              _this29.setDisplayLastSequence();

              _this29.spinnerService.hide();
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "getUserQueryParams",
          value: function getUserQueryParams(page, pageSize) {
            var params = {};

            if (page) {
              params["pageNum"] = page - 0;
            }

            if (pageSize) {
              params["pageSize"] = pageSize;
            }

            return params;
          }
        }, {
          key: "setDisplayLastSequence",
          value: function setDisplayLastSequence() {
            this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;

            if (this.empList.length < this.pageSize) {
              this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;
            }

            if (this.totalItem < this.pngDiplayLastSeq) {
              this.pngDiplayLastSeq = this.totalItem;
            }
          }
        }, {
          key: "handlePageChange",
          value: function handlePageChange(event) {
            this.pageNum = event;
            this.loadAllEmployee();
          }
        }, {
          key: "handlePageSizeChange",
          value: function handlePageSizeChange(event) {
            this.pageSize = event.target.value;
            this.pageNum = 1;
            this.loadAllEmployee();
          } // Get Employee Real Api call 
          // loadEmp() {
          //   this.spinnerService.show();
          //   this.employeeService.getAllEmployee().subscribe((data:any) =>{
          //     this.empList=data.objectList;
          //     this.setDisplayLastSequence();
          //     this.baseUrl=baseUrl;
          //     this.spinnerService.hide();
          //   });
          // }
          // delete api call

        }, {
          key: "deleteEmployee",
          value: function deleteEmployee() {
            var _this30 = this;

            this.srvModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              // this.loadEmp();
              $("#delete_employee").modal("hide");

              _this30.toastr.success("Employee deleted sucessfully..!", "Success");
            });
          } //delete hrCrEmp

        }, {
          key: "deleteHrCrEmp",
          value: function deleteHrCrEmp() {} //search by name

        }, {
          key: "searchId",
          value: function searchId(val) {
            var _this31 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.loginCode = val;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this31.empList = response.objectList;
              _this31.totalItem = response.totalItems;

              _this31.setDisplayLastSequence();

              _this31.spinnerService.hide();
            }, function (error) {
              console.log(error);
            });
          } //search by name

        }, {
          key: "searchName",
          value: function searchName(val) {
            var _this32 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.displayName = val;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this32.empList = response.objectList;
              _this32.totalItem = response.totalItems;

              _this32.setDisplayLastSequence();

              _this32.spinnerService.hide();
            }, function (error) {
              console.log(error);
            });
          } //search by designation

        }, {
          key: "searchByDesignation",
          value: function searchByDesignation(val) {
            var _this33 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.designationId = val;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this33.empList = response.objectList;
              _this33.totalItem = response.totalItems;

              _this33.setDisplayLastSequence();

              _this33.spinnerService.hide();
            }, function (error) {
              console.log(error);
            });
          } //getting the status value

        }, {
          key: "getStatus",
          value: function getStatus(data) {
            this.statusValue = data;
          }
        }]);

        return EmployeePageContentComponent;
      }();

      EmployeePageContentComponent.ctorParameters = function () {
        return [{
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_4__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"]
        }, {
          type: ngx_spinner__WEBPACK_IMPORTED_MODULE_9__["NgxSpinnerService"]
        }];
      };

      EmployeePageContentComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-employee-page-content",
        template: _raw_loader_employee_page_content_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_employee_page_content_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_4__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"], ngx_spinner__WEBPACK_IMPORTED_MODULE_9__["NgxSpinnerService"]])], EmployeePageContentComponent);
      /***/
    },

    /***/
    "Wv91":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/tk.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Wv91(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Turkmen [tk]
      //! author : Atamyrat Abdyrahmanov : https://github.com/atamyratabdy
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var suffixes = {
          1: "'inji",
          5: "'inji",
          8: "'inji",
          70: "'inji",
          80: "'inji",
          2: "'nji",
          7: "'nji",
          20: "'nji",
          50: "'nji",
          3: "'ünji",
          4: "'ünji",
          100: "'ünji",
          6: "'njy",
          9: "'unjy",
          10: "'unjy",
          30: "'unjy",
          60: "'ynjy",
          90: "'ynjy"
        };
        var tk = moment.defineLocale('tk', {
          months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split('_'),
          monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),
          weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split('_'),
          weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
          weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[bugün sagat] LT',
            nextDay: '[ertir sagat] LT',
            nextWeek: '[indiki] dddd [sagat] LT',
            lastDay: '[düýn] LT',
            lastWeek: '[geçen] dddd [sagat] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s soň',
            past: '%s öň',
            s: 'birnäçe sekunt',
            m: 'bir minut',
            mm: '%d minut',
            h: 'bir sagat',
            hh: '%d sagat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir aý',
            MM: '%d aý',
            y: 'bir ýyl',
            yy: '%d ýyl'
          },
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'Do':
              case 'DD':
                return number;

              default:
                if (number === 0) {
                  // special case for zero
                  return number + "'unjy";
                }

                var a = number % 10,
                    b = number % 100 - a,
                    c = number >= 100 ? 100 : null;
                return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return tk;
      });
      /***/

    },

    /***/
    "WxRl":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/hu.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function WxRl(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hungarian [hu]
      //! author : Adam Brunner : https://github.com/adambrunner
      //! author : Peter Viszt  : https://github.com/passatgt
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');

        function translate(number, withoutSuffix, key, isFuture) {
          var num = number;

          switch (key) {
            case 's':
              return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';

            case 'ss':
              return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';

            case 'm':
              return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');

            case 'mm':
              return num + (isFuture || withoutSuffix ? ' perc' : ' perce');

            case 'h':
              return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');

            case 'hh':
              return num + (isFuture || withoutSuffix ? ' óra' : ' órája');

            case 'd':
              return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');

            case 'dd':
              return num + (isFuture || withoutSuffix ? ' nap' : ' napja');

            case 'M':
              return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');

            case 'MM':
              return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');

            case 'y':
              return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');

            case 'yy':
              return num + (isFuture || withoutSuffix ? ' év' : ' éve');
          }

          return '';
        }

        function week(isFuture) {
          return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
        }

        var hu = moment.defineLocale('hu', {
          months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
          monthsShort: 'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
          weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
          weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY. MMMM D.',
            LLL: 'YYYY. MMMM D. H:mm',
            LLLL: 'YYYY. MMMM D., dddd H:mm'
          },
          meridiemParse: /de|du/i,
          isPM: function isPM(input) {
            return input.charAt(1).toLowerCase() === 'u';
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 12) {
              return isLower === true ? 'de' : 'DE';
            } else {
              return isLower === true ? 'du' : 'DU';
            }
          },
          calendar: {
            sameDay: '[ma] LT[-kor]',
            nextDay: '[holnap] LT[-kor]',
            nextWeek: function nextWeek() {
              return week.call(this, true);
            },
            lastDay: '[tegnap] LT[-kor]',
            lastWeek: function lastWeek() {
              return week.call(this, false);
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s múlva',
            past: '%s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return hu;
      });
      /***/

    },

    /***/
    "X709":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/sv.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function X709(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Swedish [sv]
      //! author : Jens Alm : https://github.com/ulmus
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var sv = moment.defineLocale('sv', {
          months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
          monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
          weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
          weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
          weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd D MMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'om %s',
            past: 'för %s sedan',
            s: 'några sekunder',
            ss: '%d sekunder',
            m: 'en minut',
            mm: '%d minuter',
            h: 'en timme',
            hh: '%d timmar',
            d: 'en dag',
            dd: '%d dagar',
            M: 'en månad',
            MM: '%d månader',
            y: 'ett år',
            yy: '%d år'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? ':e' : b === 1 ? ':a' : b === 2 ? ':a' : b === 3 ? ':e' : ':e';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return sv;
      });
      /***/

    },

    /***/
    "XDpg":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/zh-cn.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function XDpg(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (China) [zh-cn]
      //! author : suupic : https://github.com/suupic
      //! author : Zeno Zeng : https://github.com/zenozeng
      //! author : uu109 : https://github.com/uu109
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var zhCn = moment.defineLocale('zh-cn', {
          months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
          weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
          weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
          weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日Ah点mm分',
            LLLL: 'YYYY年M月D日ddddAh点mm分',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm'
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
              return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
            } else {
              // '中午'
              return hour >= 11 ? hour : hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;

            if (hm < 600) {
              return '凌晨';
            } else if (hm < 900) {
              return '早上';
            } else if (hm < 1130) {
              return '上午';
            } else if (hm < 1230) {
              return '中午';
            } else if (hm < 1800) {
              return '下午';
            } else {
              return '晚上';
            }
          },
          calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: function nextWeek(now) {
              if (now.week() !== this.week()) {
                return '[下]dddLT';
              } else {
                return '[本]dddLT';
              }
            },
            lastDay: '[昨天]LT',
            lastWeek: function lastWeek(now) {
              if (this.week() !== now.week()) {
                return '[上]dddLT';
              } else {
                return '[本]dddLT';
              }
            },
            sameElse: 'L'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';

              case 'M':
                return number + '月';

              case 'w':
              case 'W':
                return number + '周';

              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s后',
            past: '%s前',
            s: '几秒',
            ss: '%d 秒',
            m: '1 分钟',
            mm: '%d 分钟',
            h: '1 小时',
            hh: '%d 小时',
            d: '1 天',
            dd: '%d 天',
            w: '1 周',
            ww: '%d 周',
            M: '1 个月',
            MM: '%d 个月',
            y: '1 年',
            yy: '%d 年'
          },
          week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return zhCn;
      });
      /***/

    },

    /***/
    "XLvN":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/te.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function XLvN(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Telugu [te]
      //! author : Krishna Chaitanya Thota : https://github.com/kcthota
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var te = moment.defineLocale('te', {
          months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
          monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
          monthsParseExact: true,
          weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
          weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
          weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
          longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm'
          },
          calendar: {
            sameDay: '[నేడు] LT',
            nextDay: '[రేపు] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[నిన్న] LT',
            lastWeek: '[గత] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s లో',
            past: '%s క్రితం',
            s: 'కొన్ని క్షణాలు',
            ss: '%d సెకన్లు',
            m: 'ఒక నిమిషం',
            mm: '%d నిమిషాలు',
            h: 'ఒక గంట',
            hh: '%d గంటలు',
            d: 'ఒక రోజు',
            dd: '%d రోజులు',
            M: 'ఒక నెల',
            MM: '%d నెలలు',
            y: 'ఒక సంవత్సరం',
            yy: '%d సంవత్సరాలు'
          },
          dayOfMonthOrdinalParse: /\d{1,2}వ/,
          ordinal: '%dవ',
          meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'రాత్రి') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
              return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
              return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'రాత్రి';
            } else if (hour < 10) {
              return 'ఉదయం';
            } else if (hour < 17) {
              return 'మధ్యాహ్నం';
            } else if (hour < 20) {
              return 'సాయంత్రం';
            } else {
              return 'రాత్రి';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return te;
      });
      /***/

    },

    /***/
    "Xf6b":
    /*!****************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/departments/departments.component.css ***!
      \****************************************************************************************/

    /*! exports provided: default */

    /***/
    function Xf6b(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlcGFydG1lbnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2QiLCJmaWxlIjoiZGVwYXJ0bWVudHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59Il19 */";
      /***/
    },

    /***/
    "YRex":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ug-cn.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function YRex(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Uyghur (China) [ug-cn]
      //! author: boyaq : https://github.com/boyaq
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var ugCn = moment.defineLocale('ug-cn', {
          months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'),
          monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split('_'),
          weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split('_'),
          weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
          weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
          },
          meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'يېرىم كېچە' || meridiem === 'سەھەر' || meridiem === 'چۈشتىن بۇرۇن') {
              return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
              return hour + 12;
            } else {
              return hour >= 11 ? hour : hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;

            if (hm < 600) {
              return 'يېرىم كېچە';
            } else if (hm < 900) {
              return 'سەھەر';
            } else if (hm < 1130) {
              return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
              return 'چۈش';
            } else if (hm < 1800) {
              return 'چۈشتىن كېيىن';
            } else {
              return 'كەچ';
            }
          },
          calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '-كۈنى';

              case 'w':
              case 'W':
                return number + '-ھەپتە';

              default:
                return number;
            }
          },
          preparse: function preparse(string) {
            return string.replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/,/g, '،');
          },
          week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.

          }
        });
        return ugCn;
      });
      /***/

    },

    /***/
    "YmPF":
    /*!*****************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/attendance-admin/attendance-admin.component.html ***!
      \*****************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function YmPF(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <h3 class=\"page-title\">Attendance</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Attendance</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    <!-- Search Filter -->\r\n    <div class=\"row filter-row\">\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"form-group form-focus\">\r\n                <input type=\"text\" class=\"form-control floating\">\r\n                <label class=\"focus-label\">Employee Name</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"form-group form-focus select-focus\">\r\n                <select class=\"select floating form-control\">\r\n                    <option>-</option>\r\n                    <option>Jan</option>\r\n                    <option>Feb</option>\r\n                    <option>Mar</option>\r\n                    <option>Apr</option>\r\n                    <option>May</option>\r\n                    <option>Jun</option>\r\n                    <option>Jul</option>\r\n                    <option>Aug</option>\r\n                    <option>Sep</option>\r\n                    <option>Oct</option>\r\n                    <option>Nov</option>\r\n                    <option>Dec</option>\r\n                </select>\r\n                <label class=\"focus-label\">Select Month</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"form-group form-focus select-focus\">\r\n                <select class=\"select floating form-control\">\r\n                    <option>-</option>\r\n                    <option>2019</option>\r\n                    <option>2018</option>\r\n                    <option>2017</option>\r\n                    <option>2016</option>\r\n                    <option>2015</option>\r\n                </select>\r\n                <label class=\"focus-label\">Select Year</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-6 col-md-3\">\r\n            <a  class=\"btn btn-success btn-block\"> Search </a>\r\n        </div>\r\n    </div>\r\n    <!-- /Search Filter -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-striped custom-table table-nowrap mb-0\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Employee</th>\r\n                            <th>1</th>\r\n                            <th>2</th>\r\n                            <th>3</th>\r\n                            <th>4</th>\r\n                            <th>5</th>\r\n                            <th>6</th>\r\n                            <th>7</th>\r\n                            <th>8</th>\r\n                            <th>9</th>\r\n                            <th>10</th>\r\n                            <th>11</th>\r\n                            <th>12</th>\r\n                            <th>13</th>\r\n                            <th>14</th>\r\n                            <th>15</th>\r\n                            <th>16</th>\r\n                            <th>17</th>\r\n                            <th>18</th>\r\n                            <th>19</th>\r\n                            <th>20</th>\r\n                            <th>22</th>\r\n                            <th>23</th>\r\n                            <th>24</th>\r\n                            <th>25</th>\r\n                            <th>26</th>\r\n                            <th>27</th>\r\n                            <th>28</th>\r\n                            <th>29</th>\r\n                            <th>30</th>\r\n                            <th>31</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-9.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">John Doe</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td>\r\n                                <div class=\"half-day\">\r\n                                    <span class=\"first-off\"><a  data-toggle=\"modal\"\r\n                                            data-target=\"#attendance_info\"><i\r\n                                                class=\"fa fa-check text-success\"></i></a></span>\r\n                                    <span class=\"first-off\"><i class=\"fa fa-close text-danger\"></i></span>\r\n                                </div>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td>\r\n                                <div class=\"half-day\">\r\n                                    <span class=\"first-off\"><i class=\"fa fa-close text-danger\"></i></span>\r\n                                    <span class=\"first-off\"><a  data-toggle=\"modal\"\r\n                                            data-target=\"#attendance_info\"><i\r\n                                                class=\"fa fa-check text-success\"></i></a></span>\r\n                                </div>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-9.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Richard Miles</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-10.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">John Smith</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-5.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Mike Litorus</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-11.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Wilmer Deluna</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-12.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Jeffrey Warden</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-13.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Bernardo Galaviz</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-1.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Lesley Grauer</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-16.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Jeffery Lalor</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a class=\"avatar avatar-xs\" routerLink=\"/employees/employeeprofile\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-4.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">Loren Gatlin</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><i class=\"fa fa-close text-danger\"></i> </td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                            <td><a  data-toggle=\"modal\" data-target=\"#attendance_info\"><i\r\n                                        class=\"fa fa-check text-success\"></i></a></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Attendance Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"attendance_info\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Attendance Info</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"card punch-status\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Timesheet <small class=\"text-muted\">11 Mar 2019</small></h5>\r\n                                <div class=\"punch-det\">\r\n                                    <h6>Punch In at</h6>\r\n                                    <p>Wed, 11th Mar 2019 10.00 AM</p>\r\n                                </div>\r\n                                <div class=\"punch-info\">\r\n                                    <div class=\"punch-hours\">\r\n                                        <span>3.45 hrs</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"punch-det\">\r\n                                    <h6>Punch Out at</h6>\r\n                                    <p>Wed, 20th Feb 2019 9.00 PM</p>\r\n                                </div>\r\n                                <div class=\"statistics\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-6 col-6 text-center\">\r\n                                            <div class=\"stats-box\">\r\n                                                <p>Break</p>\r\n                                                <h6>1.21 hrs</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-6 text-center\">\r\n                                            <div class=\"stats-box\">\r\n                                                <p>Overtime</p>\r\n                                                <h6>3 hrs</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"card recent-activity\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Activity</h5>\r\n                                <ul class=\"res-activity-list\">\r\n                                    <li>\r\n                                        <p class=\"mb-0\">Punch In at</p>\r\n                                        <p class=\"res-activity-time\">\r\n                                            <i class=\"fa fa-clock-o\"></i>\r\n                                            10.00 AM.\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p class=\"mb-0\">Punch Out at</p>\r\n                                        <p class=\"res-activity-time\">\r\n                                            <i class=\"fa fa-clock-o\"></i>\r\n                                            11.00 AM.\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p class=\"mb-0\">Punch In at</p>\r\n                                        <p class=\"res-activity-time\">\r\n                                            <i class=\"fa fa-clock-o\"></i>\r\n                                            11.15 AM.\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p class=\"mb-0\">Punch Out at</p>\r\n                                        <p class=\"res-activity-time\">\r\n                                            <i class=\"fa fa-clock-o\"></i>\r\n                                            1.30 PM.\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p class=\"mb-0\">Punch In at</p>\r\n                                        <p class=\"res-activity-time\">\r\n                                            <i class=\"fa fa-clock-o\"></i>\r\n                                            2.00 PM.\r\n                                        </p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p class=\"mb-0\">Punch Out at</p>\r\n                                        <p class=\"res-activity-time\">\r\n                                            <i class=\"fa fa-clock-o\"></i>\r\n                                            7.30 PM.\r\n                                        </p>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Attendance Modal -->";
      /***/
    },

    /***/
    "YuTi":
    /*!***********************************!*\
      !*** (webpack)/buildin/module.js ***!
      \***********************************/

    /*! no static exports found */

    /***/
    function YuTi(module, exports) {
      module.exports = function (module) {
        if (!module.webpackPolyfill) {
          module.deprecate = function () {};

          module.paths = []; // module.parent = undefined by default

          if (!module.children) module.children = [];
          Object.defineProperty(module, "loaded", {
            enumerable: true,
            get: function get() {
              return module.l;
            }
          });
          Object.defineProperty(module, "id", {
            enumerable: true,
            get: function get() {
              return module.i;
            }
          });
          module.webpackPolyfill = 1;
        }

        return module;
      };
      /***/

    },

    /***/
    "Z4QM":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/sd.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Z4QM(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Sindhi [sd]
      //! author : Narain Sagar : https://github.com/narainsagar
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var months = ['جنوري', 'فيبروري', 'مارچ', 'اپريل', 'مئي', 'جون', 'جولاءِ', 'آگسٽ', 'سيپٽمبر', 'آڪٽوبر', 'نومبر', 'ڊسمبر'],
            days = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];
        var sd = moment.defineLocale('sd', {
          months: months,
          monthsShort: months,
          weekdays: days,
          weekdaysShort: days,
          weekdaysMin: days,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm'
          },
          meridiemParse: /صبح|شام/,
          isPM: function isPM(input) {
            return 'شام' === input;
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'صبح';
            }

            return 'شام';
          },
          calendar: {
            sameDay: '[اڄ] LT',
            nextDay: '[سڀاڻي] LT',
            nextWeek: 'dddd [اڳين هفتي تي] LT',
            lastDay: '[ڪالهه] LT',
            lastWeek: '[گزريل هفتي] dddd [تي] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s پوء',
            past: '%s اڳ',
            s: 'چند سيڪنڊ',
            ss: '%d سيڪنڊ',
            m: 'هڪ منٽ',
            mm: '%d منٽ',
            h: 'هڪ ڪلاڪ',
            hh: '%d ڪلاڪ',
            d: 'هڪ ڏينهن',
            dd: '%d ڏينهن',
            M: 'هڪ مهينو',
            MM: '%d مهينا',
            y: 'هڪ سال',
            yy: '%d سال'
          },
          preparse: function preparse(string) {
            return string.replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/,/g, '،');
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return sd;
      });
      /***/

    },

    /***/
    "ZAMP":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ms-my.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function ZAMP(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Malay [ms-my]
      //! note : DEPRECATED, the correct one is [ms]
      //! author : Weldan Jamili : https://github.com/weldan
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var msMy = moment.defineLocale('ms-my', {
          months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
          monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
          weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
          weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
          weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
          },
          meridiemParse: /pagi|tengahari|petang|malam/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'pagi') {
              return hour;
            } else if (meridiem === 'tengahari') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
              return 'pagi';
            } else if (hours < 15) {
              return 'tengahari';
            } else if (hours < 19) {
              return 'petang';
            } else {
              return 'malam';
            }
          },
          calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return msMy;
      });
      /***/

    },

    /***/
    "ZDnT":
    /*!****************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/designation/designation.component.css ***!
      \****************************************************************************************/

    /*! exports provided: default */

    /***/
    function ZDnT(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2lnbmF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2QiLCJmaWxlIjoiZGVzaWduYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59Il19 */";
      /***/
    },

    /***/
    "ZN0H":
    /*!*************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/overtime/overtime.component.html ***!
      \*************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function ZN0H(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Overtime</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Overtime</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <a class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_overtime\"><i class=\"fa fa-plus\"></i> Add\r\n                    Overtime</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n    <!-- Overtime Statistics -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 col-sm-6 col-lg-6 col-xl-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Overtime Employee</h6>\r\n                <h4>12 <span>this month</span></h4>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-6 col-lg-6 col-xl-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Overtime Hours</h6>\r\n                <h4>118 <span>this month</span></h4>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-6 col-lg-6 col-xl-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Pending Request</h6>\r\n                <h4>23</h4>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-6 col-lg-6 col-xl-3\">\r\n            <div class=\"stats-info\">\r\n                <h6>Rejected</h6>\r\n                <h4>5</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Overtime Statistics -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                    class=\"table table-striped custom-table mb-0 datatable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>OT Date</th>\r\n                            <th class=\"text-center\">OT Hours</th>\r\n                            <th>OT Type</th>\r\n                            <th>Description</th>\r\n                            <th class=\"text-center\">Status</th>\r\n                            <th>Approved by</th>\r\n                            <th class=\"text-right\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of lstOvertime;let i = index\">\r\n                            <td>{{item.id}}</td>\r\n                            <td>\r\n                                <h2 class=\"table-avatar blue-link\">\r\n                                    <a routerLink=\"/employees/employeeprofile\" class=\"avatar\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-{{i+ 1}}.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">{{item.name}}</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td>{{item.otDate | customDate}}</td>\r\n                            <td class=\"text-center\">{{item.otHrs}}</td>\r\n                            <td>{{item.otType}}x</td>\r\n                            <td>{{item.description}}r</td>\r\n                            <td class=\"text-center\">\r\n                                <div class=\"action-label\">\r\n                                    <a class=\"btn btn-white btn-sm btn-rounded\">\r\n                                        <i class=\"fa fa-dot-circle-o text-purple\"></i>{{item.status || statusValue}}\r\n                                    </a>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a routerLink=\"/employees/employeeprofile\" class=\"avatar avatar-xs\"><img\r\n                                            src=\"assets/img/profiles/avatar-{{i+ 1}}.jpg\" alt=\"\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">{{item.approvedBy}}</a>\r\n                                </h2>\r\n                            </td>\r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#edit_overtime\"\r\n                                            (click)=\"edit(item.id)\"><i class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#delete_overtime\"\r\n                                            (click)=\"tempId = item.id\"><i class=\"fa fa-trash-o m-r-5\"></i>\r\n                                            Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Add Overtime Modal -->\r\n<div id=\"add_overtime\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Add Overtime</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" data-target=\"#add_overtime\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"addOvertime()\" [formGroup]=\"addOvertimeForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Select Employee <span class=\"text-danger\">*</span></label>\r\n                        <select class=\"select form-control\"\r\n                            [class.invalid]=\"addOvertimeForm.get('EmployeeName').invalid && addOvertimeForm.get('EmployeeName').touched\"\r\n                            formControlName=\"EmployeeName\">\r\n                            <option>-</option>\r\n                            <option>John Doe</option>\r\n                            <option>Richard Miles</option>\r\n                            <option>John Smith</option>\r\n                        </select>\r\n                        <div\r\n                            *ngIf=\"addOvertimeForm.get('EmployeeName').invalid && addOvertimeForm.get('EmployeeName').touched\">\r\n                            <small\r\n                                *ngIf=\"addOvertimeForm.get('EmployeeName').invalid && addOvertimeForm.get('EmployeeName').touched\"\r\n                                class=\"text-danger\"> *Employee is required</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label>Overtime Date <span class=\"text-danger\">*</span></label>\r\n                        <div class=\"cal-icon\">\r\n                            <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"addOvertimeForm.get('OtDate').invalid && addOvertimeForm.get('OtDate').touched\"\r\n                                formControlName=\"OtDate\">\r\n                            <div *ngIf=\"addOvertimeForm.get('OtDate').invalid && addOvertimeForm.get('OtDate').touched\">\r\n                                <small\r\n                                    *ngIf=\"addOvertimeForm.get('OtDate').invalid && addOvertimeForm.get('OtDate').touched\"\r\n                                    class=\"text-danger\"> *Overtime Date is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Overtime Hours <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"addOvertimeForm.get('OtHrs').invalid && addOvertimeForm.get('OtHrs').touched\"\r\n                            formControlName=\"OtHrs\">\r\n                        <div *ngIf=\"addOvertimeForm.get('OtHrs').invalid && addOvertimeForm.get('OtHrs').touched\">\r\n                            <small *ngIf=\"addOvertimeForm.get('OtHrs').invalid && addOvertimeForm.get('OtHrs').touched\"\r\n                                class=\"text-danger\"> *Overtime Hrs is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Description <span class=\"text-danger\">*</span></label>\r\n                        <textarea rows=\"4\" class=\"form-control\"\r\n                            [class.invalid]=\"addOvertimeForm.get('Description').invalid && addOvertimeForm.get('Description').touched\"\r\n                            formControlName=\"Description\"></textarea>\r\n                        <div\r\n                            *ngIf=\"addOvertimeForm.get('Description').invalid && addOvertimeForm.get('Description').touched\">\r\n                            <small\r\n                                *ngIf=\"addOvertimeForm.get('Description').invalid && addOvertimeForm.get('Description').touched\"\r\n                                class=\"text-danger\"> *Description is required</small>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Add Overtime Modal -->\r\n\r\n<!-- Edit Overtime Modal -->\r\n<div id=\"edit_overtime\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Edit Overtime</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"editOvertime()\" [formGroup]=\"editOvertimeForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Select Employee <span class=\"text-danger\">*</span></label>\r\n                        <select class=\"select form-control\"\r\n                            [class.invalid]=\"editOvertimeForm.get('EmployeeName').invalid && editOvertimeForm.get('EmployeeName').touched\"\r\n                            formControlName=\"EmployeeName\">\r\n                            <option>-</option>\r\n                            <option>John Doe</option>\r\n                            <option>Richard Miles</option>\r\n                            <option>John Smith</option>\r\n                        </select>\r\n                        <div\r\n                            *ngIf=\"editOvertimeForm.get('EmployeeName').invalid && editOvertimeForm.get('EmployeeName').touched\">\r\n                            <small\r\n                                *ngIf=\"editOvertimeForm.get('EmployeeName').invalid && editOvertimeForm.get('EmployeeName').touched\"\r\n                                class=\"text-danger\"> *Description is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Overtime Date <span class=\"text-danger\">*</span></label>\r\n                        <div class=\"cal-icon\">\r\n                            <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"editOvertimeForm.get('OtDate').invalid && editOvertimeForm.get('OtDate').touched\"\r\n                                formControlName=\"OtDate\">\r\n                            <div\r\n                                *ngIf=\"editOvertimeForm.get('OtDate').invalid && editOvertimeForm.get('OtDate').touched\">\r\n                                <small\r\n                                    *ngIf=\"editOvertimeForm.get('OtDate').invalid && editOvertimeForm.get('OtDate').touched\"\r\n                                    class=\"text-danger\"> *Description is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Overtime Hours <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"editOvertimeForm.get('OtHrs').invalid && editOvertimeForm.get('OtHrs').touched\"\r\n                            formControlName=\"OtHrs\">\r\n                        <div *ngIf=\"editOvertimeForm.get('OtHrs').invalid && editOvertimeForm.get('OtHrs').touched\">\r\n                            <small\r\n                                *ngIf=\"editOvertimeForm.get('OtHrs').invalid && editOvertimeForm.get('OtHrs').touched\"\r\n                                class=\"text-danger\"> *Description is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Description <span class=\"text-danger\">*</span></label>\r\n                        <textarea rows=\"4\" class=\"form-control\"\r\n                            [class.invalid]=\"editOvertimeForm.get('Description').invalid && editOvertimeForm.get('Description').touched\"\r\n                            formControlName=\"Description\"></textarea>\r\n                        <div\r\n                            *ngIf=\"editOvertimeForm.get('Description').invalid && editOvertimeForm.get('Description').touched\">\r\n                            <small\r\n                                *ngIf=\"editOvertimeForm.get('Description').invalid && editOvertimeForm.get('Description').touched\"\r\n                                class=\"text-danger\"> *Description is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Edit Overtime Modal -->\r\n\r\n<!-- Delete Overtime Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_overtime\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Overtime</h3>\r\n                    <p>Are you sure want to Cancel this?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a  class=\"btn btn-primary continue-btn\"\r\n                                (click)=\"deleteOvetime()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a  data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Delete Overtime Modal -->";
      /***/
    },

    /***/
    "Zduo":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/eo.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function Zduo(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Esperanto [eo]
      //! author : Colin Dean : https://github.com/colindean
      //! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
      //! comment : miestasmia corrected the translation by colindean
      //! comment : Vivakvo corrected the translation by colindean and miestasmia
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var eo = moment.defineLocale('eo', {
          months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
          monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),
          weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
          weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
          weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: '[la] D[-an de] MMMM, YYYY',
            LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
            LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
            llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm'
          },
          meridiemParse: /[ap]\.t\.m/i,
          isPM: function isPM(input) {
            return input.charAt(0).toLowerCase() === 'p';
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
              return isLower ? 'a.t.m.' : 'A.T.M.';
            }
          },
          calendar: {
            sameDay: '[Hodiaŭ je] LT',
            nextDay: '[Morgaŭ je] LT',
            nextWeek: 'dddd[n je] LT',
            lastDay: '[Hieraŭ je] LT',
            lastWeek: '[pasintan] dddd[n je] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'post %s',
            past: 'antaŭ %s',
            s: 'kelkaj sekundoj',
            ss: '%d sekundoj',
            m: 'unu minuto',
            mm: '%d minutoj',
            h: 'unu horo',
            hh: '%d horoj',
            d: 'unu tago',
            //ne 'diurno', ĉar estas uzita por proksimumo
            dd: '%d tagoj',
            M: 'unu monato',
            MM: '%d monatoj',
            y: 'unu jaro',
            yy: '%d jaroj'
          },
          dayOfMonthOrdinalParse: /\d{1,2}a/,
          ordinal: '%da',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return eo;
      });
      /***/

    },

    /***/
    "ZuW2":
    /*!*********************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/overtime/overtime.component.ts ***!
      \*********************************************************************************/

    /*! exports provided: OvertimeComponent */

    /***/
    function ZuW2(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "OvertimeComponent", function () {
        return OvertimeComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_overtime_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./overtime.component.html */
      "ZN0H");
      /* harmony import */


      var _overtime_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./overtime.component.css */
      "Da81");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var angular_datatables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! angular-datatables */
      "njyG");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");

      var OvertimeComponent = /*#__PURE__*/function () {
        function OvertimeComponent(formBuilder, srvModuleService, toastr) {
          _classCallCheck(this, OvertimeComponent);

          this.formBuilder = formBuilder;
          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.dtOptions = {};
          this.rows = [];
          this.srch = [];
          this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
          this.pipe = new _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"]("en-US");
          this.url = "overtime";
        }

        _createClass(OvertimeComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            // for data table configuration
            this.dtOptions = {
              // ... skipped ...
              pageLength: 10,
              dom: "lrtip"
            };
            this.LoadOvertime();
            this.addOvertimeForm = this.formBuilder.group({
              EmployeeName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              OtDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              OtHrs: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              Description: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
            this.editOvertimeForm = this.formBuilder.group({
              EmployeeName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              OtDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              OtHrs: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]],
              Description: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
          } // Get overtime list  Api Call

        }, {
          key: "LoadOvertime",
          value: function LoadOvertime() {
            var _this34 = this;

            this.srvModuleService.get(this.url).subscribe(function (data) {
              _this34.lstOvertime = data;

              _this34.dtTrigger.next();

              _this34.rows = _this34.lstOvertime;
              _this34.srch = _toConsumableArray(_this34.rows);
            });
          } // Add overtime  Modal Api Call

        }, {
          key: "addOvertime",
          value: function addOvertime() {
            var _this35 = this;

            if (this.addOvertimeForm.valid) {
              var Datetime = this.pipe.transform(this.addOvertimeForm.value.OtDate, "dd-MM-yyyy");
              var obj = {
                name: this.addOvertimeForm.value.EmployeeName,
                otDate: Datetime,
                otHrs: this.addOvertimeForm.value.OtHrs,
                otType: "Normal day OT 1.5x",
                status: "New",
                approvedBy: "Richard Miles",
                description: this.addOvertimeForm.value.Description
              };
              this.srvModuleService.add(obj, this.url).subscribe(function (data) {
                _this35.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.LoadOvertime();
              $("#add_overtime").modal("hide");
              this.addOvertimeForm.reset();
              this.toastr.success("Overtime added sucessfully...!", "Success");
            }
          }
        }, {
          key: "editOvertime",
          value: function editOvertime() {
            var _this36 = this;

            if (this.editOvertimeForm.valid) {
              var Datetime = this.pipe.transform(this.editOvertimeForm.value.OtDate, "dd-MM-yyyy");
              var obj = {
                name: this.editOvertimeForm.value.EmployeeName,
                otDate: Datetime,
                otHrs: this.editOvertimeForm.value.OtHrs,
                otType: "Normal day OT 1.5x",
                status: "New",
                approvedBy: "Richard Miles",
                description: this.editOvertimeForm.value.Description,
                id: this.editId
              };
              this.srvModuleService.update(obj, this.url).subscribe(function (data1) {
                _this36.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.LoadOvertime();
              $("#edit_overtime").modal("hide");
              this.toastr.success("Overtime Updated sucessfully...!", "Success");
            }
          } // To Get The Overtime Edit Id And Set Values To Edit Modal Form

        }, {
          key: "edit",
          value: function edit(value) {
            this.editId = value;
            var index = this.lstOvertime.findIndex(function (item) {
              return item.id === value;
            });
            var toSetValues = this.lstOvertime[index];
            this.editOvertimeForm.setValue({
              EmployeeName: toSetValues.name,
              OtDate: toSetValues.otDate,
              OtHrs: toSetValues.otHrs,
              Description: toSetValues.description
            });
          } // Delete Overtime Modal Api Call

        }, {
          key: "deleteOvetime",
          value: function deleteOvetime() {
            var _this37 = this;

            this.srvModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              _this37.dtElement.dtInstance.then(function (dtInstance) {
                dtInstance.destroy();
              });

              _this37.LoadOvertime();

              $("#delete_overtime").modal("hide");

              _this37.toastr.success("Overtime deleted sucessfully..!", "Success");
            });
          } //getting the status value

        }, {
          key: "getStatus",
          value: function getStatus(data) {
            this.statusValue = data;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // Do not forget to unsubscribe the event
            this.dtTrigger.unsubscribe();
          }
        }]);

        return OvertimeComponent;
      }();

      OvertimeComponent.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]
        }];
      };

      OvertimeComponent.propDecorators = {
        dtElement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"],
          args: [angular_datatables__WEBPACK_IMPORTED_MODULE_6__["DataTableDirective"], {
            "static": false
          }]
        }]
      };
      OvertimeComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-overtime",
        template: _raw_loader_overtime_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_overtime_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])], OvertimeComponent);
      /***/
    },

    /***/
    "aIdf":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/br.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function aIdf(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Breton [br]
      //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function relativeTimeWithMutation(number, withoutSuffix, key) {
          var format = {
            mm: 'munutenn',
            MM: 'miz',
            dd: 'devezh'
          };
          return number + ' ' + mutation(format[key], number);
        }

        function specialMutationForYears(number) {
          switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
              return number + ' bloaz';

            default:
              return number + ' vloaz';
          }
        }

        function lastNumber(number) {
          if (number > 9) {
            return lastNumber(number % 10);
          }

          return number;
        }

        function mutation(text, number) {
          if (number === 2) {
            return softMutation(text);
          }

          return text;
        }

        function softMutation(text) {
          var mutationTable = {
            m: 'v',
            b: 'v',
            d: 'z'
          };

          if (mutationTable[text.charAt(0)] === undefined) {
            return text;
          }

          return mutationTable[text.charAt(0)] + text.substring(1);
        }

        var monthsParse = [/^gen/i, /^c[ʼ\']hwe/i, /^meu/i, /^ebr/i, /^mae/i, /^(mez|eve)/i, /^gou/i, /^eos/i, /^gwe/i, /^her/i, /^du/i, /^ker/i],
            monthsRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
            monthsStrictRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
            monthsShortStrictRegex = /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
            fullWeekdaysParse = [/^sul/i, /^lun/i, /^meurzh/i, /^merc[ʼ\']her/i, /^yaou/i, /^gwener/i, /^sadorn/i],
            shortWeekdaysParse = [/^Sul/i, /^Lun/i, /^Meu/i, /^Mer/i, /^Yao/i, /^Gwe/i, /^Sad/i],
            minWeekdaysParse = [/^Su/i, /^Lu/i, /^Me([^r]|$)/i, /^Mer/i, /^Ya/i, /^Gw/i, /^Sa/i];
        var br = moment.defineLocale('br', {
          months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
          monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
          weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
          weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
          weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
          weekdaysParse: minWeekdaysParse,
          fullWeekdaysParse: fullWeekdaysParse,
          shortWeekdaysParse: shortWeekdaysParse,
          minWeekdaysParse: minWeekdaysParse,
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: monthsStrictRegex,
          monthsShortStrictRegex: monthsShortStrictRegex,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [a viz] MMMM YYYY',
            LLL: 'D [a viz] MMMM YYYY HH:mm',
            LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Hiziv da] LT',
            nextDay: '[Warcʼhoazh da] LT',
            nextWeek: 'dddd [da] LT',
            lastDay: '[Decʼh da] LT',
            lastWeek: 'dddd [paset da] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'a-benn %s',
            past: '%s ʼzo',
            s: 'un nebeud segondennoù',
            ss: '%d eilenn',
            m: 'ur vunutenn',
            mm: relativeTimeWithMutation,
            h: 'un eur',
            hh: '%d eur',
            d: 'un devezh',
            dd: relativeTimeWithMutation,
            M: 'ur miz',
            MM: relativeTimeWithMutation,
            y: 'ur bloaz',
            yy: specialMutationForYears
          },
          dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
          ordinal: function ordinal(number) {
            var output = number === 1 ? 'añ' : 'vet';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          },
          meridiemParse: /a.m.|g.m./,
          // goude merenn | a-raok merenn
          isPM: function isPM(token) {
            return token === 'g.m.';
          },
          meridiem: function meridiem(hour, minute, isLower) {
            return hour < 12 ? 'a.m.' : 'g.m.';
          }
        });
        return br;
      });
      /***/

    },

    /***/
    "aIsn":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/mi.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function aIsn(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Maori [mi]
      //! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var mi = moment.defineLocale('mi', {
          months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
          monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
          monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
          monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
          weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
          weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
          weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
          },
          calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return mi;
      });
      /***/

    },

    /***/
    "aQkU":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/mk.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function aQkU(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Macedonian [mk]
      //! author : Borislav Mickov : https://github.com/B0k0
      //! author : Sashko Todorov : https://github.com/bkyceh
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var mk = moment.defineLocale('mk', {
          months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
          monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
          weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
          weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
          weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[Денес во] LT',
            nextDay: '[Утре во] LT',
            nextWeek: '[Во] dddd [во] LT',
            lastDay: '[Вчера во] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return '[Изминатата] dddd [во] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[Изминатиот] dddd [во] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'за %s',
            past: 'пред %s',
            s: 'неколку секунди',
            ss: '%d секунди',
            m: 'една минута',
            mm: '%d минути',
            h: 'еден час',
            hh: '%d часа',
            d: 'еден ден',
            dd: '%d дена',
            M: 'еден месец',
            MM: '%d месеци',
            y: 'една година',
            yy: '%d години'
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function ordinal(number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;

            if (number === 0) {
              return number + '-ев';
            } else if (last2Digits === 0) {
              return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
              return number + '-ти';
            } else if (lastDigit === 1) {
              return number + '-ви';
            } else if (lastDigit === 2) {
              return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
              return number + '-ми';
            } else {
              return number + '-ти';
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return mk;
      });
      /***/

    },

    /***/
    "aSFI":
    /*!***************************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/employee-profile/employee-profile.component.ts ***!
      \***************************************************************************************************************/

    /*! exports provided: EmployeeProfileComponent */

    /***/
    function aSFI(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EmployeeProfileComponent", function () {
        return EmployeeProfileComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_employee_profile_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./employee-profile.component.html */
      "3kPk");
      /* harmony import */


      var _employee_profile_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./employee-profile.component.css */
      "gdOh");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/router */
      "tyNb");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var src_app_helper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! src/app/_helper */
      "rmPI");
      /* harmony import */


      var _services_employee_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ../../../services/employee.service */
      "AuF9");

      var EmployeeProfileComponent = /*#__PURE__*/function () {
        function EmployeeProfileComponent(toastr, formBuilder, route, employeeService, router) {
          _classCallCheck(this, EmployeeProfileComponent);

          this.toastr = toastr;
          this.formBuilder = formBuilder;
          this.route = route;
          this.employeeService = employeeService;
          this.router = router;
          this.hrCrEmpEduInfo = [];
          this.activeTabCnf = {
            education: "",
            assignment: "",
            payroll: "",
            basic: "active"
          }; // localStorage.setItem('myData', jsonData);

          var activeTabName = localStorage.getItem("activeTabName");

          if (activeTabName == "assignment") {
            this.activeTabCnf.education = "";
            this.activeTabCnf.assignment = "active";
            this.activeTabCnf.payroll = "";
            this.activeTabCnf.basic = "";
          } else if (activeTabName == "payroll") {
            this.activeTabCnf.education = "";
            this.activeTabCnf.basic = "";
            this.activeTabCnf.assignment = "";
            this.activeTabCnf.payroll = "active";
          } else if (activeTabName == "basic") {
            this.activeTabCnf.education = "";
            this.activeTabCnf.assignment = "";
            this.activeTabCnf.payroll = "";
            this.activeTabCnf.basic = "active";
          } else if (activeTabName == "education") {
            this.activeTabCnf.assignment = "";
            this.activeTabCnf.payroll = "";
            this.activeTabCnf.basic = "";
            this.activeTabCnf.education = "active";
          }
        }

        _createClass(EmployeeProfileComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this38 = this;

            this.route.params.subscribe(function (params) {
              _this38.id = params.id;

              _this38.getEmployeeProfile(_this38.id);

              _this38.baseUrl = src_app_helper__WEBPACK_IMPORTED_MODULE_7__["default"];
            });
            this.uploadForm = this.formBuilder.group({
              profile: [""]
            });
            this.addEmployeeForm = this.formBuilder.group({
              client: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
          }
        }, {
          key: "onFileSelect",
          value: function onFileSelect(event) {
            var _this39 = this;

            if (event.target.files.length > 0) {
              var file = event.target.files[0];
              var reader = new FileReader();
              reader.readAsDataURL(event.target.files[0]);

              reader.onload = function (e) {
                return _this39.imageSrc = reader.result;
              };

              this.uploadForm.get("profile").setValue(file);
            }
          }
        }, {
          key: "Submit",
          value: function Submit() {
            var _this40 = this;

            var formData = new FormData();
            formData.append("file", this.uploadForm.get("profile").value);
            this.employeeService.uploadProfileImage(this.id, formData).subscribe(function (data) {
              $("#profile_Image").modal("hide");

              _this40.router.navigate(["/employees/employeepage"], {
                relativeTo: _this40.route
              });

              _this40.toastr.success("Successfully uploaded image");
            }, function (error) {
              _this40.toastr.error("Error" + error.message);
            });
          } //Get Employee profile

        }, {
          key: "getEmployeeProfile",
          value: function getEmployeeProfile(id) {
            var _this41 = this;

            this.employeeService.findEmployeeById(id).subscribe(function (data) {
              var _a, _b;

              _this41.empProfile = data;
              console.log("Data " + ((_b = (_a = _this41.empProfile.primaryAssgnmnt) === null || _a === void 0 ? void 0 : _a.hrEmpDesignations) === null || _b === void 0 ? void 0 : _b.title));
            });
          }
        }, {
          key: "getEducationData",
          value: function getEducationData() {
            var _this42 = this;

            if (this.id) {
              this.employeeService.findhrCrEmpEduByEmpId(this.id).subscribe(function (data) {
                _this42.hrCrEmpEduInfo = data;
              }, function (error) {
                _this42.toastr.error("Error fetching data");
              });
            }
          }
        }, {
          key: "onSubmit",
          value: function onSubmit() {
            this.toastr.success("Bank & statutory added", "Success");
          }
        }]);

        return EmployeeProfileComponent;
      }();

      EmployeeProfileComponent.ctorParameters = function () {
        return [{
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]
        }, {
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]
        }];
      };

      EmployeeProfileComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-employee-profile",
        template: _raw_loader_employee_profile_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_employee_profile_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], _services_employee_service__WEBPACK_IMPORTED_MODULE_8__["EmployeeService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])], EmployeeProfileComponent);
      /***/
    },

    /***/
    "b1Dy":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-nz.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function b1Dy(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (New Zealand) [en-nz]
      //! author : Luke McGregor : https://github.com/lukemcgregor
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enNz = moment.defineLocale('en-nz', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return enNz;
      });
      /***/

    },

    /***/
    "bNXq":
    /*!****************************************************************!*\
      !*** ./src/app/all-modules/payroll/service/payroll.service.ts ***!
      \****************************************************************/

    /*! exports provided: PayrollService */

    /***/
    function bNXq(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "PayrollService", function () {
        return PayrollService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common/http */
      "tk/3");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var src_app_helper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/app/_helper */
      "rmPI");

      var PayrollService = /*#__PURE__*/function () {
        function PayrollService(http) {
          _classCallCheck(this, PayrollService);

          this.http = http;
        }

        _createClass(PayrollService, [{
          key: "sendGetRequest",
          value: function sendGetRequest(apiURL, queryParams) {
            console.log("@sendGetRequest");
            return this.http.get(apiURL, {
              params: queryParams
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["retry"])(3));
          }
        }, {
          key: "sendPostRequest",
          value: function sendPostRequest(apiURL, formData) {
            console.log("@sendPostRequest");
            return this.http.post(apiURL, formData);
          }
        }, {
          key: "sendPutRequest",
          value: function sendPutRequest(apiURL, formData) {
            console.log("@sendPutRequest");
            return this.http.put(apiURL, formData);
          }
        }, {
          key: "sendDeleteRequest",
          value: function sendDeleteRequest(apiURL, formData) {
            console.log("@sendDeleteRequest");
            return this.http["delete"](apiURL, formData);
          } // Get PayrollElement Assignment By EmpId

        }, {
          key: "getPayrollElementAssignmentByEmpId",
          value: function getPayrollElementAssignmentByEmpId(empId) {
            return this.http.get("".concat(src_app_helper__WEBPACK_IMPORTED_MODULE_4__["default"], "/empPayrollAssignment/get/").concat(empId));
          }
        }]);

        return PayrollService;
      }();

      PayrollService.ctorParameters = function () {
        return [{
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
        }];
      };

      PayrollService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])({
        providedIn: 'root'
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]])], PayrollService);
      /***/
    },

    /***/
    "bOMt":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/nb.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function bOMt(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Norwegian Bokmål [nb]
      //! authors : Espen Hovlandsdal : https://github.com/rexxars
      //!           Sigurd Gartmann : https://github.com/sigurdga
      //!           Stephen Ramthun : https://github.com/stephenramthun
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var nb = moment.defineLocale('nb', {
          months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
          monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
          monthsParseExact: true,
          weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
          weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
          weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'
          },
          calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'noen sekunder',
            ss: '%d sekunder',
            m: 'ett minutt',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dager',
            w: 'en uke',
            ww: '%d uker',
            M: 'en måned',
            MM: '%d måneder',
            y: 'ett år',
            yy: '%d år'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return nb;
      });
      /***/

    },

    /***/
    "bXm7":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/kk.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function bXm7(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kazakh [kk]
      //! authors : Nurlan Rakhimzhanov : https://github.com/nurlan
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var suffixes = {
          0: '-ші',
          1: '-ші',
          2: '-ші',
          3: '-ші',
          4: '-ші',
          5: '-ші',
          6: '-шы',
          7: '-ші',
          8: '-ші',
          9: '-шы',
          10: '-шы',
          20: '-шы',
          30: '-шы',
          40: '-шы',
          50: '-ші',
          60: '-шы',
          70: '-ші',
          80: '-ші',
          90: '-шы',
          100: '-ші'
        };
        var kk = moment.defineLocale('kk', {
          months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
          monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
          weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
          weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
          weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Бүгін сағат] LT',
            nextDay: '[Ертең сағат] LT',
            nextWeek: 'dddd [сағат] LT',
            lastDay: '[Кеше сағат] LT',
            lastWeek: '[Өткен аптаның] dddd [сағат] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s ішінде',
            past: '%s бұрын',
            s: 'бірнеше секунд',
            ss: '%d секунд',
            m: 'бір минут',
            mm: '%d минут',
            h: 'бір сағат',
            hh: '%d сағат',
            d: 'бір күн',
            dd: '%d күн',
            M: 'бір ай',
            MM: '%d ай',
            y: 'бір жыл',
            yy: '%d жыл'
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
          ordinal: function ordinal(number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return kk;
      });
      /***/

    },

    /***/
    "bYM6":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ar-tn.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function bYM6(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale  :  Arabic (Tunisia) [ar-tn]
      //! author : Nader Toukabri : https://github.com/naderio
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var arTn = moment.defineLocale('ar-tn', {
          months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
          monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return arTn;
      });
      /***/

    },

    /***/
    "bpih":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/it.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function bpih(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Italian [it]
      //! author : Lorenzo : https://github.com/aliem
      //! author: Mattia Larentis: https://github.com/nostalgiaz
      //! author: Marco : https://github.com/Manfre98
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var it = moment.defineLocale('it', {
          months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
          monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
          weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
          weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
          weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: function sameDay() {
              return '[Oggi a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT';
            },
            nextDay: function nextDay() {
              return '[Domani a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT';
            },
            nextWeek: function nextWeek() {
              return 'dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT';
            },
            lastDay: function lastDay() {
              return '[Ieri a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT';
            },
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                  return '[La scorsa] dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT';

                default:
                  return '[Lo scorso] dddd [a' + (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") + ']LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'tra %s',
            past: '%s fa',
            s: 'alcuni secondi',
            ss: '%d secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: "un'ora",
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            w: 'una settimana',
            ww: '%d settimane',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return it;
      });
      /***/

    },

    /***/
    "bxKX":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/it-ch.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function bxKX(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Italian (Switzerland) [it-ch]
      //! author : xfh : https://github.com/xfh
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var itCh = moment.defineLocale('it-ch', {
          months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
          monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
          weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
          weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
          weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                  return '[la scorsa] dddd [alle] LT';

                default:
                  return '[lo scorso] dddd [alle] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: function future(s) {
              return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past: '%s fa',
            s: 'alcuni secondi',
            ss: '%d secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: "un'ora",
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return itCh;
      });
      /***/

    },

    /***/
    "cRix":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/fy.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function cRix(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Frisian [fy]
      //! author : Robin van der Vliet : https://github.com/robin0van0der0v
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
            monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
        var fy = moment.defineLocale('fy', {
          months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
          monthsShort: function monthsShort(m, format) {
            if (!m) {
              return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
            } else {
              return monthsShortWithDots[m.month()];
            }
          },
          monthsParseExact: true,
          weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
          weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
          weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'oer %s',
            past: '%s lyn',
            s: 'in pear sekonden',
            ss: '%d sekonden',
            m: 'ien minút',
            mm: '%d minuten',
            h: 'ien oere',
            hh: '%d oeren',
            d: 'ien dei',
            dd: '%d dagen',
            M: 'ien moanne',
            MM: '%d moannen',
            y: 'ien jier',
            yy: '%d jierren'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
          ordinal: function ordinal(number) {
            return number + (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de');
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return fy;
      });
      /***/

    },

    /***/
    "czMo":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-il.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function czMo(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Israel) [en-il]
      //! author : Chris Gedrim : https://github.com/chrisgedrim
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enIl = moment.defineLocale('en-il', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          }
        });
        return enIl;
      });
      /***/

    },

    /***/
    "dNwA":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/sw.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function dNwA(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Swahili [sw]
      //! author : Fahad Kassim : https://github.com/fadsel
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var sw = moment.defineLocale('sw', {
          months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
          monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
          weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
          weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
          weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'hh:mm A',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[leo saa] LT',
            nextDay: '[kesho saa] LT',
            nextWeek: '[wiki ijayo] dddd [saat] LT',
            lastDay: '[jana] LT',
            lastWeek: '[wiki iliyopita] dddd [saat] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s baadaye',
            past: 'tokea %s',
            s: 'hivi punde',
            ss: 'sekunde %d',
            m: 'dakika moja',
            mm: 'dakika %d',
            h: 'saa limoja',
            hh: 'masaa %d',
            d: 'siku moja',
            dd: 'siku %d',
            M: 'mwezi mmoja',
            MM: 'miezi %d',
            y: 'mwaka mmoja',
            yy: 'miaka %d'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return sw;
      });
      /***/

    },

    /***/
    "dfUu":
    /*!***************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/departments/departments.component.ts ***!
      \***************************************************************************************/

    /*! exports provided: DepartmentsComponent */

    /***/
    function dfUu(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DepartmentsComponent", function () {
        return DepartmentsComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_departments_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./departments.component.html */
      "8LvB");
      /* harmony import */


      var _departments_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./departments.component.css */
      "Xf6b");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var angular_datatables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! angular-datatables */
      "njyG");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");

      var DepartmentsComponent = /*#__PURE__*/function () {
        function DepartmentsComponent(formBuilder, srvModuleService, toastr) {
          _classCallCheck(this, DepartmentsComponent);

          this.formBuilder = formBuilder;
          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.dtOptions = {};
          this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
          this.url = "departments";
          this.rows = [];
          this.srch = [];
        }

        _createClass(DepartmentsComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.dtOptions = {
              // ... skipped ...
              pageLength: 10,
              dom: "lrtip"
            };
            this.LoadDepartment();
            this.addDepartmentForm = this.formBuilder.group({
              DepartmentName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
            this.editDepartmentForm = this.formBuilder.group({
              DepartmentName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]]
            });
          } // Get department list  Api Call

        }, {
          key: "LoadDepartment",
          value: function LoadDepartment() {
            var _this43 = this;

            this.srvModuleService.get(this.url).subscribe(function (data) {
              _this43.lstDepartment = data;

              _this43.dtTrigger.next();

              _this43.rows = _this43.lstDepartment;
              _this43.srch = _toConsumableArray(_this43.rows);
            });
          } // Add Department  Modal Api Call

        }, {
          key: "addDepartment",
          value: function addDepartment() {
            var _this44 = this;

            if (this.addDepartmentForm.valid) {
              var obj = {
                departmentName: this.addDepartmentForm.value.DepartmentName,
                id: 0
              };
              this.srvModuleService.add(obj, this.url).subscribe(function (data) {
                _this44.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.LoadDepartment();
              $("#add_department").modal("hide");
              this.addDepartmentForm.reset();
              this.toastr.success("Department added sucessfully...!", "Success");
            }
          }
        }, {
          key: "editDepartment",
          value: function editDepartment() {
            var _this45 = this;

            if (this.editDepartmentForm.valid) {
              var obj = {
                departmentName: this.editDepartmentForm.value.DepartmentName,
                id: this.editId
              };
              this.srvModuleService.update(obj, this.url).subscribe(function (data1) {
                _this45.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.LoadDepartment();
              $("#edit_department").modal("hide");
              this.toastr.success("Department Updated sucessfully...!", "Success");
            }
          } // To Get The department Edit Id And Set Values To Edit Modal Form

        }, {
          key: "edit",
          value: function edit(value) {
            this.editId = value;
            var index = this.lstDepartment.findIndex(function (item) {
              return item.id === value;
            });
            var toSetValues = this.lstDepartment[index];
            this.editDepartmentForm.setValue({
              DepartmentName: toSetValues.departmentName
            });
          }
        }, {
          key: "deleteDepartment",
          value: function deleteDepartment() {
            var _this46 = this;

            this.srvModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              _this46.dtElement.dtInstance.then(function (dtInstance) {
                dtInstance.destroy();
              });

              _this46.LoadDepartment();

              $("#delete_department").modal("hide");

              _this46.toastr.success("Department deleted sucessfully..!", "Success");
            });
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // Do not forget to unsubscribe the event
            this.dtTrigger.unsubscribe();
          }
        }]);

        return DepartmentsComponent;
      }();

      DepartmentsComponent.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"]
        }, {
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_8__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]
        }];
      };

      DepartmentsComponent.propDecorators = {
        dtElement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"],
          args: [angular_datatables__WEBPACK_IMPORTED_MODULE_6__["DataTableDirective"], {
            "static": false
          }]
        }]
      };
      DepartmentsComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-departments",
        template: _raw_loader_departments_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_departments_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_8__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])], DepartmentsComponent);
      /***/
    },

    /***/
    "e+ae":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/sk.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function eAe(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Slovak [sk]
      //! author : Martin Minka : https://github.com/k2s
      //! based on work of petrbela : https://github.com/petrbela
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
            monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');

        function plural(n) {
          return n > 1 && n < 5;
        }

        function translate(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';

          switch (key) {
            case 's':
              // a few seconds / in a few seconds / a few seconds ago
              return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';

            case 'ss':
              // 9 seconds / in 9 seconds / 9 seconds ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'sekundy' : 'sekúnd');
              } else {
                return result + 'sekundami';
              }

            case 'm':
              // a minute / in a minute / a minute ago
              return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';

            case 'mm':
              // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minúty' : 'minút');
              } else {
                return result + 'minútami';
              }

            case 'h':
              // an hour / in an hour / an hour ago
              return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';

            case 'hh':
              // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodín');
              } else {
                return result + 'hodinami';
              }

            case 'd':
              // a day / in a day / a day ago
              return withoutSuffix || isFuture ? 'deň' : 'dňom';

            case 'dd':
              // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dni' : 'dní');
              } else {
                return result + 'dňami';
              }

            case 'M':
              // a month / in a month / a month ago
              return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';

            case 'MM':
              // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'mesiace' : 'mesiacov');
              } else {
                return result + 'mesiacmi';
              }

            case 'y':
              // a year / in a year / a year ago
              return withoutSuffix || isFuture ? 'rok' : 'rokom';

            case 'yy':
              // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'rokov');
              } else {
                return result + 'rokmi';
              }

          }
        }

        var sk = moment.defineLocale('sk', {
          months: months,
          monthsShort: monthsShort,
          weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
          weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
          weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[v nedeľu o] LT';

                case 1:
                case 2:
                  return '[v] dddd [o] LT';

                case 3:
                  return '[v stredu o] LT';

                case 4:
                  return '[vo štvrtok o] LT';

                case 5:
                  return '[v piatok o] LT';

                case 6:
                  return '[v sobotu o] LT';
              }
            },
            lastDay: '[včera o] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                  return '[minulú nedeľu o] LT';

                case 1:
                case 2:
                  return '[minulý] dddd [o] LT';

                case 3:
                  return '[minulú stredu o] LT';

                case 4:
                case 5:
                  return '[minulý] dddd [o] LT';

                case 6:
                  return '[minulú sobotu o] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'za %s',
            past: 'pred %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return sk;
      });
      /***/

    },

    /***/
    "e/yp":
    /*!*******************************************************************!*\
      !*** ./src/app/all-modules/employees/employees-routing.module.ts ***!
      \*******************************************************************/

    /*! exports provided: EmployeesRoutingModule */

    /***/
    function eYp(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EmployeesRoutingModule", function () {
        return EmployeesRoutingModule;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! @angular/router */
      "tyNb");
      /* harmony import */


      var _components_all_employees_add_employee_add_employee_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./components/all-employees/add-employee/add-employee.component */
      "gDfP");
      /* harmony import */


      var _components_all_employees_employee_list_employee_list_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./components/all-employees/employee-list/employee-list.component */
      "msUU");
      /* harmony import */


      var _components_all_employees_employee_page_content_employee_page_content_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! ./components/all-employees/employee-page-content/employee-page-content.component */
      "Wddu");
      /* harmony import */


      var _components_all_employees_employee_profile_employee_profile_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ./components/all-employees/employee-profile/employee-profile.component */
      "aSFI");
      /* harmony import */


      var _components_attendance_admin_attendance_admin_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! ./components/attendance-admin/attendance-admin.component */
      "Sp4O");
      /* harmony import */


      var _components_attendance_employee_attendance_employee_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ./components/attendance-employee/attendance-employee.component */
      "/VXB");
      /* harmony import */


      var _components_attendance_row_admin_attendance_row_admin_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ./components/attendance-row-admin/attendance-row-admin.component */
      "Fpll");
      /* harmony import */


      var _components_departments_departments_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ./components/departments/departments.component */
      "dfUu");
      /* harmony import */


      var _components_designation_designation_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! ./components/designation/designation.component */
      "KL8J");
      /* harmony import */


      var _components_holidays_holidays_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! ./components/holidays/holidays.component */
      "wU91");
      /* harmony import */


      var _components_leave_settings_leave_settings_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! ./components/leave-settings/leave-settings.component */
      "QAzK");
      /* harmony import */


      var _components_leaves_admin_leaves_admin_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! ./components/leaves-admin/leaves-admin.component */
      "8GDL");
      /* harmony import */


      var _components_overtime_overtime_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ./components/overtime/overtime.component */
      "ZuW2");
      /* harmony import */


      var _components_timesheet_timesheet_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
      /*! ./components/timesheet/timesheet.component */
      "P8UC");
      /* harmony import */


      var _employees_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
      /*! ./employees.component */
      "H3EQ");

      var routes = [{
        path: '',
        component: _employees_component__WEBPACK_IMPORTED_MODULE_17__["EmployeesComponent"],
        children: [{
          path: 'employeepage',
          component: _components_all_employees_employee_page_content_employee_page_content_component__WEBPACK_IMPORTED_MODULE_5__["EmployeePageContentComponent"]
        }, {
          path: 'add-employee',
          component: _components_all_employees_add_employee_add_employee_component__WEBPACK_IMPORTED_MODULE_3__["AddEmployeeComponent"]
        }, {
          path: 'edit-employee/:id',
          component: _components_all_employees_add_employee_add_employee_component__WEBPACK_IMPORTED_MODULE_3__["AddEmployeeComponent"]
        }, {
          path: 'employeelist',
          component: _components_all_employees_employee_list_employee_list_component__WEBPACK_IMPORTED_MODULE_4__["EmployeeListComponent"]
        }, {
          path: 'employeeprofile/:id',
          component: _components_all_employees_employee_profile_employee_profile_component__WEBPACK_IMPORTED_MODULE_6__["EmployeeProfileComponent"]
        }, {
          path: 'holidays',
          component: _components_holidays_holidays_component__WEBPACK_IMPORTED_MODULE_12__["HolidaysComponent"]
        }, {
          path: 'adminleaves',
          component: _components_leaves_admin_leaves_admin_component__WEBPACK_IMPORTED_MODULE_14__["LeavesAdminComponent"]
        }, {
          path: 'leavesettings',
          component: _components_leave_settings_leave_settings_component__WEBPACK_IMPORTED_MODULE_13__["LeaveSettingsComponent"]
        }, {
          path: 'attendanceadmin',
          component: _components_attendance_admin_attendance_admin_component__WEBPACK_IMPORTED_MODULE_7__["AttendanceAdminComponent"]
        }, {
          path: 'attendancerowadmin',
          component: _components_attendance_row_admin_attendance_row_admin_component__WEBPACK_IMPORTED_MODULE_9__["AttendanceRowAdminComponent"]
        }, {
          path: 'attendanceemployee',
          component: _components_attendance_employee_attendance_employee_component__WEBPACK_IMPORTED_MODULE_8__["AttendanceEmployeeComponent"]
        }, {
          path: 'departments',
          component: _components_departments_departments_component__WEBPACK_IMPORTED_MODULE_10__["DepartmentsComponent"]
        }, {
          path: 'designation',
          component: _components_designation_designation_component__WEBPACK_IMPORTED_MODULE_11__["DesignationComponent"]
        }, {
          path: 'timesheet',
          component: _components_timesheet_timesheet_component__WEBPACK_IMPORTED_MODULE_16__["TimesheetComponent"]
        }, {
          path: 'overtime',
          component: _components_overtime_overtime_component__WEBPACK_IMPORTED_MODULE_15__["OvertimeComponent"]
        }]
      }];

      var EmployeesRoutingModule = function EmployeesRoutingModule() {
        _classCallCheck(this, EmployeesRoutingModule);
      };

      EmployeesRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
      })], EmployeesRoutingModule);
      /***/
    },

    /***/
    "eopi":
    /*!***************************************************************!*\
      !*** ./src/app/all-modules/employees/employees.component.css ***!
      \***************************************************************/

    /*! exports provided: default */

    /***/
    function eopi(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbXBsb3llZXMuY29tcG9uZW50LmNzcyJ9 */";
      /***/
    },

    /***/
    "fzPg":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/yo.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function fzPg(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Yoruba Nigeria [yo]
      //! author : Atolagbe Abisoye : https://github.com/andela-batolagbe
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var yo = moment.defineLocale('yo', {
          months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
          monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
          weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
          weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
          weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
          },
          calendar: {
            sameDay: '[Ònì ni] LT',
            nextDay: '[Ọ̀la ni] LT',
            nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
            lastDay: '[Àna ni] LT',
            lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'ní %s',
            past: '%s kọjá',
            s: 'ìsẹjú aayá die',
            ss: 'aayá %d',
            m: 'ìsẹjú kan',
            mm: 'ìsẹjú %d',
            h: 'wákati kan',
            hh: 'wákati %d',
            d: 'ọjọ́ kan',
            dd: 'ọjọ́ %d',
            M: 'osù kan',
            MM: 'osù %d',
            y: 'ọdún kan',
            yy: 'ọdún %d'
          },
          dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
          ordinal: 'ọjọ́ %d',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return yo;
      });
      /***/

    },

    /***/
    "gDfP":
    /*!*******************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/add-employee/add-employee.component.ts ***!
      \*******************************************************************************************************/

    /*! exports provided: AddEmployeeComponent */

    /***/
    function gDfP(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "AddEmployeeComponent", function () {
        return AddEmployeeComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_add_employee_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./add-employee.component.html */
      "qZnD");
      /* harmony import */


      var _add_employee_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./add-employee.component.css */
      "swCz");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/router */
      "tyNb");
      /* harmony import */


      var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! moment */
      "wd/R");
      /* harmony import */


      var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
      /* harmony import */


      var ngx_spinner__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! ngx-spinner */
      "JqCM");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! rxjs/operators */
      "kU1M");
      /* harmony import */


      var src_app_all_modules_payroll_service_payroll_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! src/app/all-modules/payroll/service/payroll.service */
      "bNXq");
      /* harmony import */


      var src_app_all_modules_settings_common_services_common_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
      /*! src/app/all-modules/settings/common/services/common.service */
      "xrk7");
      /* harmony import */


      var src_app_all_modules_settings_systems_services_system_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
      /*! src/app/all-modules/settings/systems/services/system.service */
      "Oryf");
      /* harmony import */


      var src_environments_environment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
      /*! src/environments/environment */
      "AytR");
      /* harmony import */


      var _services_employee_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
      /*! ../../../services/employee.service */
      "AuF9");

      var moment = moment__WEBPACK_IMPORTED_MODULE_7__;

      var AddEmployeeComponent = /*#__PURE__*/function () {
        function AddEmployeeComponent(toastr, formBuilder, empployeeService, route, router, systemService, datePipe, commonService, employeeService, payrollService, spinnerService) {
          _classCallCheck(this, AddEmployeeComponent);

          this.toastr = toastr;
          this.formBuilder = formBuilder;
          this.empployeeService = empployeeService;
          this.route = route;
          this.router = router;
          this.systemService = systemService;
          this.datePipe = datePipe;
          this.commonService = commonService;
          this.employeeService = employeeService;
          this.payrollService = payrollService;
          this.spinnerService = spinnerService;
          this.baseUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_14__["environment"].baseUrl;
          this.hrCrEmpId = null;
          this.loading = false;
          this.assgnmntLoading = false;
          this.bankLoading = false;
          this.submitted = false;
          this.submittedAsgn = false;
          this.submitBank = false;
          this.notEmpUsers = []; // Emp List

          this.empList = [];
          this.incharge = [];
          this.hr = [];
          this.group = [];
          this.organization = [];
          this.operatingUnit = [];
          this.product = [];
          this.department = [];
          this.section = [];
          this.subSection = [];
          this.team = [];
          this.subTeam = [];
          this.allHrcrEmp = [];
          this.hrCrEmpAssignment = null;
          this.payrollElementAssignment = null;
          this.hrCrEmpEduInfo = [];
          this.bloodGrp = [];
          this.empStatus = [];
          this.empCat = [];
          this.genders = [];
          this.maritalStatus = [];
          this.educationBoard = [];
          this.subjectGroup = [];
          this.unions = []; //allowance percents 

          this.allowancePercents = 0;
          this.pngDisConfig = {
            pageNum: 1,
            pageSize: 25,
            totalItem: 1,
            divisionId: '',
            name: ''
          };
          this.pngUpzilaConfig = {
            pageNum: 1,
            pageSize: 25,
            totalItem: 1,
            districtId: '',
            name: ''
          };
          this.pngUnoConfig = {
            pageNum: 1,
            pageSize: 25,
            totalItem: 1,
            upazilaId: '',
            name: ''
          };
        }

        _createClass(AddEmployeeComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.id = this.route.snapshot.params["id"];
            this.isAddMode = !this.id;
            this.hrCrEmpId = this.id;
            this.getNotEmpUser();
            this.getAllOrgMst();
            this.getAllAlkp(); // this.getAllHrcrEmp();

            this.getDesignations(); //  this.lodeAllEmp();

            this.loadAllDivisions();
            this.loadAllDistrict(null);
            this.loadAllUpazila(null);
            this.loadAllUnion(null); // this.getCurrentCreatedEmploy();

            this.initializeForm();
            this.initializeFormAssignment();
            this.initializeBankAndPayrollForm();
            this.initializeEducationForm();

            if (this.route.snapshot.params["id"]) {
              this.getHrcrEmpLastAssignemnt(this.route.snapshot.params["id"]);
              this.getEmpPayrollElementAssignment(this.route.snapshot.params["id"]);
            }
          }
        }, {
          key: "selectEvent",
          value: function selectEvent(item) {} // Impl of initializing form data

        }, {
          key: "initializeForm",
          value: function initializeForm() {
            var _this47 = this;

            this.addEmployeeForm = this.formBuilder.group({
              firstName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              lastName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              middleName: [],
              spouseName: [],
              fatherName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              motherName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              dob: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              voterIdentityNumber: [],
              email: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].email]],
              height: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern("^-?[0-9]\\d*(\\.\\d{1,5})?$")],
              weight: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern("^-?[0-9]\\d*(\\.\\d{1,5})?$")],
              addressPrsnt: [],
              addressPrmnt: [],
              careerSummary: [],
              experienceYear: [],
              joiningDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              salExpected: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern("^-?[0-9]\\d*(\\.\\d{1,5})?$")],
              objective: [],
              salCurr: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].pattern("^-?[0-9]\\d*(\\.\\d{1,5})?$")],
              tinNumber: [],
              user: [""],
              alkpBloodGrpIdAlkp: [""],
              alkpGenderIdAlkp: [""],
              alkpMaritalStsIdAlkp: [""],
              dgOrder: [""],
              mobCode: [""],
              division: [""],
              district: [""],
              upazila: [""],
              union: [""],
              //EMERGENCY CONTACT
              emergencyCntName: [""],
              emergencyCntPhone: [""],
              emergencyCntRelation: [""],
              emergencyCntAddress: [""]
            });

            if (!this.isAddMode) {
              this.empployeeService.getEmployeeById(this.id).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["first"])()) // .subscribe((x) => this.addEmployeeForm.patchValue(x));
              .subscribe(function (data) {
                //formatted object type data for updating
                if (data.alkpBloodGrpIdAlkp != null) {
                  var bloodGrp = data.alkpBloodGrpIdAlkp;
                  data.alkpBloodGrpIdAlkp = bloodGrp.id;
                }

                if (data.alkpGenderIdAlkp != null) {
                  var gender = data.alkpGenderIdAlkp;
                  data.alkpGenderIdAlkp = gender.id;
                }

                if (data.alkpMaritalStsIdAlkp != null) {
                  var mStatus = data.alkpMaritalStsIdAlkp;
                  data.alkpMaritalStsIdAlkp = mStatus.id;
                }

                if (data.division != null) {
                  var mDivision = data.division;
                  data.division = mDivision.id;

                  _this47.loadAllDistrict(data.division);
                }

                if (data.district != null) {
                  var mDistrict = data.district;
                  data.district = mDistrict.id;

                  _this47.loadAllUpazila(data.district);
                }

                if (data.upazila != null) {
                  var _mStatus = data.upazila;
                  data.upazila = _mStatus.id;

                  _this47.loadAllUnion(data.upazila);
                }

                if (data.union != null) {
                  var mUnion = data.union;
                  data.union = mUnion.id;
                }

                console.log(" HRCREMPO INFIO " + data.district);

                _this47.addEmployeeForm.patchValue(data);
              });
            }
          }
        }, {
          key: "initializeFormAssignment",
          value: function initializeFormAssignment() {
            this.addEmployeeAssgnmntForm = this.formBuilder.group({
              empSts: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              empRef: [],
              responsibility: [],
              alkpEmpCatId: [""],
              probationDuration: [""],
              allOrgMstGroupId: [""],
              allOrgMstOrganizationId: [""],
              allOrgMstOperatingUnitId: [""],
              allOrgMstProductId: [""],
              allOrgMstDepartmentId: [""],
              allOrgMstSectionId: [""],
              allOrgMstSubSectionId: [""],
              allOrgMstTeamId: [""],
              allOrgMstSubTeamId: [""],
              hrCrEmpId: [""],
              // gross: [""],
              hrEmpDesignations: [""],
              // bankName: [""],
              // branchName: [""],
              // bankAccNo: [""],
              hrCrEmpInChrgId: [""],
              hrCrEmpHrmId: [""]
            });
          }
        }, {
          key: "initializeBankAndPayrollForm",
          value: function initializeBankAndPayrollForm() {
            this.addBankAndPayrollForm = this.formBuilder.group({
              bankName: [""],
              branchName: [""],
              bankAccNo: [""],
              grossSalary: [""],
              houseRentAlwPct: [""],
              medicalAlwPct: [""],
              dearnessAlwPct: [""],
              conveyanceAlwPct: [""],
              transportAlwPct: [""],
              specialAlwPct: [""],
              foodAllowance: [""],
              basicSalary: [""],
              activeStartDate: [""],
              activeEndDate: [""]
            });
          }
        }, {
          key: "initializeEducationForm",
          value: function initializeEducationForm() {
            this.addEducationForm = this.formBuilder.group({
              id: [''],
              code: [''],
              passingYear: [''],
              regNo: [''],
              result: [''],
              resultOutOf: [''],
              titleInstitute: [''],
              hrCrEmp: [''],
              alkpEduBoard: [''],
              alkpSubGroup: ['']
            });
          }
        }, {
          key: "loadAllDivisions",
          value: function loadAllDivisions() {
            var _this48 = this;

            this.spinnerService.show();
            this.employeeService.fetchAllDivision().subscribe(function (data) {
              _this48.divisions = data;

              _this48.spinnerService.hide();
            }, function (error) {
              _this48.toastr.error(error.error.message);

              _this48.spinnerService.hide();
            });
          }
        }, {
          key: "loadAllDistrict",
          value: function loadAllDistrict(divisionId) {
            var _this49 = this;

            if (divisionId == null) {
              var apiURL = this.baseUrl + "/address/getDistricts";
              var queryParams = {};
              queryParams.name = this.pngDisConfig.name;
              queryParams.pageNum = this.pngDisConfig.pageNum;
              queryParams.pageSize = this.pngDisConfig.pageSize;
              this.employeeService.getAllDistrict(apiURL, queryParams).subscribe(function (response) {
                _this49.districts = response.objectList;
                _this49.pngDisConfig.totalItem = response.totalPages;
                console.warn(_this49.districts);
              }, function (error) {
                console.log(error);
              });
            } else {
              this.pngDisConfig.divisionId = divisionId;
              this.pngDisConfig.pageNum = 1;

              var _apiURL = this.baseUrl + "/address/getDistricts";

              var _queryParams = {};
              _queryParams.pageNum = this.pngDisConfig.pageNum;
              _queryParams.pageSize = this.pngDisConfig.pageSize;
              _queryParams.divisionId = this.pngDisConfig.divisionId;
              this.employeeService.getAllDistrict(_apiURL, _queryParams).subscribe(function (response) {
                _this49.districts = response.objectList;
                _this49.pngDisConfig.totalItem = response.totalPages;
                console.warn(_this49.districts);
              }, function (error) {
                console.log(error);
              });
            }
          }
        }, {
          key: "scrollToEndDistrict",
          value: function scrollToEndDistrict() {
            var _this50 = this;

            this.pngDisConfig.pageNum++;
            var apiURL = this.baseUrl + "/address/getDistricts";
            var queryParams = {};
            queryParams.pageNum = this.pngDisConfig.pageNum;
            queryParams.pageSize = this.pngDisConfig.pageSize;
            queryParams.divisionId = this.pngDisConfig.divisionId;
            this.employeeService.getAllDistrict(apiURL, queryParams).subscribe(function (response) {
              _this50.districts = _this50.districts.concat(response.objectList);
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "openDropdownDistrict",
          value: function openDropdownDistrict() {}
        }, {
          key: "searchProdDistrict",
          value: function searchProdDistrict(event) {
            this.pngDisConfig.name = event.term;
            this.loadAllDistrict(null);
          }
        }, {
          key: "loadAllUpazila",
          value: function loadAllUpazila(districtId) {
            var _this51 = this;

            if (districtId == null) {
              var apiURL = this.baseUrl + "/address/getUpazilas";
              var queryParams = {};
              queryParams.name = this.pngUpzilaConfig.name;
              queryParams.pageNum = this.pngUpzilaConfig.pageNum;
              queryParams.pageSize = this.pngUpzilaConfig.pageSize;
              this.employeeService.getAllUpazila(apiURL, queryParams).subscribe(function (response) {
                _this51.upazilas = response.objectList;
                _this51.pngUpzilaConfig.totalItem = response.totalPages;
                console.warn(_this51.districts);
              }, function (error) {
                console.log(error);
              });
            } else {
              this.pngUpzilaConfig.districtId = districtId;
              this.pngUpzilaConfig.pageNum = 1;

              var _apiURL2 = this.baseUrl + "/address/getUpazilas";

              var _queryParams2 = {};
              _queryParams2.pageNum = this.pngUpzilaConfig.pageNum;
              _queryParams2.pageSize = this.pngUpzilaConfig.pageSize;
              _queryParams2.districtId = this.pngUpzilaConfig.districtId;
              this.employeeService.getAllUpazila(_apiURL2, _queryParams2).subscribe(function (response) {
                _this51.upazilas = response.objectList;
                _this51.pngUpzilaConfig.totalItem = response.totalPages;
                console.warn(_this51.districts);
              }, function (error) {
                console.log(error);
              });
            }
          }
        }, {
          key: "scrollToEndUpazila",
          value: function scrollToEndUpazila() {
            var _this52 = this;

            this.pngUpzilaConfig.pageNum++;
            var apiURL = this.baseUrl + "/address/getUpazilas";
            var queryParams = {};
            queryParams.pageNum = this.pngUpzilaConfig.pageNum;
            queryParams.pageSize = this.pngUpzilaConfig.pageSize;
            queryParams.districtId = this.pngUpzilaConfig.districtId;
            this.employeeService.getAllUpazila(apiURL, queryParams).subscribe(function (response) {
              _this52.upazilas = _this52.upazilas.concat(response.objectList);
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "searchProdUpazila",
          value: function searchProdUpazila(event) {
            this.pngUpzilaConfig.name = event.term;
            this.loadAllUpazila(null);
          }
        }, {
          key: "loadAllUnion",
          value: function loadAllUnion(upazilaId) {
            var _this53 = this;

            if (upazilaId == null) {
              var apiURL = this.baseUrl + "/address/getUnions";
              var queryParams = {};
              queryParams.name = this.pngUnoConfig.name;
              queryParams.pageNum = this.pngUnoConfig.pageNum;
              queryParams.pageSize = this.pngUnoConfig.pageSize;
              this.employeeService.getAllUnions(apiURL, queryParams).subscribe(function (response) {
                _this53.unions = response.objectList;
                _this53.pngUnoConfig.totalItem = response.totalPages;
                console.warn(_this53.districts);
              }, function (error) {
                console.log(error);
              });
            } else {
              this.pngUnoConfig.upazilaId = upazilaId;
              this.pngUnoConfig.pageNum = 1;

              var _apiURL3 = this.baseUrl + "/address/getUnions";

              var _queryParams3 = {};
              _queryParams3.pageNum = this.pngUnoConfig.pageNum;
              _queryParams3.pageSize = this.pngUnoConfig.pageSize;
              _queryParams3.upazilaId = this.pngUnoConfig.upazilaId;
              this.employeeService.getAllUnions(_apiURL3, _queryParams3).subscribe(function (response) {
                _this53.unions = response.objectList;
                _this53.pngUnoConfig.totalItem = response.totalPages;
              }, function (error) {
                console.log(error);
              });
            }
          }
        }, {
          key: "scrollToEndUnion",
          value: function scrollToEndUnion() {
            var _this54 = this;

            this.pngUnoConfig.pageNum++;
            var apiURL = this.baseUrl + "/address/getUnions";
            var queryParams = {};
            queryParams.pageNum = this.pngUnoConfig.pageNum;
            queryParams.pageSize = this.pngUnoConfig.pageSize;
            queryParams.upazilaId = this.pngUnoConfig.upazilaId;
            this.employeeService.getAllUnions(apiURL, queryParams).subscribe(function (response) {
              _this54.unions = _this54.unions.concat(response.objectList);
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "openDropdownUnion",
          value: function openDropdownUnion() {}
        }, {
          key: "searchProdUnion",
          value: function searchProdUnion(event) {
            this.pngUnoConfig.name = event.term;
            this.loadAllUnion(null);
          }
        }, {
          key: "lodeAllEmp",
          value: function lodeAllEmp() {
            var _this55 = this;

            this.spinnerService.show();
            this.employeeService.getEmployees().subscribe(function (data) {
              _this55.empList = data;

              _this55.spinnerService.hide();

              console.log("ALL EMPLOYEE " + _this55.empList);
            });
          }
        }, {
          key: "searchInchargeId",
          value: function searchInchargeId(val) {
            var _this56 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.loginCode = val; // this.spinnerService.show();

            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              if (response.objectList.length > 0) {
                // this.spinnerService.hide();
                _this56.incharge = response.objectList;
                _this56.inChargeId = _this56.incharge[0].id;
                console.warn("SEARBLE DATA :: " + _this56.incharge[0].firstName);
              } else {
                _this56.incharge = [];
              }
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "searchHrId",
          value: function searchHrId(val) {
            var _this57 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.loginCode = val; // this.spinnerService.show();

            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              if (response.objectList.length > 0) {
                // this.spinnerService.hide();
                _this57.hr = response.objectList;
                _this57.hrId = _this57.hr[0].id;
              }
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "onKeyUpIncharg",
          value: function onKeyUpIncharg(x) {
            var _this58 = this;

            this.inChargeName = "Not Match";
            this.inChargeId = null;
            this.empList.forEach(function (element) {
              if (element.loginCode == x.target.value) {
                _this58.inChargeName = element.firstName + element.lastName;
                _this58.inChargeId = element.id;
              }
            });
          }
        }, {
          key: "onKeyUpHrm",
          value: function onKeyUpHrm(x) {
            var _this59 = this;

            this.hrName = "Not Match";
            this.hrId = null;
            this.empList.forEach(function (element) {
              if (element.loginCode == x.target.value) {
                _this59.hrName = element.firstName + element.lastName;
                _this59.hrId = element.id;
              }
            });
          }
        }, {
          key: "getDesignations",
          value: function getDesignations() {
            var _this60 = this;

            this.empployeeService.getDesignations().subscribe(function (data) {
              _this60.designations = data;
            }, function (error) {
              _this60.toastr.error(error.error.message);
            });
          }
        }, {
          key: "getHrcrEmpLastAssignemnt",
          value: function getHrcrEmpLastAssignemnt(id) {
            var _this61 = this;

            if (id) {
              this.empployeeService.getEmployeeAssignmentByHrCrEmpId(id).subscribe(function (data) {
                console.log("DATA  : " + data);

                if (data == null) {
                  _this61.hrCrEmpAssignment = null;
                } else {
                  if (data.allOrgMstGroupId != null) {
                    var group = data.allOrgMstGroupId;
                    data.allOrgMstGroupId = group.id;
                  }

                  if (data.allOrgMstOrganizationId != null) {
                    var org = data.allOrgMstOrganizationId;
                    data.allOrgMstOrganizationId = org.id;
                  }

                  if (data.allOrgMstOperatingUnitId != null) {
                    var ouInts = data.allOrgMstOperatingUnitId;
                    data.allOrgMstOperatingUnitId = ouInts.id;
                  }

                  if (data.allOrgMstProductId != null) {
                    var product = data.allOrgMstProductId;
                    data.allOrgMstProductId = product.id;
                  }

                  if (data.allOrgMstDepartmentId != null) {
                    var department = data.allOrgMstDepartmentId;
                    data.allOrgMstDepartmentId = department.id;
                  }

                  if (data.allOrgMstSectionId != null) {
                    var section = data.allOrgMstSectionId;
                    data.allOrgMstSectionId = section.id;
                  }

                  if (data.allOrgMstSubSectionId != null) {
                    var subSection = data.allOrgMstSubSectionId;
                    data.allOrgMstSubSectionId = subSection.id;
                  }

                  if (data.allOrgMstTeamId != null) {
                    var team = data.allOrgMstTeamId;
                    data.allOrgMstTeamId = team.id;
                  }

                  if (data.allOrgMstSubTeamId != null) {
                    var subTeam = data.allOrgMstSubTeamId;
                    data.allOrgMstSubTeamId = subTeam.id;
                  }

                  if (data.hrEmpDesignations != null) {
                    var designations = data.hrEmpDesignations;
                    data.hrEmpDesignations = designations.id;
                  }

                  if (data.empSts != null) {
                    var empst = data.empSts;
                    data.empSts = empst.id;
                  }

                  if (data.alkpEmpCatId != null) {
                    var category = data.alkpEmpCatId;
                    data.alkpEmpCatId = category.id;
                  }

                  if (data.hrCrEmpInChrgId != null) {
                    var incharge = data.hrCrEmpInChrgId;
                    data.hrCrEmpInChrgId = incharge.loginCode;
                    _this61.inChargeId = incharge.id;
                  }

                  if (data.hrCrEmpHrmId != null) {
                    var hr = data.hrCrEmpHrmId;
                    data.hrCrEmpHrmId = hr.loginCode;
                    _this61.hrId = hr.id;
                  } // console.log(data);


                  _this61.addEmployeeAssgnmntForm.patchValue(data); // this.addBankAndPayrollForm.patchValue(data);


                  _this61.hrCrEmpAssignment = data;
                  console.warn(_this61.hrCrEmpAssignment.id + " ASSIGN MENT");
                }
              });
            }

            console.warn(this.hrCrEmpAssignment + " ASSIGN MENT");
          }
        }, {
          key: "getEmpPayrollElementAssignment",
          value: function getEmpPayrollElementAssignment(id) {
            var _this62 = this;

            if (id) {
              this.payrollService.getPayrollElementAssignmentByEmpId(id).subscribe(function (data) {
                _this62.addBankAndPayrollForm.patchValue(data);

                _this62.payrollElementAssignment = data;
              });
            }
          }
        }, {
          key: "getAllOrgMst",
          value: function getAllOrgMst() {
            var _this63 = this;

            this.commonService.getAllOrgMst().subscribe(function (data) {
              _this63.allOrgMst = data;

              for (var i = 0; i < _this63.allOrgMst.length; i++) {
                if (_this63.allOrgMst[i].orgType == "GROUP") {
                  _this63.group.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "ORGANIZATION") {
                  _this63.organization.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "OPERRATING_UNIT") {
                  _this63.operatingUnit.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "PRODUCT") {
                  _this63.product.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "DEPARTMENT") {
                  _this63.department.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "SECTION") {
                  _this63.section.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "SUB_SECTION") {
                  _this63.subSection.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "TEAM") {
                  _this63.team.push(_this63.allOrgMst[i]);
                }

                if (_this63.allOrgMst[i].orgType == "SUB_TEAM") {
                  _this63.subTeam.push(_this63.allOrgMst[i]);
                }
              }
            });
          }
        }, {
          key: "getAllAlkp",
          value: function getAllAlkp() {
            var _this64 = this;

            this.commonService.getAlkp().subscribe(function (data) {
              _this64.alAlkp = data;
              console.warn("ALKP :: " + _this64.alAlkp[0].title);

              for (var i = 0; i < _this64.alAlkp.length; i++) {
                if (_this64.alAlkp[i].keyword == "BLOOD_GRP") {
                  _this64.bloodGrp.push(_this64.alAlkp[i]);
                }

                if (_this64.alAlkp[i].keyword == "STS") {
                  _this64.empStatus.push(_this64.alAlkp[i]);
                }

                if (_this64.alAlkp[i].keyword == "EMP_CATEGORY") {
                  _this64.empCat.push(_this64.alAlkp[i]);
                }

                if (_this64.alAlkp[i].keyword == "GENDER") {
                  _this64.genders.push(_this64.alAlkp[i]);
                }

                if (_this64.alAlkp[i].keyword == "MARITAL_STATUS") {
                  _this64.maritalStatus.push(_this64.alAlkp[i]);
                }

                if (_this64.alAlkp[i].keyword == "EDUCATION_BOARD") {
                  _this64.educationBoard.push(_this64.alAlkp[i]);
                }

                if (_this64.alAlkp[i].keyword == "SUBJECT_GROUP") {
                  _this64.subjectGroup.push(_this64.alAlkp[i]);
                }
              }

              console.log("BLOOD GRP : " + _this64.bloodGrp[0].subALKP[0].title);
            });
          } // convenience getter for easy access to form fields

        }, {
          key: "f",
          get: function get() {
            return this.addEmployeeForm.controls;
          }
        }, {
          key: "fAssgn",
          get: function get() {
            return this.addEmployeeAssgnmntForm.controls;
          } //Get not emp created user

        }, {
          key: "getNotEmpUser",
          value: function getNotEmpUser() {
            var _this65 = this;

            return this.systemService.getNotEmpUsers().subscribe(function (data) {
              _this65.notEmpUsers = data;
            }, function (error) {
              alert("error in fetching users data " + error.error.message);
            });
          } // getAllHrcrEmp() {
          //   this.empployeeService.getEmployees().subscribe((data: any) => {
          //     this.allHrcrEmp = data;
          //     console.log("ALL HRCREMP :: " + this.allHrcrEmp.length);
          //   });
          // }
          // create emp basic Info

        }, {
          key: "empBscInfOnSubmit",
          value: function empBscInfOnSubmit() {
            this.submitted = true; // stop here if form is invalid

            if (this.addEmployeeForm.invalid) {
              this.toastr.info("Please insert valid data");
              return;
            }

            if (this.user == null) {
              this.toastr.info("user is requird to select");
              return;
            }

            this.loading = true;

            if (this.isAddMode) {
              this.createHrCrEmp();
            } else {
              this.updateHrCrEmp();
            }
          }
        }, {
          key: "createHrCrEmp",
          value: function createHrCrEmp() {
            var _this66 = this;

            var user = {
              id: this.user.value
            };
            var HrCrEmpData = Object.assign(this.addEmployeeForm.value, {
              user: user,
              alkpBloodGrpIdAlkp: this.getAlkpBloodGrp.value ? {
                id: this.getAlkpBloodGrp.value
              } : null,
              alkpGenderIdAlkp: this.getAlkpGender.value ? {
                id: this.getAlkpGender.value
              } : null,
              alkpMaritalStsIdAlkp: this.getMaritalStatus.value ? {
                id: this.getMaritalStatus.value
              } : null,
              division: this.getDivision.value ? {
                id: this.getDivision.value
              } : null,
              district: this.getDistricts.value ? {
                id: this.getDistricts.value
              } : null,
              upazila: this.getUpazilas.value ? {
                id: this.getUpazilas.value
              } : null,
              union: this.getUnions.value ? {
                id: this.getUnions.value
              } : null
            });
            var jDateObj = HrCrEmpData.joiningDate;
            var convertJoiningDate = this.datePipe.transform(jDateObj, "yyyy-MM-dd").toString().slice(0, 10);
            var dobDateObj = HrCrEmpData.dob;
            var convertDob = this.datePipe.transform(dobDateObj, "yyyy-MM-dd").toString().slice(0, 10);
            HrCrEmpData.joiningDate = convertJoiningDate;
            HrCrEmpData.dob = convertDob;
            console.log(HrCrEmpData);
            this.empployeeService.createEmploy(HrCrEmpData).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["first"])()).subscribe(function (data) {
              _this66.hrCrEmpId = data.id;
              console.log(_this66.hrCrEmpId);

              _this66.toastr.success("Successfully Added Employee");

              _this66.router.navigate(["/employees/employeeprofile/" + _this66.hrCrEmpId], {
                relativeTo: _this66.route
              });
            }, function (error) {
              _this66.toastr.error("Error in creating user ");
            }).add(function () {
              return _this66.loading = false;
            });
          }
        }, {
          key: "updateHrCrEmp",
          value: function updateHrCrEmp() {
            var _this67 = this;

            var HrCrEmpData = Object.assign(this.addEmployeeForm.value, {
              alkpBloodGrpIdAlkp: this.getAlkpBloodGrp.value ? {
                id: this.getAlkpBloodGrp.value
              } : null,
              alkpGenderIdAlkp: this.getAlkpGender.value ? {
                id: this.getAlkpGender.value
              } : null,
              alkpMaritalStsIdAlkp: this.getMaritalStatus.value ? {
                id: this.getMaritalStatus.value
              } : null,
              division: this.getDivision.value ? {
                id: this.getDivision.value
              } : null,
              district: this.getDistricts.value ? {
                id: this.getDistricts.value
              } : null,
              upazila: this.getUpazilas.value ? {
                id: this.getUpazilas.value
              } : null,
              union: this.getUnions.value ? {
                id: this.getUnions.value
              } : null // user: this.user.value ? { id: this.user.value } : null,

            });
            HrCrEmpData.id = this.id;
            var jDateObj = HrCrEmpData.joiningDate;
            var convertJoiningDate = this.datePipe.transform(jDateObj, "yyyy-MM-dd").toString().slice(0, 10);
            var dobDateObj = HrCrEmpData.dob;
            var convertDob = this.datePipe.transform(dobDateObj, "yyyy-MM-dd").toString().slice(0, 10);
            HrCrEmpData.joiningDate = convertJoiningDate;
            HrCrEmpData.dob = convertDob;
            console.log(HrCrEmpData);
            this.empployeeService.updateEmploy(HrCrEmpData).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["first"])()).subscribe(function (data) {
              _this67.hrCrEmpId = data.id;
              console.log(_this67.hrCrEmpId); // this.toastr.success("Emp id is " + this.hrCrEmpId);

              _this67.toastr.success("Successfully updated Employee");

              localStorage.setItem('activeTabName', 'basic');

              _this67.router.navigate(["/employees/employeeprofile/" + _this67.hrCrEmpId], {
                relativeTo: _this67.route
              });
            }, function (error) {
              _this67.toastr.error("Error in updating user ");
            }).add(function () {
              return _this67.loading = false;
            });
          } // Create assignment

        }, {
          key: "empAssignmentInfOnSubmit",
          value: function empAssignmentInfOnSubmit() {
            if (this.hrCrEmpId == null && this.id == null) {
              this.toastr.warning("Employee id not found !! Go to employee profile then edit this employee");
              return;
            } // stop here if form is invalid


            if (this.addEmployeeAssgnmntForm.invalid) {
              this.toastr.info("please insert valid data!!");
              return;
            }

            this.submittedAsgn = true;
            this.assgnmntLoading = true;

            if (this.hrCrEmpAssignment === null) {
              this.createHrCrEmpAssignment();
            } else {
              this.updateHrCrEmpAssignment();
            }
          }
        }, {
          key: "createHrCrEmpAssignment",
          value: function createHrCrEmpAssignment() {
            var _this68 = this;

            // let group = {
            //   id: this.getGroup.value,
            // };
            var HrCrEmpAssignmntData = Object.assign(this.addEmployeeAssgnmntForm.value, this.addEmployeeAssgnmntForm.value.hrCrEmpInChrgId = this.inChargeId ? {
              id: this.inChargeId
            } : null, this.addEmployeeAssgnmntForm.value.hrCrEmpHrmId = this.hrId ? {
              id: this.hrId
            } : null, {
              hrCrEmpId: {
                id: this.hrCrEmpId
              },
              allOrgMstGroupId: this.getGroup.value ? {
                id: this.getGroup.value
              } : null,
              allOrgMstOrganizationId: this.getOrganization.value ? {
                id: this.getOrganization.value
              } : null,
              allOrgMstOperatingUnitId: this.getOperatingUnit.value ? {
                id: this.getOperatingUnit.value
              } : null,
              allOrgMstProductId: this.getProduct.value ? {
                id: this.getProduct.value
              } : null,
              allOrgMstDepartmentId: this.getDepartment.value ? {
                id: this.getDepartment.value
              } : null,
              allOrgMstSectionId: this.getSection.value ? {
                id: this.getSection.value
              } : null,
              allOrgMstSubSectionId: this.getSubsection.value ? {
                id: this.getSubsection.value
              } : null,
              allOrgMstTeamId: this.getTeam.value ? {
                id: this.getTeam.value
              } : null,
              allOrgMstSubTeamId: this.getSubTeam.value ? {
                id: this.getSubTeam.value
              } : null,
              empSts: this.empSts.value ? {
                id: this.empSts.value
              } : null,
              hrEmpDesignations: this.getDesignation.value ? {
                id: this.getDesignation.value
              } : null,
              alkpEmpCatId: this.getCategory.value ? {
                id: this.getCategory.value
              } : null
            });
            console.log("ASSIGNMENT DATA : " + HrCrEmpAssignmntData.hrCrEmpId.id);
            this.empployeeService.saveEmployeeAssignemntData(HrCrEmpAssignmntData).subscribe(function (data) {
              _this68.toastr.success("Assignment saved successfully");

              _this68.router.navigate(["/employees/employeeprofile/" + _this68.hrCrEmpId], {
                relativeTo: _this68.route
              });
            }, function (error) {
              _this68.toastr.error("error in saving assignment ");
            }).add(function () {
              return _this68.loading = false;
            });
          }
        }, {
          key: "updateHrCrEmpAssignment",
          value: function updateHrCrEmpAssignment() {
            var _this69 = this;

            var HrCrEmpAssignmntData = Object.assign(this.addEmployeeAssgnmntForm.value, this.addEmployeeAssgnmntForm.value.hrCrEmpInChrgId = this.inChargeId ? {
              id: this.inChargeId
            } : null, this.addEmployeeAssgnmntForm.value.hrCrEmpHrmId = this.hrId ? {
              id: this.hrId
            } : null, {
              hrCrEmpId: {
                id: this.hrCrEmpId
              },
              allOrgMstGroupId: this.getGroup.value ? {
                id: this.getGroup.value
              } : null,
              allOrgMstOrganizationId: this.getOrganization.value ? {
                id: this.getOrganization.value
              } : null,
              allOrgMstOperatingUnitId: this.getOperatingUnit.value ? {
                id: this.getOperatingUnit.value
              } : null,
              allOrgMstProductId: this.getProduct.value ? {
                id: this.getProduct.value
              } : null,
              allOrgMstDepartmentId: this.getDepartment.value ? {
                id: this.getDepartment.value
              } : null,
              allOrgMstSectionId: this.getSection.value ? {
                id: this.getSection.value
              } : null,
              allOrgMstSubSectionId: this.getSubsection.value ? {
                id: this.getSubsection.value
              } : null,
              allOrgMstTeamId: this.getTeam.value ? {
                id: this.getTeam.value
              } : null,
              allOrgMstSubTeamId: this.getSubTeam.value ? {
                id: this.getSubTeam.value
              } : null,
              empSts: this.empSts.value ? {
                id: this.empSts.value
              } : null,
              hrEmpDesignations: this.getDesignation.value ? {
                id: this.getDesignation.value
              } : null,
              alkpEmpCatId: this.getCategory.value ? {
                id: this.getCategory.value
              } : null
            });
            HrCrEmpAssignmntData.id = this.hrCrEmpAssignment.id;
            this.empployeeService.updateEmployeeAssignment(HrCrEmpAssignmntData).subscribe(function (data) {
              localStorage.setItem('activeTabName', 'assignment');

              _this69.router.navigate(["/employees/employeeprofile/" + _this69.hrCrEmpId], {
                relativeTo: _this69.route
              });

              _this69.toastr.success("Successfully updated assignment");
            }, function (error) {
              _this69.toastr.error("Error in updating assignment ");
            }).add(function () {
              return _this69.loading = false;
            });
          }
        }, {
          key: "empBankAndPayRollSubmit",
          value: function empBankAndPayRollSubmit() {
            if (this.hrCrEmpId == null && this.id == null) {
              this.toastr.warning("Employee id not found !! Go to employee profile then edit this employee");
              return;
            } // stop here if form is invalid


            if (this.addBankAndPayrollForm.invalid) {
              this.toastr.info("please insert valid data!!");
              return;
            } //check gross and basic 


            if (!this.checkGrossVsBasicPlusAlw(parseFloat(this.addBankAndPayrollForm.value.grossSalary), parseFloat(this.addBankAndPayrollForm.value.basicSalary))) {
              this.toastr.info("GrossSal and basicSal+others must be equal");
              return;
            }

            this.submitBank = true;
            this.bankLoading = true;

            if (this.hrCrEmpAssignment === null) {
              this.createBankAndPayroll();
            } else {
              this.updateBankAndPayroll();
            }
          }
        }, {
          key: "createBankAndPayroll",
          value: function createBankAndPayroll() {
            var _this70 = this;

            var bankAssignmentData = Object.assign(this.addBankAndPayrollForm.value, {});
            bankAssignmentData.hrCrEmpId = this.hrCrEmpId;
            console.log(bankAssignmentData);
            this.empployeeService.saveOrUpdateBankAndPayroll(bankAssignmentData).subscribe(function (data) {
              localStorage.setItem('activeTabName', 'payroll');

              _this70.router.navigate(["/employees/employeeprofile/" + _this70.hrCrEmpId], {
                relativeTo: _this70.route
              });

              _this70.toastr.success("Successfully updated assignment");
            }, function (error) {
              _this70.toastr.error("Error in updating assignment ");
            }).add(function () {
              return _this70.loading = false;
            });
          }
        }, {
          key: "updateBankAndPayroll",
          value: function updateBankAndPayroll() {
            var _this71 = this;

            var bankAssignmentData = Object.assign(this.addBankAndPayrollForm.value, {});
            bankAssignmentData.hrCrEmpId = this.hrCrEmpId;
            var activeStrtDateObj = bankAssignmentData.activeStartDate;
            console.log(activeStrtDateObj);
            var convertActiveStartDate = this.datePipe.transform(activeStrtDateObj, "yyyy-MM-dd").toString().slice(0, 10);
            bankAssignmentData.activeStartDate = convertActiveStartDate;
            var activeEndDateObj = bankAssignmentData.activeEndDate;
            var convertActiveEndDateObj = this.datePipe.transform(activeEndDateObj, "yyyy-MM-dd").toString().slice(0, 10);
            bankAssignmentData.activeEndDate = convertActiveEndDateObj;
            console.log(bankAssignmentData);
            this.empployeeService.saveOrUpdateBankAndPayroll(bankAssignmentData).subscribe(function (data) {
              localStorage.setItem('activeTabName', 'payroll');

              _this71.router.navigate(["/employees/employeeprofile/" + _this71.hrCrEmpId], {
                relativeTo: _this71.route
              });

              _this71.toastr.success("Successfully updated assignment");
            }, function (error) {
              _this71.toastr.error("Error in updating assignment ");
            }).add(function () {
              return _this71.loading = false;
            });
          }
        }, {
          key: "empEduFormSubmit",
          value: function empEduFormSubmit() {
            if (this.hrCrEmpId == null && this.id == null) {
              this.toastr.warning("Employee id not found !! Go to employee profile then edit this employee");
              return;
            } // stop here if form is invalid


            if (this.addEducationForm.invalid) {
              this.toastr.info("please insert valid data!!");
              return;
            }

            var editId = this.addEducationForm.get("id").value ? this.addEducationForm.get("id").value : null;

            if (editId == null) {
              this._createHrCrEmpEdu();
            } else {
              this._updateHrCrEmpEdu();
            }
          }
        }, {
          key: "_createHrCrEmpEdu",
          value: function _createHrCrEmpEdu() {
            var _this72 = this;

            var hrCrEmpEdu = Object.assign(this.addEducationForm.value, {
              hrCrEmp: {
                id: this.hrCrEmpId
              },
              alkpEduBoard: this.getEducationBoard.value ? {
                id: this.getEducationBoard.value
              } : null,
              alkpSubGroup: this.getSubjectGroup.value ? {
                id: this.getSubjectGroup.value
              } : null
            });
            this.employeeService.saveHrCrEmpEdu(hrCrEmpEdu).subscribe(function (data) {
              _this72.toastr.success("Successfully saved data");

              _this72.resetEduForm();

              _this72.getEducationData();
            }, function (error) {
              _this72.toastr.error("Error saving data");
            });
          }
        }, {
          key: "_updateHrCrEmpEdu",
          value: function _updateHrCrEmpEdu() {
            var _this73 = this;

            var hrCrEmpEdu = Object.assign(this.addEducationForm.value, {
              hrCrEmp: {
                id: this.hrCrEmpId
              },
              alkpEduBoard: this.getEducationBoard.value ? {
                id: this.getEducationBoard.value
              } : null,
              alkpSubGroup: this.getSubjectGroup.value ? {
                id: this.getSubjectGroup.value
              } : null
            });
            this.employeeService.edithrCrEmpEducation(hrCrEmpEdu).subscribe(function (data) {
              _this73.toastr.success("Successfully saved data");

              _this73.resetEduForm();

              _this73.getEducationData();
            }, function (error) {
              _this73.toastr.error("Error saving data");
            });
          }
        }, {
          key: "getEducationData",
          value: function getEducationData() {
            var _this74 = this;

            if (this.hrCrEmpId) {
              this.employeeService.findhrCrEmpEduByEmpId(this.hrCrEmpId).subscribe(function (data) {
                _this74.hrCrEmpEduInfo = data;
              }, function (error) {
                _this74.toastr.error("Error fetching data");
              });
            }
          }
        }, {
          key: "editEducationClickEvent",
          value: function editEducationClickEvent(id) {
            var _this75 = this;

            this.employeeService.findhrCrEmpEduById(id).subscribe(function (data) {
              if (data.alkpEduBoard != null) {
                var eduBoard = data.alkpEduBoard;
                data.alkpEduBoard = eduBoard.id;
              }

              if (data.alkpSubGroup != null) {
                var subjectGroup = data.alkpSubGroup;
                data.alkpSubGroup = subjectGroup.id;
              }

              _this75.addEducationForm.patchValue(data);
            });
          }
        }, {
          key: "deleteHrCrEmpEducation",
          value: function deleteHrCrEmpEducation() {
            var _this76 = this;

            this.employeeService.deleteHrCrEmpEducation(this.tempEduId).subscribe(function () {
              _this76.toastr.success("Successfully deleted HrCrEmpEducation");

              $("#delete_hrCrEmpEducation").modal("hide");

              _this76.getEducationData();
            });
          }
        }, {
          key: "getDivision",
          get: function get() {
            return this.addEmployeeForm.get("division");
          }
        }, {
          key: "getDistricts",
          get: function get() {
            return this.addEmployeeForm.get("district");
          }
        }, {
          key: "getUpazilas",
          get: function get() {
            return this.addEmployeeForm.get("upazila");
          }
        }, {
          key: "getUnions",
          get: function get() {
            return this.addEmployeeForm.get("union");
          }
        }, {
          key: "getAlkpBloodGrp",
          get: function get() {
            return this.addEmployeeForm.get("alkpBloodGrpIdAlkp");
          }
        }, {
          key: "getMaritalStatus",
          get: function get() {
            return this.addEmployeeForm.get("alkpMaritalStsIdAlkp");
          }
        }, {
          key: "getAlkpGender",
          get: function get() {
            return this.addEmployeeForm.get("alkpGenderIdAlkp");
          }
        }, {
          key: "user",
          get: function get() {
            return this.addEmployeeForm.get("user");
          } //get Assignmenmt relational id's

        }, {
          key: "getGroup",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstGroupId");
          }
        }, {
          key: "getOrganization",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstOrganizationId");
          }
        }, {
          key: "getOperatingUnit",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstOperatingUnitId");
          }
        }, {
          key: "getProduct",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstProductId");
          }
        }, {
          key: "getDepartment",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstDepartmentId");
          }
        }, {
          key: "getSection",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstSectionId");
          }
        }, {
          key: "getSubsection",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstSubSectionId");
          }
        }, {
          key: "getTeam",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstTeamId");
          }
        }, {
          key: "getSubTeam",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("allOrgMstSubTeamId");
          }
        }, {
          key: "getDesignation",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("hrEmpDesignations");
          }
        }, {
          key: "empSts",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("empSts");
          }
        }, {
          key: "getCategory",
          get: function get() {
            return this.addEmployeeAssgnmntForm.get("alkpEmpCatId");
          }
        }, {
          key: "getEducationBoard",
          get: function get() {
            return this.addEducationForm.get("alkpEduBoard");
          }
        }, {
          key: "getSubjectGroup",
          get: function get() {
            return this.addEducationForm.get("alkpSubGroup");
          } // get getuniversityId(){
          //   return this.addEducationForm.get("universityId");
          // }

        }, {
          key: "initAllowance",
          value: function initAllowance(value) {
            console.log("@FROM INIT ALLOWANCE");

            if (this.payrollElementAssignment == null) {
              this.addBankAndPayrollForm.patchValue({
                medicalAlwPct: 0.0,
                dearnessAlwPct: 0.0,
                conveyanceAlwPct: 0.0,
                transportAlwPct: 0.0,
                specialAlwPct: 0.0,
                foodAllowance: 0.0,
                houseRentAlwPct: 0.0
              });
            }
          }
        }, {
          key: "inputGrossSal",
          value: function inputGrossSal(value) {
            this.addBankAndPayrollForm.patchValue({
              basicSalary: value
            });
          }
        }, {
          key: "checkGrossVsBasicPlusAlw",
          value: function checkGrossVsBasicPlusAlw(grossSal, basicSal) {
            var percntVal = grossSal * (this.allowancePercents / 100);
            var addEqvVal = basicSal + percntVal;

            if (basicSal > grossSal) {
              return false;
            } else if (grossSal !== addEqvVal) {
              return false;
            } else {
              return true;
            }
          }
        }, {
          key: "inputAlowance",
          value: function inputAlowance(value, actionField) {
            if (actionField == 'basicSalary') {
              // basic not be grater than gross chk
              var grossSal = parseFloat(this.addBankAndPayrollForm.value.grossSalary);
              var basicSalary = parseFloat(this.addBankAndPayrollForm.value.basicSalary);
              var percntVal = grossSal * (this.allowancePercents / 100);
              var addEqvVal = basicSalary + percntVal;

              if (!this.checkGrossVsBasicPlusAlw(grossSal, basicSalary)) {
                this.toastr.info("error in set val");
                return;
              }
            } else {
              if (this.addBankAndPayrollForm.value.grossSalary == null || this.addBankAndPayrollForm.value.basicSalary == null) {
                this.toastr.info("please input Gross salary first");
                return;
              }

              this.summationPercentOfAllowance();
              var currGrossSal = this.addBankAndPayrollForm.value.grossSalary;
              var calculateBasicSal = currGrossSal - currGrossSal * (this.allowancePercents / 100);
              this.addBankAndPayrollForm.patchValue({
                basicSalary: calculateBasicSal
              });
            }
          } // calculate total percents of all allowance

        }, {
          key: "summationPercentOfAllowance",
          value: function summationPercentOfAllowance() {
            var medicalAllowance = this.addBankAndPayrollForm.value.medicalAlwPct ? this.addBankAndPayrollForm.value.medicalAlwPct : 0;
            var dearnessAlwPct = this.addBankAndPayrollForm.value.dearnessAlwPct ? this.addBankAndPayrollForm.value.dearnessAlwPct : 0;
            var conveyanceAlwPct = this.addBankAndPayrollForm.value.conveyanceAlwPct ? this.addBankAndPayrollForm.value.conveyanceAlwPct : 0;
            var transportAlwPct = this.addBankAndPayrollForm.value.transportAlwPct ? this.addBankAndPayrollForm.value.transportAlwPct : 0;
            var specialAlwPct = this.addBankAndPayrollForm.value.specialAlwPct ? this.addBankAndPayrollForm.value.specialAlwPct : 0;
            var foodAllowance = this.addBankAndPayrollForm.value.foodAllowance ? this.addBankAndPayrollForm.value.foodAllowance : 0;
            var houseRentAlwPct = this.addBankAndPayrollForm.value.houseRentAlwPct ? this.addBankAndPayrollForm.value.houseRentAlwPct : 0;
            var total = parseFloat(medicalAllowance) + parseFloat(dearnessAlwPct) + parseFloat(conveyanceAlwPct) + parseFloat(transportAlwPct) + parseFloat(specialAlwPct) + parseFloat(foodAllowance) + parseFloat(houseRentAlwPct);
            this.allowancePercents = total;
            console.log("TOTAL PERCENTAGE FROM SUMMATION " + this.allowancePercents);
          }
        }, {
          key: "resetEduForm",
          value: function resetEduForm() {
            this.addEducationForm.reset();
          }
        }]);

        return AddEmployeeComponent;
      }();

      AddEmployeeComponent.ctorParameters = function () {
        return [{
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_9__["ToastrService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_15__["EmployeeService"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
        }, {
          type: src_app_all_modules_settings_systems_services_system_service__WEBPACK_IMPORTED_MODULE_13__["SystemService"]
        }, {
          type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]
        }, {
          type: src_app_all_modules_settings_common_services_common_service__WEBPACK_IMPORTED_MODULE_12__["CommonService"]
        }, {
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_15__["EmployeeService"]
        }, {
          type: src_app_all_modules_payroll_service_payroll_service__WEBPACK_IMPORTED_MODULE_11__["PayrollService"]
        }, {
          type: ngx_spinner__WEBPACK_IMPORTED_MODULE_8__["NgxSpinnerService"]
        }];
      };

      AddEmployeeComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
        selector: "app-add-employee",
        template: _raw_loader_add_employee_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_add_employee_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [ngx_toastr__WEBPACK_IMPORTED_MODULE_9__["ToastrService"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _services_employee_service__WEBPACK_IMPORTED_MODULE_15__["EmployeeService"], _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"], src_app_all_modules_settings_systems_services_system_service__WEBPACK_IMPORTED_MODULE_13__["SystemService"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"], src_app_all_modules_settings_common_services_common_service__WEBPACK_IMPORTED_MODULE_12__["CommonService"], _services_employee_service__WEBPACK_IMPORTED_MODULE_15__["EmployeeService"], src_app_all_modules_payroll_service_payroll_service__WEBPACK_IMPORTED_MODULE_11__["PayrollService"], ngx_spinner__WEBPACK_IMPORTED_MODULE_8__["NgxSpinnerService"]])], AddEmployeeComponent);
      /***/
    },

    /***/
    "gVVK":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/sl.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function gVVK(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Slovenian [sl]
      //! author : Robert Sedovšek : https://github.com/sedovsek
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var result = number + ' ';

          switch (key) {
            case 's':
              return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';

            case 'ss':
              if (number === 1) {
                result += withoutSuffix ? 'sekundo' : 'sekundi';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
              } else {
                result += 'sekund';
              }

              return result;

            case 'm':
              return withoutSuffix ? 'ena minuta' : 'eno minuto';

            case 'mm':
              if (number === 1) {
                result += withoutSuffix ? 'minuta' : 'minuto';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
              } else {
                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
              }

              return result;

            case 'h':
              return withoutSuffix ? 'ena ura' : 'eno uro';

            case 'hh':
              if (number === 1) {
                result += withoutSuffix ? 'ura' : 'uro';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'uri' : 'urama';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'ure' : 'urami';
              } else {
                result += withoutSuffix || isFuture ? 'ur' : 'urami';
              }

              return result;

            case 'd':
              return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';

            case 'dd':
              if (number === 1) {
                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
              } else {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
              }

              return result;

            case 'M':
              return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';

            case 'MM':
              if (number === 1) {
                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
              } else {
                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
              }

              return result;

            case 'y':
              return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';

            case 'yy':
              if (number === 1) {
                result += withoutSuffix || isFuture ? 'leto' : 'letom';
              } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
              } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'leta' : 'leti';
              } else {
                result += withoutSuffix || isFuture ? 'let' : 'leti';
              }

              return result;
          }
        }

        var sl = moment.defineLocale('sl', {
          months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
          monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
          weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
          weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD. MM. YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[danes ob] LT',
            nextDay: '[jutri ob] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[v] [nedeljo] [ob] LT';

                case 3:
                  return '[v] [sredo] [ob] LT';

                case 6:
                  return '[v] [soboto] [ob] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[v] dddd [ob] LT';
              }
            },
            lastDay: '[včeraj ob] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                  return '[prejšnjo] [nedeljo] [ob] LT';

                case 3:
                  return '[prejšnjo] [sredo] [ob] LT';

                case 6:
                  return '[prejšnjo] [soboto] [ob] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[prejšnji] dddd [ob] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'čez %s',
            past: 'pred %s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return sl;
      });
      /***/

    },

    /***/
    "gdOh":
    /*!****************************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/employee-profile/employee-profile.component.css ***!
      \****************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function gdOh(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlLXByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7QUFDZCIsImZpbGUiOiJlbXBsb3llZS1wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufVxyXG4iXX0= */";
      /***/
    },

    /***/
    "gekB":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/fi.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function gekB(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Finnish [fi]
      //! author : Tarmo Aidantausta : https://github.com/bleadof
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
            numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];

        function translate(number, withoutSuffix, key, isFuture) {
          var result = '';

          switch (key) {
            case 's':
              return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';

            case 'ss':
              result = isFuture ? 'sekunnin' : 'sekuntia';
              break;

            case 'm':
              return isFuture ? 'minuutin' : 'minuutti';

            case 'mm':
              result = isFuture ? 'minuutin' : 'minuuttia';
              break;

            case 'h':
              return isFuture ? 'tunnin' : 'tunti';

            case 'hh':
              result = isFuture ? 'tunnin' : 'tuntia';
              break;

            case 'd':
              return isFuture ? 'päivän' : 'päivä';

            case 'dd':
              result = isFuture ? 'päivän' : 'päivää';
              break;

            case 'M':
              return isFuture ? 'kuukauden' : 'kuukausi';

            case 'MM':
              result = isFuture ? 'kuukauden' : 'kuukautta';
              break;

            case 'y':
              return isFuture ? 'vuoden' : 'vuosi';

            case 'yy':
              result = isFuture ? 'vuoden' : 'vuotta';
              break;
          }

          result = verbalNumber(number, isFuture) + ' ' + result;
          return result;
        }

        function verbalNumber(number, isFuture) {
          return number < 10 ? isFuture ? numbersFuture[number] : numbersPast[number] : number;
        }

        var fi = moment.defineLocale('fi', {
          months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
          monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
          weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
          weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
          weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM[ta] YYYY',
            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l: 'D.M.YYYY',
            ll: 'Do MMM YYYY',
            lll: 'Do MMM YYYY, [klo] HH.mm',
            llll: 'ddd, Do MMM YYYY, [klo] HH.mm'
          },
          calendar: {
            sameDay: '[tänään] [klo] LT',
            nextDay: '[huomenna] [klo] LT',
            nextWeek: 'dddd [klo] LT',
            lastDay: '[eilen] [klo] LT',
            lastWeek: '[viime] dddd[na] [klo] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s päästä',
            past: '%s sitten',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return fi;
      });
      /***/

    },

    /***/
    "gjCT":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ar-sa.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function gjCT(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Saudi Arabia) [ar-sa]
      //! author : Suhail Alkowaileet : https://github.com/xsoh
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '١',
          2: '٢',
          3: '٣',
          4: '٤',
          5: '٥',
          6: '٦',
          7: '٧',
          8: '٨',
          9: '٩',
          0: '٠'
        },
            numberMap = {
          '١': '1',
          '٢': '2',
          '٣': '3',
          '٤': '4',
          '٥': '5',
          '٦': '6',
          '٧': '7',
          '٨': '8',
          '٩': '9',
          '٠': '0'
        };
        var arSa = moment.defineLocale('ar-sa', {
          months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
          monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          meridiemParse: /ص|م/,
          isPM: function isPM(input) {
            return 'م' === input;
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ص';
            } else {
              return 'م';
            }
          },
          calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
          },
          preparse: function preparse(string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
              return numberMap[match];
            }).replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            }).replace(/,/g, '،');
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return arSa;
      });
      /***/

    },

    /***/
    "hKrs":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/bg.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function hKrs(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bulgarian [bg]
      //! author : Krasen Borisov : https://github.com/kraz
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var bg = moment.defineLocale('bg', {
          months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
          monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
          weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
          weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
          weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[Днес в] LT',
            nextDay: '[Утре в] LT',
            nextWeek: 'dddd [в] LT',
            lastDay: '[Вчера в] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                case 3:
                case 6:
                  return '[Миналата] dddd [в] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[Миналия] dddd [в] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'след %s',
            past: 'преди %s',
            s: 'няколко секунди',
            ss: '%d секунди',
            m: 'минута',
            mm: '%d минути',
            h: 'час',
            hh: '%d часа',
            d: 'ден',
            dd: '%d дена',
            w: 'седмица',
            ww: '%d седмици',
            M: 'месец',
            MM: '%d месеца',
            y: 'година',
            yy: '%d години'
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
          ordinal: function ordinal(number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;

            if (number === 0) {
              return number + '-ев';
            } else if (last2Digits === 0) {
              return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
              return number + '-ти';
            } else if (lastDigit === 1) {
              return number + '-ви';
            } else if (lastDigit === 2) {
              return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
              return number + '-ми';
            } else {
              return number + '-ти';
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return bg;
      });
      /***/

    },

    /***/
    "honF":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/my.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function honF(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Burmese [my]
      //! author : Squar team, mysquar.com
      //! author : David Rossellat : https://github.com/gholadr
      //! author : Tin Aung Lin : https://github.com/thanyawzinmin
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '၁',
          2: '၂',
          3: '၃',
          4: '၄',
          5: '၅',
          6: '၆',
          7: '၇',
          8: '၈',
          9: '၉',
          0: '၀'
        },
            numberMap = {
          '၁': '1',
          '၂': '2',
          '၃': '3',
          '၄': '4',
          '၅': '5',
          '၆': '6',
          '၇': '7',
          '၈': '8',
          '၉': '9',
          '၀': '0'
        };
        var my = moment.defineLocale('my', {
          months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
          monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
          weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
          weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
          weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss: '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
          },
          preparse: function preparse(string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return my;
      });
      /***/

    },

    /***/
    "iEDd":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/gl.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function iEDd(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Galician [gl]
      //! author : Juan G. Hurtado : https://github.com/juanghurtado
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var gl = moment.defineLocale('gl', {
          months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
          monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
          weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'
          },
          calendar: {
            sameDay: function sameDay() {
              return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextDay: function nextDay() {
              return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextWeek: function nextWeek() {
              return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
            },
            lastDay: function lastDay() {
              return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
            },
            lastWeek: function lastWeek() {
              return '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: function future(str) {
              if (str.indexOf('un') === 0) {
                return 'n' + str;
              }

              return 'en ' + str;
            },
            past: 'hai %s',
            s: 'uns segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'unha hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un ano',
            yy: '%d anos'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return gl;
      });
      /***/

    },

    /***/
    "iYuL":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/es.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function iYuL(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish [es]
      //! author : Julio Napurí : https://github.com/julionc
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
            _monthsShort3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
            monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

        var es = moment.defineLocale('es', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
          monthsShort: function monthsShort(m, format) {
            if (!m) {
              return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
              return _monthsShort3[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'
          },
          calendar: {
            sameDay: function sameDay() {
              return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function nextDay() {
              return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function nextWeek() {
              return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function lastDay() {
              return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function lastWeek() {
              return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          },
          invalidDate: 'Fecha inválida'
        });
        return es;
      });
      /***/

    },

    /***/
    "jD6U":
    /*!**********************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/employee-list/employee-list.component.css ***!
      \**********************************************************************************************************/

    /*! exports provided: default */

    /***/
    function jD6U(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n.img-avatar{\r\n\theight: 38px;\r\n\twidth: 38px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7QUFDZDtBQUNBO0NBQ0MsWUFBWTtDQUNaLFdBQVc7QUFDWiIsImZpbGUiOiJlbXBsb3llZS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufVxyXG4uaW1nLWF2YXRhcntcclxuXHRoZWlnaHQ6IDM4cHg7XHJcblx0d2lkdGg6IDM4cHg7XHJcbn0iXX0= */";
      /***/
    },

    /***/
    "jUeY":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/el.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function jUeY(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Greek [el]
      //! author : Aggelos Karalias : https://github.com/mehiel
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function isFunction(input) {
          return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
        }

        var el = moment.defineLocale('el', {
          monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
          monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
          months: function months(momentToFormat, format) {
            if (!momentToFormat) {
              return this._monthsNominativeEl;
            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) {
              // if there is a day number before 'MMMM'
              return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
              return this._monthsNominativeEl[momentToFormat.month()];
            }
          },
          monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
          weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
          weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
          weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'μμ' : 'ΜΜ';
            } else {
              return isLower ? 'πμ' : 'ΠΜ';
            }
          },
          isPM: function isPM(input) {
            return (input + '').toLowerCase()[0] === 'μ';
          },
          meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
          longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A'
          },
          calendarEl: {
            sameDay: '[Σήμερα {}] LT',
            nextDay: '[Αύριο {}] LT',
            nextWeek: 'dddd [{}] LT',
            lastDay: '[Χθες {}] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 6:
                  return '[το προηγούμενο] dddd [{}] LT';

                default:
                  return '[την προηγούμενη] dddd [{}] LT';
              }
            },
            sameElse: 'L'
          },
          calendar: function calendar(key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();

            if (isFunction(output)) {
              output = output.apply(mom);
            }

            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
          },
          relativeTime: {
            future: 'σε %s',
            past: '%s πριν',
            s: 'λίγα δευτερόλεπτα',
            ss: '%d δευτερόλεπτα',
            m: 'ένα λεπτό',
            mm: '%d λεπτά',
            h: 'μία ώρα',
            hh: '%d ώρες',
            d: 'μία μέρα',
            dd: '%d μέρες',
            M: 'ένας μήνας',
            MM: '%d μήνες',
            y: 'ένας χρόνος',
            yy: '%d χρόνια'
          },
          dayOfMonthOrdinalParse: /\d{1,2}η/,
          ordinal: '%dη',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4st is the first week of the year.

          }
        });
        return el;
      });
      /***/

    },

    /***/
    "jVdC":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/pl.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function jVdC(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Polish [pl]
      //! author : Rafal Hirsz : https://github.com/evoL
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
            monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_'),
            monthsParse = [/^sty/i, /^lut/i, /^mar/i, /^kwi/i, /^maj/i, /^cze/i, /^lip/i, /^sie/i, /^wrz/i, /^paź/i, /^lis/i, /^gru/i];

        function plural(n) {
          return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
        }

        function translate(number, withoutSuffix, key) {
          var result = number + ' ';

          switch (key) {
            case 'ss':
              return result + (plural(number) ? 'sekundy' : 'sekund');

            case 'm':
              return withoutSuffix ? 'minuta' : 'minutę';

            case 'mm':
              return result + (plural(number) ? 'minuty' : 'minut');

            case 'h':
              return withoutSuffix ? 'godzina' : 'godzinę';

            case 'hh':
              return result + (plural(number) ? 'godziny' : 'godzin');

            case 'ww':
              return result + (plural(number) ? 'tygodnie' : 'tygodni');

            case 'MM':
              return result + (plural(number) ? 'miesiące' : 'miesięcy');

            case 'yy':
              return result + (plural(number) ? 'lata' : 'lat');
          }
        }

        var pl = moment.defineLocale('pl', {
          months: function months(momentToFormat, format) {
            if (!momentToFormat) {
              return monthsNominative;
            } else if (/D MMMM/.test(format)) {
              return monthsSubjective[momentToFormat.month()];
            } else {
              return monthsNominative[momentToFormat.month()];
            }
          },
          monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
          weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
          weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[W niedzielę o] LT';

                case 2:
                  return '[We wtorek o] LT';

                case 3:
                  return '[W środę o] LT';

                case 6:
                  return '[W sobotę o] LT';

                default:
                  return '[W] dddd [o] LT';
              }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                  return '[W zeszłą niedzielę o] LT';

                case 3:
                  return '[W zeszłą środę o] LT';

                case 6:
                  return '[W zeszłą sobotę o] LT';

                default:
                  return '[W zeszły] dddd [o] LT';
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'za %s',
            past: '%s temu',
            s: 'kilka sekund',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: '1 dzień',
            dd: '%d dni',
            w: 'tydzień',
            ww: translate,
            M: 'miesiąc',
            MM: translate,
            y: 'rok',
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return pl;
      });
      /***/

    },

    /***/
    "jfSC":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/fa.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function jfSC(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Persian [fa]
      //! author : Ebrahim Byagowi : https://github.com/ebraminio
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '۱',
          2: '۲',
          3: '۳',
          4: '۴',
          5: '۵',
          6: '۶',
          7: '۷',
          8: '۸',
          9: '۹',
          0: '۰'
        },
            numberMap = {
          '۱': '1',
          '۲': '2',
          '۳': '3',
          '۴': '4',
          '۵': '5',
          '۶': '6',
          '۷': '7',
          '۸': '8',
          '۹': '9',
          '۰': '0'
        };
        var fa = moment.defineLocale('fa', {
          months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
          monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
          weekdays: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split('_'),
          weekdaysShort: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split('_'),
          weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          meridiemParse: /قبل از ظهر|بعد از ظهر/,
          isPM: function isPM(input) {
            return /بعد از ظهر/.test(input);
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'قبل از ظهر';
            } else {
              return 'بعد از ظهر';
            }
          },
          calendar: {
            sameDay: '[امروز ساعت] LT',
            nextDay: '[فردا ساعت] LT',
            nextWeek: 'dddd [ساعت] LT',
            lastDay: '[دیروز ساعت] LT',
            lastWeek: 'dddd [پیش] [ساعت] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'در %s',
            past: '%s پیش',
            s: 'چند ثانیه',
            ss: '%d ثانیه',
            m: 'یک دقیقه',
            mm: '%d دقیقه',
            h: 'یک ساعت',
            hh: '%d ساعت',
            d: 'یک روز',
            dd: '%d روز',
            M: 'یک ماه',
            MM: '%d ماه',
            y: 'یک سال',
            yy: '%d سال'
          },
          preparse: function preparse(string) {
            return string.replace(/[۰-۹]/g, function (match) {
              return numberMap[match];
            }).replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            }).replace(/,/g, '،');
          },
          dayOfMonthOrdinalParse: /\d{1,2}م/,
          ordinal: '%dم',
          week: {
            dow: 6,
            // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return fa;
      });
      /***/

    },

    /***/
    "jnO4":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ar.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function jnO4(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic [ar]
      //! author : Abdel Said: https://github.com/abdelsaid
      //! author : Ahmed Elkhatib
      //! author : forabi https://github.com/forabi
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '١',
          2: '٢',
          3: '٣',
          4: '٤',
          5: '٥',
          6: '٦',
          7: '٧',
          8: '٨',
          9: '٩',
          0: '٠'
        },
            numberMap = {
          '١': '1',
          '٢': '2',
          '٣': '3',
          '٤': '4',
          '٥': '5',
          '٦': '6',
          '٧': '7',
          '٨': '8',
          '٩': '9',
          '٠': '0'
        },
            pluralForm = function pluralForm(n) {
          return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
        },
            plurals = {
          s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
          m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
          h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
          d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
          M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
          y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
        },
            pluralize = function pluralize(u) {
          return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];

            if (f === 2) {
              str = str[withoutSuffix ? 0 : 1];
            }

            return str.replace(/%d/i, number);
          };
        },
            months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];

        var ar = moment.defineLocale('ar', {
          months: months,
          monthsShort: months,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: "D/\u200FM/\u200FYYYY",
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          meridiemParse: /ص|م/,
          isPM: function isPM(input) {
            return 'م' === input;
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ص';
            } else {
              return 'م';
            }
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y')
          },
          preparse: function preparse(string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
              return numberMap[match];
            }).replace(/،/g, ',');
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            }).replace(/,/g, '،');
          },
          week: {
            dow: 6,
            // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return ar;
      });
      /***/

    },

    /***/
    "kEOa":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/bn.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function kEOa(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bengali [bn]
      //! author : Kaushik Gandhi : https://github.com/kaushikgandhi
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '১',
          2: '২',
          3: '৩',
          4: '৪',
          5: '৫',
          6: '৬',
          7: '৭',
          8: '৮',
          9: '৯',
          0: '০'
        },
            numberMap = {
          '১': '1',
          '২': '2',
          '৩': '3',
          '৪': '4',
          '৫': '5',
          '৬': '6',
          '৭': '7',
          '৮': '8',
          '৯': '9',
          '০': '0'
        };
        var bn = moment.defineLocale('bn', {
          months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
          monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
          weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
          weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
          weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
          longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়'
          },
          calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর'
          },
          preparse: function preparse(string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'রাত' && hour >= 4 || meridiem === 'দুপুর' && hour < 5 || meridiem === 'বিকাল') {
              return hour + 12;
            } else {
              return hour;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'রাত';
            } else if (hour < 10) {
              return 'সকাল';
            } else if (hour < 17) {
              return 'দুপুর';
            } else if (hour < 20) {
              return 'বিকাল';
            } else {
              return 'রাত';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return bn;
      });
      /***/

    },

    /***/
    "kOpN":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/zh-tw.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function kOpN(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Chinese (Taiwan) [zh-tw]
      //! author : Ben : https://github.com/ben-lin
      //! author : Chris Lam : https://github.com/hehachris
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var zhTw = moment.defineLocale('zh-tw', {
          months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
          monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
          weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
          weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
          weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm'
          },
          meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
              return hour;
            } else if (meridiem === '中午') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            var hm = hour * 100 + minute;

            if (hm < 600) {
              return '凌晨';
            } else if (hm < 900) {
              return '早上';
            } else if (hm < 1130) {
              return '上午';
            } else if (hm < 1230) {
              return '中午';
            } else if (hm < 1800) {
              return '下午';
            } else {
              return '晚上';
            }
          },
          calendar: {
            sameDay: '[今天] LT',
            nextDay: '[明天] LT',
            nextWeek: '[下]dddd LT',
            lastDay: '[昨天] LT',
            lastWeek: '[上]dddd LT',
            sameElse: 'L'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + '日';

              case 'M':
                return number + '月';

              case 'w':
              case 'W':
                return number + '週';

              default:
                return number;
            }
          },
          relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年'
          }
        });
        return zhTw;
      });
      /***/

    },

    /***/
    "l5ep":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/cy.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function l5ep(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Welsh [cy]
      //! author : Robert Allen : https://github.com/robgallen
      //! author : https://github.com/ryangreaves
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var cy = moment.defineLocale('cy', {
          months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
          monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
          weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
          weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
          weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
          weekdaysParseExact: true,
          // time formats are the same as en-gb
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
          // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
          ordinal: function ordinal(number) {
            var b = number,
                output = '',
                lookup = ['', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
            'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
            ];

            if (b > 20) {
              if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                output = 'fed'; // not 30ain, 70ain or 90ain
              } else {
                output = 'ain';
              }
            } else if (b > 0) {
              output = lookup[b];
            }

            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return cy;
      });
      /***/

    },

    /***/
    "lXzo":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ru.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function lXzo(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Russian [ru]
      //! author : Viktorminator : https://github.com/Viktorminator
      //! author : Menelion Elensúle : https://github.com/Oire
      //! author : Коренберг Марк : https://github.com/socketpair
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function plural(word, num) {
          var forms = word.split('_');
          return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
        }

        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            hh: 'час_часа_часов',
            dd: 'день_дня_дней',
            ww: 'неделя_недели_недель',
            MM: 'месяц_месяца_месяцев',
            yy: 'год_года_лет'
          };

          if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
          } else {
            return number + ' ' + plural(format[key], +number);
          }
        }

        var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; // http://new.gramota.ru/spravka/rules/139-prop : § 103
        // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
        // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753

        var ru = moment.defineLocale('ru', {
          months: {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
          },
          monthsShort: {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
          },
          weekdays: {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/
          },
          weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
          weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
          monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
          // копия предыдущего
          monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
          // полные названия с падежами
          monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
          // Выражение, которое соответствует только сокращённым формам
          monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., H:mm',
            LLLL: 'dddd, D MMMM YYYY г., H:mm'
          },
          calendar: {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function nextWeek(now) {
              if (now.week() !== this.week()) {
                switch (this.day()) {
                  case 0:
                    return '[В следующее] dddd, [в] LT';

                  case 1:
                  case 2:
                  case 4:
                    return '[В следующий] dddd, [в] LT';

                  case 3:
                  case 5:
                  case 6:
                    return '[В следующую] dddd, [в] LT';
                }
              } else {
                if (this.day() === 2) {
                  return '[Во] dddd, [в] LT';
                } else {
                  return '[В] dddd, [в] LT';
                }
              }
            },
            lastWeek: function lastWeek(now) {
              if (now.week() !== this.week()) {
                switch (this.day()) {
                  case 0:
                    return '[В прошлое] dddd, [в] LT';

                  case 1:
                  case 2:
                  case 4:
                    return '[В прошлый] dddd, [в] LT';

                  case 3:
                  case 5:
                  case 6:
                    return '[В прошлую] dddd, [в] LT';
                }
              } else {
                if (this.day() === 2) {
                  return '[Во] dddd, [в] LT';
                } else {
                  return '[В] dddd, [в] LT';
                }
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'через %s',
            past: '%s назад',
            s: 'несколько секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'час',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            w: 'неделя',
            ww: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural
          },
          meridiemParse: /ночи|утра|дня|вечера/i,
          isPM: function isPM(input) {
            return /^(дня|вечера)$/.test(input);
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'ночи';
            } else if (hour < 12) {
              return 'утра';
            } else if (hour < 17) {
              return 'дня';
            } else {
              return 'вечера';
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
                return number + '-й';

              case 'D':
                return number + '-го';

              case 'w':
              case 'W':
                return number + '-я';

              default:
                return number;
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return ru;
      });
      /***/

    },

    /***/
    "lYtQ":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/mn.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function lYtQ(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Mongolian [mn]
      //! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function translate(number, withoutSuffix, key, isFuture) {
          switch (key) {
            case 's':
              return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';

            case 'ss':
              return number + (withoutSuffix ? ' секунд' : ' секундын');

            case 'm':
            case 'mm':
              return number + (withoutSuffix ? ' минут' : ' минутын');

            case 'h':
            case 'hh':
              return number + (withoutSuffix ? ' цаг' : ' цагийн');

            case 'd':
            case 'dd':
              return number + (withoutSuffix ? ' өдөр' : ' өдрийн');

            case 'M':
            case 'MM':
              return number + (withoutSuffix ? ' сар' : ' сарын');

            case 'y':
            case 'yy':
              return number + (withoutSuffix ? ' жил' : ' жилийн');

            default:
              return number;
          }
        }

        var mn = moment.defineLocale('mn', {
          months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
          monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
          monthsParseExact: true,
          weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
          weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
          weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY оны MMMMын D',
            LLL: 'YYYY оны MMMMын D HH:mm',
            LLLL: 'dddd, YYYY оны MMMMын D HH:mm'
          },
          meridiemParse: /ҮӨ|ҮХ/i,
          isPM: function isPM(input) {
            return input === 'ҮХ';
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ҮӨ';
            } else {
              return 'ҮХ';
            }
          },
          calendar: {
            sameDay: '[Өнөөдөр] LT',
            nextDay: '[Маргааш] LT',
            nextWeek: '[Ирэх] dddd LT',
            lastDay: '[Өчигдөр] LT',
            lastWeek: '[Өнгөрсөн] dddd LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s дараа',
            past: '%s өмнө',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                return number + ' өдөр';

              default:
                return number;
            }
          }
        });
        return mn;
      });
      /***/

    },

    /***/
    "lgnt":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ky.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function lgnt(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Kyrgyz [ky]
      //! author : Chyngyz Arystan uulu : https://github.com/chyngyz
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var suffixes = {
          0: '-чү',
          1: '-чи',
          2: '-чи',
          3: '-чү',
          4: '-чү',
          5: '-чи',
          6: '-чы',
          7: '-чи',
          8: '-чи',
          9: '-чу',
          10: '-чу',
          20: '-чы',
          30: '-чу',
          40: '-чы',
          50: '-чү',
          60: '-чы',
          70: '-чи',
          80: '-чи',
          90: '-чу',
          100: '-чү'
        };
        var ky = moment.defineLocale('ky', {
          months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
          monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
          weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
          weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
          weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Бүгүн саат] LT',
            nextDay: '[Эртең саат] LT',
            nextWeek: 'dddd [саат] LT',
            lastDay: '[Кечээ саат] LT',
            lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s ичинде',
            past: '%s мурун',
            s: 'бирнече секунд',
            ss: '%d секунд',
            m: 'бир мүнөт',
            mm: '%d мүнөт',
            h: 'бир саат',
            hh: '%d саат',
            d: 'бир күн',
            dd: '%d күн',
            M: 'бир ай',
            MM: '%d ай',
            y: 'бир жыл',
            yy: '%d жыл'
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
          ordinal: function ordinal(number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return ky;
      });
      /***/

    },

    /***/
    "loYQ":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/bn-bd.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function loYQ(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bengali (Bangladesh) [bn-bd]
      //! author : Asraf Hossain Patoary : https://github.com/ashwoolford
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var symbolMap = {
          1: '১',
          2: '২',
          3: '৩',
          4: '৪',
          5: '৫',
          6: '৬',
          7: '৭',
          8: '৮',
          9: '৯',
          0: '০'
        },
            numberMap = {
          '১': '1',
          '২': '2',
          '৩': '3',
          '৪': '4',
          '৫': '5',
          '৬': '6',
          '৭': '7',
          '৮': '8',
          '৯': '9',
          '০': '0'
        };
        var bnBd = moment.defineLocale('bn-bd', {
          months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
          monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
          weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
          weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
          weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
          longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়'
          },
          calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর'
          },
          preparse: function preparse(string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
              return numberMap[match];
            });
          },
          postformat: function postformat(string) {
            return string.replace(/\d/g, function (match) {
              return symbolMap[match];
            });
          },
          meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'রাত') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ভোর') {
              return hour;
            } else if (meridiem === 'সকাল') {
              return hour;
            } else if (meridiem === 'দুপুর') {
              return hour >= 3 ? hour : hour + 12;
            } else if (meridiem === 'বিকাল') {
              return hour + 12;
            } else if (meridiem === 'সন্ধ্যা') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'রাত';
            } else if (hour < 6) {
              return 'ভোর';
            } else if (hour < 12) {
              return 'সকাল';
            } else if (hour < 15) {
              return 'দুপুর';
            } else if (hour < 18) {
              return 'বিকাল';
            } else if (hour < 20) {
              return 'সন্ধ্যা';
            } else {
              return 'রাত';
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          }
        });
        return bnBd;
      });
      /***/

    },

    /***/
    "lyxo":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/ro.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function lyxo(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Romanian [ro]
      //! author : Vlad Gurdiga : https://github.com/gurdiga
      //! author : Valentin Agachi : https://github.com/avaly
      //! author : Emanuel Cepoi : https://github.com/cepem
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            ss: 'secunde',
            mm: 'minute',
            hh: 'ore',
            dd: 'zile',
            ww: 'săptămâni',
            MM: 'luni',
            yy: 'ani'
          },
              separator = ' ';

          if (number % 100 >= 20 || number >= 100 && number % 100 === 0) {
            separator = ' de ';
          }

          return number + separator + format[key];
        }

        var ro = moment.defineLocale('ro', {
          months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
          monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
          weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
          weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm'
          },
          calendar: {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'peste %s',
            past: '%s în urmă',
            s: 'câteva secunde',
            ss: relativeTimeWithPlural,
            m: 'un minut',
            mm: relativeTimeWithPlural,
            h: 'o oră',
            hh: relativeTimeWithPlural,
            d: 'o zi',
            dd: relativeTimeWithPlural,
            w: 'o săptămână',
            ww: relativeTimeWithPlural,
            M: 'o lună',
            MM: relativeTimeWithPlural,
            y: 'un an',
            yy: relativeTimeWithPlural
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return ro;
      });
      /***/

    },

    /***/
    "mEZS":
    /*!***************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/timesheet/timesheet.component.html ***!
      \***************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function mEZS(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Timesheet</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Timesheet</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <a  class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_todaywork\"><i\r\n                        class=\"fa fa-plus\"></i> Add Today Work</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"datatable\"\r\n                    class=\"table table-striped custom-table mb-0 datatable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Employee</th>\r\n                            <th>Date</th>\r\n                            <th>Projects</th>\r\n                            <th class=\"text-center\">Assigned Hours</th>\r\n                            <th class=\"text-center\">Hours</th>\r\n                            <th class=\"d-none d-sm-table-cell\">Description</th>\r\n                            <th class=\"text-right\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of lstTimesheet;let i = index\">\r\n                            <td>\r\n                                <h2 class=\"table-avatar\">\r\n                                    <a routerLink=\"/employees/employeeprofile\" class=\"avatar\"><img alt=\"\"\r\n                                            src=\"assets/img/profiles/avatar-{{i+ 1}}.jpg\"></a>\r\n                                    <a routerLink=\"/employees/employeeprofile\">{{item.employee}}\r\n                                        <span>{{item.designation}} </span></a>\r\n                                </h2>\r\n                            </td>\r\n                            <td>{{item.date | customDate}} </td>\r\n                            <td>\r\n                                <h2>{{item.project}} </h2>\r\n                            </td>\r\n                            <td class=\"text-center\">{{item.assignedhours}}</td>\r\n                            <td class=\"text-center\">{{item.hrs}}</td>\r\n                            <td class=\"d-none d-sm-table-cell col-md-4\">{{item.description}}</td>\r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a  class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\" (click)=\"edit(item.id)\"\r\n                                            data-target=\"#edit_todaywork\"><i class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#delete_timesheet\" (click)=\"tempId = item.id\"><i\r\n                                                class=\"fa fa-trash-o m-r-5\"></i>\r\n                                            Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Add Today Work Modal -->\r\n<div id=\"add_todaywork\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Add Today Work details</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"addTimesheet()\" [formGroup]=\"addTimesheetForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>Project <span class=\"text-danger\">*</span></label>\r\n                            <select class=\"select form-control\"\r\n                                [class.invalid]=\"addTimesheetForm.get('Project').invalid && addTimesheetForm.get('Project').touched\"\r\n                                formControlName=\"Project\">\r\n                                <option>Office Management</option>\r\n                                <option>Project Management</option>\r\n                                <option>Video Calling App</option>\r\n                                <option>Hospital Administration</option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"addTimesheetForm.get('Project').invalid && addTimesheetForm.get('Project').touched\">\r\n                                <small\r\n                                    *ngIf=\"addTimesheetForm.get('Project').invalid && addTimesheetForm.get('Project').touched\"\r\n                                    class=\"text-danger\"> *Project is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-4\">\r\n                            <label>Deadline <span class=\"text-danger\">*</span></label>\r\n                            <div class=\"cal-icon\">\r\n                                <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                    [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                    [class.invalid]=\"addTimesheetForm.get('DeadlineName').invalid && addTimesheetForm.get('DeadlineName').touched\"\r\n                                    formControlName=\"DeadlineName\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-sm-4\">\r\n                            <label>Total Hours <span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" type=\"text\"\r\n                                [class.invalid]=\"addTimesheetForm.get('totalHours').invalid && addTimesheetForm.get('totalHours').touched\"\r\n                                formControlName=\"totalHours\">\r\n                        </div>\r\n                        <div class=\"form-group col-sm-4\">\r\n                            <label>Remaining Hours <span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" type=\"text\"\r\n                                [class.invalid]=\"addTimesheetForm.get('remainingHours').invalid && addTimesheetForm.get('remainingHours').touched\"\r\n                                formControlName=\"remainingHours\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>Date <span class=\"text-danger\">*</span></label>\r\n                            <div class=\"cal-icon\">\r\n                                <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                    [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                    [class.invalid]=\"addTimesheetForm.get('TimeDate').invalid && addTimesheetForm.get('TimeDate').touched\"\r\n                                    formControlName=\"TimeDate\">\r\n                                <div\r\n                                    *ngIf=\"addTimesheetForm.get('TimeDate').invalid && addTimesheetForm.get('TimeDate').touched\">\r\n                                    <small\r\n                                        *ngIf=\"addTimesheetForm.get('TimeDate').invalid && addTimesheetForm.get('TimeDate').touched\"\r\n                                        class=\"text-danger\"> *Date is required</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>Hours <span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" type=\"text\" value=\"9\"\r\n                                [class.invalid]=\"addTimesheetForm.get('Hrs').invalid && addTimesheetForm.get('Hrs').touched\"\r\n                                formControlName=\"Hrs\">\r\n                            <div *ngIf=\"addTimesheetForm.get('Hrs').invalid && addTimesheetForm.get('Hrs').touched\">\r\n                                <small\r\n                                    *ngIf=\"addTimesheetForm.get('Hrs').invalid && addTimesheetForm.get('Hrs').touched\"\r\n                                    class=\"text-danger\"> *Hrs is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Description <span class=\"text-danger\">*</span></label>\r\n                        <textarea rows=\"4\" class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"addTimesheetForm.get('Description').invalid && addTimesheetForm.get('Description').touched\"\r\n                            formControlName=\"Description\">\r\n                       </textarea>\r\n                        <div\r\n                            *ngIf=\"addTimesheetForm.get('Description').invalid && addTimesheetForm.get('Description').touched\">\r\n                            <small\r\n                                *ngIf=\"addTimesheetForm.get('Description').invalid && addTimesheetForm.get('Description').touched\"\r\n                                class=\"text-danger\"> *Description is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Add Today Work Modal -->\r\n\r\n<!-- Edit Today Work Modal -->\r\n<div id=\"edit_todaywork\" class=\"modal custom-modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Edit Work Details</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"editTimesheet()\" [formGroup]=\"editTimesheetForm\">\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>Project <span class=\"text-danger\">*</span></label>\r\n                            <select class=\"select form-control\"\r\n                                [class.invalid]=\"editTimesheetForm.get('Project').invalid && editTimesheetForm.get('Project').touched\"\r\n                                formControlName=\"Project\">\r\n                                <option>Office Management</option>\r\n                                <option>Project Management</option>\r\n                                <option>Video Calling App</option>\r\n                                <option>Hospital Administration</option>\r\n                            </select>\r\n                            <div\r\n                                *ngIf=\"editTimesheetForm.get('Project').invalid && editTimesheetForm.get('Project').touched\">\r\n                                <small\r\n                                    *ngIf=\"editTimesheetForm.get('Project').invalid && editTimesheetForm.get('Project').touched\"\r\n                                    class=\"text-danger\"> *Project is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-4\">\r\n                            <label>Deadline <span class=\"text-danger\">*</span></label>\r\n                            <div class=\"cal-icon\">\r\n                                <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                    [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                    [class.invalid]=\"editTimesheetForm.get('DeadlineName').invalid && editTimesheetForm.get('DeadlineName').touched\"\r\n                                    formControlName=\"DeadlineName\" (bsValueChange)=\"from($event)\">\r\n                                <div\r\n                                    *ngIf=\"editTimesheetForm.get('DeadlineName').invalid && editTimesheetForm.get('DeadlineName').touched\">\r\n                                    <small\r\n                                        *ngIf=\"editTimesheetForm.get('DeadlineName').invalid && editTimesheetForm.get('DeadlineName').touched\"\r\n                                        class=\"text-danger\"> *Total Hours is required</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-sm-4\">\r\n                            <label>Total Hours <span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" type=\"text\"\r\n                                [class.invalid]=\"editTimesheetForm.get('totalHours').invalid && editTimesheetForm.get('totalHours').touched\"\r\n                                formControlName=\"totalHours\">\r\n                            <div\r\n                                *ngIf=\"editTimesheetForm.get('totalHours').invalid && editTimesheetForm.get('totalHours').touched\">\r\n                                <small\r\n                                    *ngIf=\"editTimesheetForm.get('totalHours').invalid && editTimesheetForm.get('totalHours').touched\"\r\n                                    class=\"text-danger\"> *Total Hours is required</small>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-sm-4\">\r\n                            <label>Remaining Hours <span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" type=\"text\"\r\n                                [class.invalid]=\"editTimesheetForm.get('remainingHours').invalid && editTimesheetForm.get('remainingHours').touched\"\r\n                                formControlName=\"remainingHours\">\r\n                            <div\r\n                                *ngIf=\"editTimesheetForm.get('remainingHours').invalid && editTimesheetForm.get('remainingHours').touched\">\r\n                                <small\r\n                                    *ngIf=\"editTimesheetForm.get('remainingHours').invalid && editTimesheetForm.get('remainingHours').touched\"\r\n                                    class=\"text-danger\"> *Remaining Hours is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>Date <span class=\"text-danger\">*</span></label>\r\n                            <div class=\"cal-icon\">\r\n                                <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                    [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                    [class.invalid]=\"editTimesheetForm.get('TimeDate').invalid && editTimesheetForm.get('TimeDate').touched\"\r\n                                    formControlName=\"TimeDate\" (bsValueChange)=\"to($event)\">\r\n                                <div\r\n                                    *ngIf=\"editTimesheetForm.get('TimeDate').invalid && editTimesheetForm.get('TimeDate').touched\">\r\n                                    <small\r\n                                        *ngIf=\"editTimesheetForm.get('TimeDate').invalid && editTimesheetForm.get('TimeDate').touched\"\r\n                                        class=\"text-danger\"> *Date is required</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>Hours <span class=\"text-danger\">*</span></label>\r\n                            <input class=\"form-control\" type=\"text\" value=\"9\"\r\n                                [class.invalid]=\"editTimesheetForm.get('Hrs').invalid && editTimesheetForm.get('Hrs').touched\"\r\n                                formControlName=\"Hrs\">\r\n                            <div *ngIf=\"editTimesheetForm.get('Hrs').invalid && editTimesheetForm.get('Hrs').touched\">\r\n                                <small\r\n                                    *ngIf=\"editTimesheetForm.get('Hrs').invalid && editTimesheetForm.get('Hrs').touched\"\r\n                                    class=\"text-danger\"> *Hrs is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Description <span class=\"text-danger\">*</span></label>\r\n                        <textarea rows=\"4\" class=\"form-control\"\r\n                            [class.invalid]=\"editTimesheetForm.get('Description').invalid && editTimesheetForm.get('Description').touched\"\r\n                            formControlName=\"Description\">\r\n                       </textarea>\r\n                        <div\r\n                            *ngIf=\"editTimesheetForm.get('Description').invalid && editTimesheetForm.get('Description').touched\">\r\n                            <small\r\n                                *ngIf=\"editTimesheetForm.get('Description').invalid && editTimesheetForm.get('Description').touched\"\r\n                                class=\"text-danger\"> *Description is required</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Edit Today Work Modal -->\r\n\r\n<!-- Delete Today Work Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_timesheet\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Work Details</h3>\r\n                    <p>Are you sure want to delete?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a  class=\"btn btn-primary continue-btn\"\r\n                                (click)=\"deleteTimesheet()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a  data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Delete Today Work Modal -->";
      /***/
    },

    /***/
    "msUU":
    /*!*********************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/employee-list/employee-list.component.ts ***!
      \*********************************************************************************************************/

    /*! exports provided: EmployeeListComponent */

    /***/
    function msUU(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "EmployeeListComponent", function () {
        return EmployeeListComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_employee_list_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./employee-list.component.html */
      "My8Z");
      /* harmony import */


      var _employee_list_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./employee-list.component.css */
      "jD6U");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var _services_employee_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! ../../../services/employee.service */
      "AuF9");
      /* harmony import */


      var ngx_spinner__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
      /*! ngx-spinner */
      "JqCM");
      /* harmony import */


      var src_environments_environment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
      /*! src/environments/environment */
      "AytR");

      var EmployeeListComponent = /*#__PURE__*/function () {
        function EmployeeListComponent(srvModuleService, toastr, formBuilder, employeeService, spinnerService) {
          _classCallCheck(this, EmployeeListComponent);

          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.formBuilder = formBuilder;
          this.employeeService = employeeService;
          this.spinnerService = spinnerService;
          this.baseUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_11__["environment"].baseUrl;
          this.url = "employeelist";
          this.pipe = new _angular_common__WEBPACK_IMPORTED_MODULE_7__["DatePipe"]("en-US");
          this.rows = [];
          this.srch = [];
          this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_8__["Subject"](); //pagination config

          this.pageNum = 1;
          this.pageSize = 10;
          this.pageSizes = [3, 5, 10, 25, 50, 100, 200, 500, 1000];
          this.totalItem = 50;
          this.pngDiplayLastSeq = 10;
        }

        _createClass(EmployeeListComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.myGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"]({
              pageSize: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]()
            });
            this.myGroup.get('pageSize').setValue(this.pageSize);
            this.getDesignations(); // for floating label

            $(".floating").on("focus blur", function (e) {
              $(this).parents(".form-focus").toggleClass("focused", e.type === "focus" || this.value.length > 0);
            }).trigger("blur");
            this.loadAllEmployee();
          }
        }, {
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            var _this77 = this;

            setTimeout(function () {
              _this77.dtTrigger.next();
            }, 1000);
          } // manually rendering Data table

        }, {
          key: "rerender",
          value: function rerender() {}
        }, {
          key: "getDesignations",
          value: function getDesignations() {
            var _this78 = this;

            this.employeeService.getDesignations().subscribe(function (data) {
              _this78.designations = data;
            }, function (error) {
              _this78.toastr.error(error.error.message);
            });
          } // to know the date picker changes

        }, {
          key: "from",
          value: function from(data) {
            this.DateJoin = this.pipe.transform(data, "dd-MM-yyyy");
          } // delete employee data api call

        }, {
          key: "deleteEmployee",
          value: function deleteEmployee() {
            this.toastr.success("Employee deleted sucessfully..!", "Success");
          } // MyCustom Code 

        }, {
          key: "loadAllEmployee",
          value: function loadAllEmployee() {
            var _this79 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empListData";
            var queryParams = {};
            var params = this.getUserQueryParams(this.pageNum, this.pageSize);
            queryParams = params;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this79.empList = response.objectList;
              _this79.totalItem = response.totalItems;

              _this79.setDisplayLastSequence();

              _this79.spinnerService.hide();
            }, function (error) {
              console.log(error);
            });
          }
        }, {
          key: "getUserQueryParams",
          value: function getUserQueryParams(page, pageSize) {
            var params = {};

            if (page) {
              params["pageNum"] = page - 0;
            }

            if (pageSize) {
              params["pageSize"] = pageSize;
            }

            return params;
          }
        }, {
          key: "setDisplayLastSequence",
          value: function setDisplayLastSequence() {
            this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;

            if (this.empList.length < this.pageSize) {
              this.pngDiplayLastSeq = (this.pageNum - 1) * this.pageSize + this.pageSize;
            }

            if (this.totalItem < this.pngDiplayLastSeq) {
              this.pngDiplayLastSeq = this.totalItem;
            }
          }
        }, {
          key: "handlePageChange",
          value: function handlePageChange(event) {
            this.pageNum = event;
            this.loadAllEmployee();
          }
        }, {
          key: "handlePageSizeChange",
          value: function handlePageSizeChange(event) {
            this.pageSize = event.target.value;
            this.pageNum = 1;
            this.loadAllEmployee();
          } //End MyCustom
          //search by Id

        }, {
          key: "searchId",
          value: function searchId(val) {
            var _this80 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.loginCode = val;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this80.spinnerService.hide();

              _this80.empList = response.objectList;
              _this80.totalItem = response.totalItems;

              _this80.setDisplayLastSequence();
            }, function (error) {
              console.log(error);
            });
          } //search by name

        }, {
          key: "searchName",
          value: function searchName(val) {
            var _this81 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.displayName = val;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this81.empList = response.objectList;
              _this81.totalItem = response.totalItems;

              _this81.setDisplayLastSequence();

              _this81.spinnerService.hide();
            }, function (error) {
              console.log(error);
            });
          } //search by purchase

        }, {
          key: "searchByDesignation",
          value: function searchByDesignation(val) {
            var _this82 = this;

            var apiURL = this.baseUrl + "/hrCrEmp/empList2";
            var queryParams = {};
            queryParams.designationId = val;
            this.spinnerService.show();
            this.employeeService.sendGetRequest(apiURL, queryParams).subscribe(function (response) {
              _this82.empList = response.objectList;
              _this82.totalItem = response.totalItems;

              _this82.setDisplayLastSequence();

              _this82.spinnerService.hide();
            }, function (error) {
              console.log(error);
            });
          } //getting the status value

        }, {
          key: "getStatus",
          value: function getStatus(data) {
            this.statusValue = data;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // Do not forget to unsubscribe the event
            this.dtTrigger.unsubscribe();
          }
        }]);

        return EmployeeListComponent;
      }();

      EmployeeListComponent.ctorParameters = function () {
        return [{
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_4__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: _services_employee_service__WEBPACK_IMPORTED_MODULE_9__["EmployeeService"]
        }, {
          type: ngx_spinner__WEBPACK_IMPORTED_MODULE_10__["NgxSpinnerService"]
        }];
      };

      EmployeeListComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-employee-list",
        template: _raw_loader_employee_list_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_employee_list_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_4__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], _services_employee_service__WEBPACK_IMPORTED_MODULE_9__["EmployeeService"], ngx_spinner__WEBPACK_IMPORTED_MODULE_10__["NgxSpinnerService"]])], EmployeeListComponent);
      /***/
    },

    /***/
    "nyYc":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/fr.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function nyYc(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : French [fr]
      //! author : John Fischer : https://github.com/jfroffice
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsStrictRegex = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
            monthsShortStrictRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
            monthsRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
            monthsParse = [/^janv/i, /^févr/i, /^mars/i, /^avr/i, /^mai/i, /^juin/i, /^juil/i, /^août/i, /^sept/i, /^oct/i, /^nov/i, /^déc/i];
        var fr = moment.defineLocale('fr', {
          months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
          monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: monthsStrictRegex,
          monthsShortStrictRegex: monthsShortStrictRegex,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
          weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
          weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            w: 'une semaine',
            ww: '%d semaines',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              // TODO: Return 'e' when day of month > 1. Move this case inside
              // block for masculine words below.
              // See https://github.com/moment/moment/issues/3375
              case 'D':
                return number + (number === 1 ? 'er' : '');
              // Words with masculine grammatical gender: mois, trimestre, jour

              default:
              case 'M':
              case 'Q':
              case 'DDD':
              case 'd':
                return number + (number === 1 ? 'er' : 'e');
              // Words with feminine grammatical gender: semaine

              case 'w':
              case 'W':
                return number + (number === 1 ? 're' : 'e');
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return fr;
      });
      /***/

    },

    /***/
    "o1bE":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/ar-dz.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function o1bE(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Arabic (Algeria) [ar-dz]
      //! author : Amine Roukh: https://github.com/Amine27
      //! author : Abdel Said: https://github.com/abdelsaid
      //! author : Ahmed Elkhatib
      //! author : forabi https://github.com/forabi
      //! author : Noureddine LOUAHEDJ : https://github.com/noureddinem
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var pluralForm = function pluralForm(n) {
          return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
        },
            plurals = {
          s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
          m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
          h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
          d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
          M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
          y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
        },
            pluralize = function pluralize(u) {
          return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];

            if (f === 2) {
              str = str[withoutSuffix ? 0 : 1];
            }

            return str.replace(/%d/i, number);
          };
        },
            months = ['جانفي', 'فيفري', 'مارس', 'أفريل', 'ماي', 'جوان', 'جويلية', 'أوت', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];

        var arDz = moment.defineLocale('ar-dz', {
          months: months,
          monthsShort: months,
          weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
          weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
          weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: "D/\u200FM/\u200FYYYY",
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          meridiemParse: /ص|م/,
          isPM: function isPM(input) {
            return 'م' === input;
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ص';
            } else {
              return 'م';
            }
          },
          calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y')
          },
          postformat: function postformat(string) {
            return string.replace(/,/g, '،');
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return arDz;
      });
      /***/

    },

    /***/
    "ouRR":
    /*!******************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/employees.component.html ***!
      \******************************************************************************************************/

    /*! exports provided: default */

    /***/
    function ouRR(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Wrapper -->\r\n<div class=\"page-wrapper\" (resized)=\"onResize($event)\" [ngStyle]=\"{ 'height' : innerHeight }\">\r\n    <router-outlet></router-outlet>\r\n    </div>\r\n    <!-- /Page Wrapper -->";
      /***/
    },

    /***/
    "p/rL":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/bm.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function pRL(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Bambara [bm]
      //! author : Estelle Comment : https://github.com/estellecomment
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var bm = moment.defineLocale('bm', {
          months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
          monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
          weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
          weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
          weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'MMMM [tile] D [san] YYYY',
            LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
          },
          calendar: {
            sameDay: '[Bi lɛrɛ] LT',
            nextDay: '[Sini lɛrɛ] LT',
            nextWeek: 'dddd [don lɛrɛ] LT',
            lastDay: '[Kunu lɛrɛ] LT',
            lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s kɔnɔ',
            past: 'a bɛ %s bɔ',
            s: 'sanga dama dama',
            ss: 'sekondi %d',
            m: 'miniti kelen',
            mm: 'miniti %d',
            h: 'lɛrɛ kelen',
            hh: 'lɛrɛ %d',
            d: 'tile kelen',
            dd: 'tile %d',
            M: 'kalo kelen',
            MM: 'kalo %d',
            y: 'san kelen',
            yy: 'san %d'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return bm;
      });
      /***/

    },

    /***/
    "qZnD":
    /*!***********************************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/all-employees/add-employee/add-employee.component.html ***!
      \***********************************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function qZnD(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\n<div class=\"content container-fluid\">\n\n    <!-- Page Header -->\n    <div class=\"page-header\">\n        <div class=\"row align-items-center\">\n            <div class=\"col\">\n                <h3 class=\"page-title\">Employee</h3>\n                <ul class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Employees</a></li>\n                    <li class=\"breadcrumb-item active\">Add Employee</li>\n                </ul>\n            </div>\n            <div class=\"col-auto float-right ml-auto\">\n                <!-- <a  class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_employee\"><i\n                        class=\"fa fa-plus\"></i> Add Employee</a> -->\n                <a class=\"btn add-btn\" routerLink=\"/employees/employeepage\"><i class=\"fa fa-share\"></i> Back To\n                    Employees</a>\n                <!-- <div class=\"view-icons\">\n                    <a routerLink=\"/employees/employeepage\" class=\"grid-view btn btn-link active\"><i\n                            class=\"fa fa-th\"></i></a>\n                    <a routerLink=\"/employees/employeelist\" class=\"list-view btn btn-link\"><i\n                            class=\"fa fa-bars\"></i></a>\n                </div> -->\n            </div>\n        </div>\n    </div>\n    <!-- /Page Header -->\n\n    <div class=\"card tab-box\">\n        <div class=\"row user-tabs\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 line-tabs\">\n                <ul class=\"nav nav-tabs nav-tabs-bottom\">\n                    <li class=\"nav-item\"><a href=\"#hrCrEmp\" data-toggle=\"tab\" class=\"nav-link active\">Employee Basic\n                            Info</a>\n                    </li>\n                    <li class=\"nav-item\"><a href=\"#hrCrEmpAssignment\" data-toggle=\"tab\" class=\"nav-link\">Employee\n                            Assignment</a></li>\n                    <li class=\"nav-item\"><a href=\"#bank_statutory\" (click)=\"initAllowance($event.target.value)\" data-toggle=\"tab\" class=\"nav-link\">Bank & Payroll\n                            Elements\n                            <small class=\"text-danger\"></small></a></li>\n                    <li class=\"nav-item\"><a href=\"#education\" (click)=\"getEducationData()\"  data-toggle=\"tab\" class=\"nav-link\">Education\n                            <small class=\"text-danger\"></small></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"tab-content\">\n\n        <!-- Profile Info Tab -->\n        <div id=\"hrCrEmp\" class=\"pro-overview tab-pane fade show active\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h3 class=\"card-title\"> Basic Information</h3>\n                    <form (ngSubmit)=\"empBscInfOnSubmit()\" [formGroup]=\"addEmployeeForm\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>First Name<span class=\"text-danger\">*</span></label>\n                                    <input class=\"form-control\" formControlName=\"firstName\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" type=\"text\">\n                                    <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.firstName.errors.required\">*First Name is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Middle Name</label>\n                                    <input class=\"form-control\" formControlName=\"middleName\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Last Name<span class=\"text-danger\">*</span></label>\n                                    <input class=\"form-control\" formControlName=\"lastName\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" type=\"text\">\n                                    <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.lastName.errors.required\">*Last Name is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!--  -->\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Father Name<span class=\"text-danger\">*</span></label>\n                                    <input class=\"form-control\" formControlName=\"fatherName\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.fatherName.errors }\" type=\"text\">\n                                    <div *ngIf=\"submitted && f.fatherName.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.fatherName.errors.required\">*Father Name is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Mother Name<span class=\"text-danger\">*</span></label>\n                                    <input class=\"form-control\" formControlName=\"motherName\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.motherName.errors }\" type=\"text\">\n                                    <div *ngIf=\"submitted && f.motherName.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.motherName.errors.required\">*Mother Name is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Spouse Name</label>\n                                    <input class=\"form-control\" formControlName=\"spouseName\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n\n\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Date of Birth<span class=\"text-danger\">*</span></label>\n                                    <div class=\"cal-icon\">\n                                        <input class=\"form-control datetimepicker\" formControlName=\"dob\"\n                                            class=\"form-control\" bsDatepicker type=\"text\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.dob.errors }\" type=\"text\"\n                                            [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\">\n                                        <div *ngIf=\"submitted && f.dob.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.dob.errors.required\">*Date of Birth is required</div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Email<span class=\"text-danger\">*</span></label>\n                                    <input class=\"form-control\" formControlName=\"email\" class=\"form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" type=\"email\">\n                                    <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                        <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>NID No.</label>\n                                    <input class=\"form-control\" formControlName=\"voterIdentityNumber\"\n                                        class=\"form-control\" type=\"text\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.voterIdentityNumber.errors }\">\n                                    <div *ngIf=\"submitted && f.voterIdentityNumber.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.voterIdentityNumber.errors.pattern\">*Nid is not valid</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <!-- No problem below -->\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Mobile No.<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"mobCode\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Weight</label>\n                                    <input class=\"form-control\" formControlName=\"weight\" class=\"form-control\"\n                                        type=\"text\" [ngClass]=\"{ 'is-invalid': submitted && f.weight.errors }\">\n                                    <div *ngIf=\"submitted && f.weight.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.weight.errors.pattern\">*Weight is not a valid pattern(ex. 4.44)\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Height</label>\n                                    <input class=\"form-control\" formControlName=\"height\" class=\"form-control\"\n                                        type=\"text\" [ngClass]=\"{ 'is-invalid': submitted && f.height.errors }\">\n                                    <div *ngIf=\"submitted && f.height.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.height.errors.pattern\">*Height is not a valid pattern(ex. 4.44)\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n\n\n                        </div>\n                        <div class=\"row\">\n\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngFor=\"let bdlGrp of bloodGrp\">\n                                    <label>Blood Group<span class=\"text-danger\">*</span></label>\n                                    <select class=\"select form-control\" formControlName=\"alkpBloodGrpIdAlkp\">\n                                        <option value=\"\">Select Blood Group</option>\n                                        <option *ngFor=\"let data of bdlGrp.subALKP\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngFor=\"let gender of genders\">\n                                    <label>Gender</label>\n                                    <select class=\"select form-control\" formControlName=\"alkpGenderIdAlkp\">\n                                        <option value=\"\">Select Gender</option>\n                                        <option *ngFor=\"let data of gender.subALKP\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngFor=\"let mStatus of maritalStatus\">\n                                    <label>Marital Status</label>\n                                    <select class=\"select form-control\" formControlName=\"alkpMaritalStsIdAlkp\">\n                                        <option value=\"\">Select Marital Status</option>\n                                        <option *ngFor=\"let data of mStatus.subALKP\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <!-- <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Nationality<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"bankAccNo\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div> -->\n\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"designations\">\n                                    <label>Designation Order<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"dgOrder\">\n                                        <option value=\"\">Select Designation Order</option>\n                                        <option *ngFor=\"let data of designations\" [ngValue]='data.dgOrder'>\n                                            {{data.dgOrder}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n\n                        </div>\n                        <hr>\n                        <h3 class=\"card-title\">Address Information</h3>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Division</label>\n                                    <select (change)=\"loadAllDistrict($event.target.value[0])\"\n                                        class=\"select form-control\" formControlName=\"division\">\n                                        <option value=\"\">Select Division</option>\n                                        <option *ngFor=\"let data of divisions\" [ngValue]='data.id'>{{data.name}}\n                                            ({{data.bn_name}})\n                                        </option>\n                                    </select>\n\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"districts\">\n                                    <label>Districts</label>\n                                    <ng-select [items]=\"districts\" formControlName=\"district\" bindLabel=\"name\"\n                                        bindValue=\"id\" (change)=\"loadAllUpazila($event.id)\"\n                                        placeholder=\"Select District\" [searchable]=\"true\" [clearable]=\"false\"\n                                        [virtualScroll]=\"true\" [loading]=\"ngSelLoader\"\n                                        (search)=\"searchProdDistrict($event)\" (scrollToEnd)=\"scrollToEndDistrict()\"\n                                        (open)=\"openDropdownDistrict($event)\">\n                                    </ng-select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"upazilas\">\n                                    <label>Upazila</label>\n                                    <ng-select [items]=\"upazilas\" formControlName=\"upazila\" bindLabel=\"name\"\n                                        bindValue=\"id\" (change)=\"loadAllUnion($event.id)\" placeholder=\"Select Upazila\"\n                                        [searchable]=\"true\" [clearable]=\"false\" [virtualScroll]=\"true\"\n                                        [loading]=\"ngSelLoader\" (search)=\"searchProdUpazila($event)\"\n                                        (scrollToEnd)=\"scrollToEndUpazila()\">\n                                    </ng-select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"unions\">\n                                    <label>Union</label>\n                                    <ng-select [items]=\"unions\" formControlName=\"union\" bindLabel=\"name\" bindValue=\"id\"\n                                        placeholder=\"Select Union\" [searchable]=\"true\" [clearable]=\"false\"\n                                        [virtualScroll]=\"true\" [loading]=\"ngSelLoader\"\n                                        (search)=\"searchProdUnion($event)\" (scrollToEnd)=\"scrollToEndUnion()\">\n                                    </ng-select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Present Address</label>\n                                    <textarea rows=\"\" class=\"form-control\" formControlName=\"addressPrsnt\"></textarea>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Permanent Address</label>\n                                    <textarea rows=\"\" class=\"form-control\" formControlName=\"addressPrmnt\"></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <hr>\n                        <h3 class=\"card-title\">Emergency Contact Information</h3>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Name</label>\n                                    <input class=\"form-control\" formControlName=\"emergencyCntName\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Phone</label>\n                                    <input class=\"form-control\" formControlName=\"emergencyCntPhone\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Relation</label>\n                                    <input class=\"form-control\" formControlName=\"emergencyCntRelation\"\n                                        class=\"form-control\" type=\"text\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Address</label>\n                                    <textarea rows=\"2\" class=\"form-control\"\n                                        formControlName=\"emergencyCntAddress\"></textarea>\n                                </div>\n                            </div>\n                        </div>\n                        <hr>\n                        <h3 class=\"card-title\"> Official Summary</h3>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Career Summary</label>\n                                    <textarea rows=\"2\" class=\"form-control\" formControlName=\"careerSummary\"></textarea>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Objective</label>\n                                    <textarea rows=\"2\" class=\"form-control\" formControlName=\"objective\"></textarea>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Date of Joining<span class=\"text-danger\">*</span></label>\n                                    <div class=\"cal-icon\">\n                                        <input class=\"form-control datetimepicker\" formControlName=\"joiningDate\"\n                                            class=\"form-control\" bsDatepicker type=\"text\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.joiningDate.errors }\" type=\"text\"\n                                            [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\">\n                                        <div *ngIf=\"submitted && f.joiningDate.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.joiningDate.errors.required\">*Date of Joining is required\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Sal.Expected</label>\n                                    <input class=\"form-control\" formControlName=\"salExpected\" class=\"form-control\"\n                                        type=\"text\" [ngClass]=\"{ 'is-invalid': submitted && f.salExpected.errors }\">\n                                    <div *ngIf=\"submitted && f.salExpected.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.salExpected.errors.pattern\">*Exp.Salary is not a valid pattern(ex.\n                                            4.44)</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Tin Number</label>\n                                    <input class=\"form-control\" formControlName=\"tinNumber\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-4\" *ngIf=\"isAddMode\">\n                                <div class=\"form-group\" *ngIf=\"notEmpUsers\">\n                                    <label>User</label>\n                                    <!-- <select class=\"select form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.user.errors }\" formControlName=\"user\">\n                                        <option value=\"\">Select user</option>\n                                        <option *ngFor=\"let usrs of notEmpUsers\" [ngValue]='usrs.id'>{{usrs.username}}\n                                        </option>\n                                    </select> -->\n                                    <ng-select [virtualScroll]=\"true\" class=\"custom\" bindValue=\"id\"\n                                        formControlName=\"user\" [items]=\"notEmpUsers\" bindLabel=\"username\"\n                                        placeholder=\"Select User\" (change)=\"selectEvent($event)\">\n                                    </ng-select>\n                                    <!-- <div *ngIf=\"submitted && f.user.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.user.errors.required\">*User is required</div>\n                                    </div> -->\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Experience Year</label>\n                                    <input class=\"form-control\" formControlName=\"experienceYear\" class=\"form-control\"\n                                        type=\"number\">\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"submit-section\" *ngIf=\"isAddMode\">\n                            <button class=\"btn btn-primary submit-btn\" type=\"submit\">\n                                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                                Save\n                                <!-- [disabled]=\"!addEmployeeForm.valid\" -->\n                            </button>\n                        </div>\n                        <div class=\"submit-section\" *ngIf=\"!isAddMode\">\n                            <button class=\"btn btn-primary submit-btn\" type=\"submit\">\n                                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                                Update\n                                <!-- [disabled]=\"!addEmployeeForm.valid\" -->\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <!-- /Profile Info Tab -->\n\n        <!-- Projects Tab -->\n        <div class=\"tab-pane fade\" id=\"hrCrEmpAssignment\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <!-- <h3 class=\"card-title\"> Employee Assignment Information</h3> -->\n                    <form (ngSubmit)=\"empAssignmentInfOnSubmit()\" [formGroup]=\"addEmployeeAssgnmntForm\">\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"group\">\n                                    <label>Business Group<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstGroupId\">\n                                        <option value=\"\">Select Group</option>\n                                        <option *ngFor=\"let data of group\" [ngValue]='data.id'>{{data.title}}</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"organization\">\n                                    <label>Organization<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstOrganizationId\">\n                                        <option value=\"\">Select Organization</option>\n                                        <option *ngFor=\"let data of organization\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"operatingUnit\">\n                                    <label>Operating Unit<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstOperatingUnitId\">\n                                        <option value=\"\">Select Operating Unit</option>\n                                        <option *ngFor=\"let data of operatingUnit\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"product\">\n                                    <label>Product<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstProductId\">\n                                        <option value=\"\">Select Product</option>\n                                        <option *ngFor=\"let data of product\" [ngValue]='data.id'>{{data.title}}</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"department\">\n                                    <label>Department<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstDepartmentId\">\n                                        <option value=\"\">Select Department</option>\n                                        <option *ngFor=\"let data of department\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"section\">\n                                    <label>Section <span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstSectionId\">\n                                        <option value=\"\">Select Section</option>\n                                        <option *ngFor=\"let data of section\" [ngValue]='data.id'>{{data.title}}</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"subSection\">\n                                    <label>Sub Section<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstSubSectionId\">\n                                        <option value=\"\">Select Product</option>\n                                        <option *ngFor=\"let data of subSection\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"team\">\n                                    <label>Team<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstTeamId\">\n                                        <option value=\"\">Select Team</option>\n                                        <option *ngFor=\"let data of team\" [ngValue]='data.id'>{{data.title}}</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"subTeam\">\n                                    <label>Sub Team<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"allOrgMstSubTeamId\">\n                                        <option value=\"\">Select Sub Team</option>\n                                        <option *ngFor=\"let data of subTeam\" [ngValue]='data.id'>{{data.title}}</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngFor=\"let empSts of empStatus\">\n                                    <label>Status<span class=\"text-danger\">*</span></label>\n                                    <select class=\"select form-control\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.empSts.errors }\"\n                                        formControlName=\"empSts\">\n                                        <option value=\"\">Select Emp Status</option>\n                                        <option *ngFor=\"let data of empSts.subALKP\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n\n                                    </select>\n                                    <div *ngIf=\"submitted && f.empSts.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.empSts.errors.required\">*Emp Status is required</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Employee Reference</label>\n                                    <input class=\"form-control\" formControlName=\"empRef\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Probation Duration<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"probationDuration\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n\n\n                        </div>\n                        <div class=\"row\">\n                            <!-- <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Gross<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"gross\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div> -->\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngIf=\"designations\">\n                                    <label>Designations<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"hrEmpDesignations\">\n                                        <option value=\"\">Select Designation</option>\n                                        <option *ngFor=\"let data of designations\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngFor=\"let cat of empCat\">\n                                    <label>Category</label>\n                                    <select class=\"select form-control\" formControlName=\"alkpEmpCatId\">\n                                        <option value=\"\">Select Category</option>\n                                        <option *ngFor=\"let data of cat.subALKP\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n\n                                    </select>\n\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Position<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" class=\"form-control\" type=\"text\">\n\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Bank Name<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"bankName\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                        \n                        </div> -->\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Responsibility<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"responsibility\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>In Charge<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" (input)=\"searchInchargeId($event.target.value)\"\n                                        formControlName=\"hrCrEmpInChrgId\" class=\"form-control\" type=\"text\"\n                                        placeholder=\"Enter employee Id\">\n                                    <p>{{incharge[0]?.firstName}}</p>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Concern HR<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" (input)=\"searchHrId($event.target.value)\"\n                                        formControlName=\"hrCrEmpHrmId\" class=\"form-control\" type=\"text\"\n                                        placeholder=\"Enter employee Id\">\n                                    <p>{{hr[0]?.firstName}}</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"submit-section\">\n                            <button class=\"btn btn-primary submit-btn\" type=\"submit\">\n                                <span *ngIf=\"assgnmntLoading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                                Save\n                                <!-- [disabled]=\"!addEmployeeForm.valid\" -->\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <!-- /Projects Tab -->\n\n        <!-- Bank Statutory Tab -->\n        <div class=\"tab-pane fade\" id=\"bank_statutory\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <form (ngSubmit)=\"empBankAndPayRollSubmit()\" [formGroup]=\"addBankAndPayrollForm\">\n                        <h3 class=\"card-title\">Bank Information</h3>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Bank Name<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"bankName\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Branch Name<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"branchName\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Bank Acc No.<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"bankAccNo\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <hr>\n                        <h3 class=\"card-title\">Payroll Information</h3>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Active Start Date</label>\n                                    <div class=\"cal-icon\">\n                                        <input class=\"form-control datetimepicker\" formControlName=\"activeStartDate\"\n                                            class=\"form-control\" bsDatepicker type=\"text\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.activeStartDate.errors }\"\n                                            type=\"text\"\n                                            [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD',  returnFocusToInput: true }\">\n\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Active End Date</label>\n                                    <div class=\"cal-icon\">\n                                        <input class=\"form-control datetimepicker\" formControlName=\"activeEndDate\"\n                                            class=\"form-control\" bsDatepicker type=\"text\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.activeEndDate.errors }\"\n                                            [bsConfig]=\"{ dateInputFormat: 'YYYY-MM-DD',  returnFocusToInput: true }\"\n                                            ng-model-options=\"{timezone:'UTC'}\">\n\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Gross Salary<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" (input)=\"inputGrossSal($event.target.value)\" formControlName=\"grossSalary\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Basic Salary<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value, 'basicSalary')\"  formControlName=\"basicSalary\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            \n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Medical Alowance<span class=\"text-danger\">(%)</span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value,'medicalAlwPct')\" formControlName=\"medicalAlwPct\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Dearness Rent<span class=\"text-danger\">(%)</span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value,'dearnessAlwPct')\" formControlName=\"dearnessAlwPct\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Convey Alowance<span class=\"text-danger\">(%)</span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value,'conveyanceAlwPct')\" formControlName=\"conveyanceAlwPct\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Transport Alowance<span class=\"text-danger\">(%)</span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value,'transportAlwPct')\" formControlName=\"transportAlwPct\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Special Alowance<span class=\"text-danger\">(%)</span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value,'specialAlwPct')\" formControlName=\"specialAlwPct\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Food Alowance<span class=\"text-danger\">(%)</span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value,'foodAllowance')\" formControlName=\"foodAllowance\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>House Rent<span class=\"text-danger\">(%)</span></label>\n                                    <input class=\"form-control\" (input)=\"inputAlowance($event.target.value,'houseRentAlwPct')\" formControlName=\"houseRentAlwPct\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"submit-section\">\n                            <button class=\"btn btn-primary submit-btn\" type=\"submit\">\n                                <span *ngIf=\"bankLoading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                                Save\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <!-- /Bank Statutory Tab -->\n\n        <!-- Education Tab -->\n        <div class=\"tab-pane fade\" id=\"education\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <form (ngSubmit)=\"empEduFormSubmit()\" [formGroup]=\"addEducationForm\">\n                        <h3 class=\"card-title\">Education Information</h3>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Code<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" placeholder=\"eg. ssc\" formControlName=\"code\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Reg. No<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"regNo\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Result<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"result\" class=\"form-control\"\n                                        type=\"number\">\n                                </div>\n                            </div>\n                        </div>    \n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Result Out of<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"resultOutOf\" class=\"form-control\"\n                                        type=\"number\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Passing Year<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"passingYear\" class=\"form-control\"\n                                        type=\"number\">\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>Institute Title<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"titleInstitute\" class=\"form-control\"\n                                        type=\"text\">\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngFor=\"let sg of subjectGroup\">\n                                    <label>Subject Group<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"alkpSubGroup\">\n                                        <option value=\"\">Select Group</option>\n                                        <option *ngFor=\"let data of sg.subALKP\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\" *ngFor=\"let edb of educationBoard\">\n                                    <label>Education Board<span class=\"text-danger\"></span></label>\n                                    <select class=\"select form-control\" formControlName=\"alkpEduBoard\">\n                                        <option value=\"\">Select Board</option>\n                                        <option *ngFor=\"let data of edb.subALKP\" [ngValue]='data.id'>{{data.title}}\n                                        </option>\n\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label>ID<span class=\"text-danger\"></span></label>\n                                    <input class=\"form-control\" formControlName=\"id\" class=\"form-control\"\n                                        type=\"text\" readonly>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"submit-section\">\n                            <button class=\"btn btn-primary submit-btn\" type=\"submit\">               \n                                Save\n                            </button>\n                        </div>\n                        \n                    </form>\n                </div>\n            </div>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h3>List of Education Info</h3>\n                    <table id=\"eduListTable\" class=\"table table-striped custom-table\">\n                        <thead>\n                          <tr>\n                            <th>Title</th>\n                            <th>Reg No</th>\n                            <th>Passing Year</th>\n                            <th>Result</th>\n                            <th class=\"text-right no-sort\">Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr *ngFor=\"let thisObj of hrCrEmpEduInfo\">\n\n                            <td>{{ thisObj.code }}</td>\n                            <td>{{ thisObj.regNo }}</td>\n                            <td>{{ thisObj.passingYear }}</td>\n                            <td>{{thisObj.result}}</td>\n                            <td class=\"text-right\">\n                              <div class=\"dropdown dropdown-action\">\n                                <a class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"false\"><i\n                                    class=\"material-icons\">more_vert</i></a>\n                                <div class=\"dropdown-menu dropdown-menu-right\">\n                                  <a class=\"dropdown-item\" (click)=\"editEducationClickEvent(thisObj.id)\"><i\n                                      class=\"fa fa-pencil m-r-5\"></i> Edit</a>\n                                  <a class=\"dropdown-item\" (click)=\"tempEduId = thisObj.id\" data-toggle=\"modal\"\n                                    data-target=\"#delete_hrCrEmpEducation\"><i class=\"fa fa-trash-o m-r-5\"></i> Delete</a>\n                                </div>\n                              </div>\n                            </td>\n                          </tr>\n          \n                          <tr *ngIf=\"hrCrEmpEduInfo.length === 0\">\n                            <td colspan=\"10\">\n                              <h5 style=\"text-align: center\">No data found</h5>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                </div>\n            </div>\n        </div>\n        <!-- /End Education Tab -->\n\n        <!-- Delete education  -->\n        <div class=\"modal custom-modal fade\" id=\"delete_hrCrEmpEducation\" role=\"dialog\">\n            <div class=\"modal-dialog modal-dialog-centered\">\n              <div class=\"modal-content\">\n                <div class=\"modal-body\">\n                  <div class=\"form-header\">\n                    <h3>Delete Education</h3>\n                    <p>Are you sure want to delete?</p>\n                  </div>\n                  <div class=\"modal-btn delete-action\">\n                    <div class=\"row\">\n                      <div class=\"col-6\">\n                        <a class=\"btn btn-primary continue-btn\" (click)=\"deleteHrCrEmpEducation()\">Delete</a>\n                      </div>\n                      <div class=\"col-6\">\n                        <a data-dismiss=\"modal\" class=\"btn btn-primary cancel-btn\">Cancel</a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- Delete education -->\n    </div>\n</div>\n\n<!-- /Page Content -->\n<ngx-spinner bdColor=\"rgba(255,255,255,0.5)\" size=\"medium\" color=\"#667eea\" type=\"ball-clip-rotate\" [fullScreen]=\"true\">\n    <p style=\"color: black\"> Processing... </p>\n</ngx-spinner>";
      /***/
    },

    /***/
    "qvJo":
    /*!************************************************!*\
      !*** ./node_modules/moment/locale/gom-deva.js ***!
      \************************************************/

    /*! no static exports found */

    /***/
    function qvJo(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Konkani Devanagari script [gom-deva]
      //! author : The Discoverer : https://github.com/WikiDiscoverer
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
            ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],
            m: ['एका मिणटान', 'एक मिनूट'],
            mm: [number + ' मिणटांनी', number + ' मिणटां'],
            h: ['एका वरान', 'एक वर'],
            hh: [number + ' वरांनी', number + ' वरां'],
            d: ['एका दिसान', 'एक दीस'],
            dd: [number + ' दिसांनी', number + ' दीस'],
            M: ['एका म्हयन्यान', 'एक म्हयनो'],
            MM: [number + ' म्हयन्यानी', number + ' म्हयने'],
            y: ['एका वर्सान', 'एक वर्स'],
            yy: [number + ' वर्सांनी', number + ' वर्सां']
          };
          return isFuture ? format[key][0] : format[key][1];
        }

        var gomDeva = moment.defineLocale('gom-deva', {
          months: {
            standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
            format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split('_'),
            isFormat: /MMMM(\s)+D[oD]?/
          },
          monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
          monthsParseExact: true,
          weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),
          weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),
          weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'A h:mm [वाजतां]',
            LTS: 'A h:mm:ss [वाजतां]',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY A h:mm [वाजतां]',
            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
            llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]'
          },
          calendar: {
            sameDay: '[आयज] LT',
            nextDay: '[फाल्यां] LT',
            nextWeek: '[फुडलो] dddd[,] LT',
            lastDay: '[काल] LT',
            lastWeek: '[फाटलो] dddd[,] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: '%s',
            past: '%s आदीं',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              // the ordinal 'वेर' only applies to day of the month
              case 'D':
                return number + 'वेर';

              default:
              case 'M':
              case 'Q':
              case 'DDD':
              case 'd':
              case 'w':
              case 'W':
                return number;
            }
          },
          week: {
            dow: 0,
            // Sunday is the first day of the week
            doy: 3 // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)

          },
          meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'राती') {
              return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळीं') {
              return hour;
            } else if (meridiem === 'दनपारां') {
              return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'सांजे') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'राती';
            } else if (hour < 12) {
              return 'सकाळीं';
            } else if (hour < 16) {
              return 'दनपारां';
            } else if (hour < 20) {
              return 'सांजे';
            } else {
              return 'राती';
            }
          }
        });
        return gomDeva;
      });
      /***/

    },

    /***/
    "raLr":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/uk.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function raLr(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Ukrainian [uk]
      //! author : zemlanin : https://github.com/zemlanin
      //! Author : Menelion Elensúle : https://github.com/Oire
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function plural(word, num) {
          var forms = word.split('_');
          return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];
        }

        function relativeTimeWithPlural(number, withoutSuffix, key) {
          var format = {
            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            dd: 'день_дні_днів',
            MM: 'місяць_місяці_місяців',
            yy: 'рік_роки_років'
          };

          if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
          } else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
          } else {
            return number + ' ' + plural(format[key], +number);
          }
        }

        function weekdaysCaseReplace(m, format) {
          var weekdays = {
            nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
          },
              nounCase;

          if (m === true) {
            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));
          }

          if (!m) {
            return weekdays['nominative'];
          }

          nounCase = /(\[[ВвУу]\]) ?dddd/.test(format) ? 'accusative' : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format) ? 'genitive' : 'nominative';
          return weekdays[nounCase][m.day()];
        }

        function processHoursFunction(str) {
          return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
          };
        }

        var uk = moment.defineLocale('uk', {
          months: {
            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
          },
          monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
          weekdays: weekdaysCaseReplace,
          weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
          weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY р.',
            LLL: 'D MMMM YYYY р., HH:mm',
            LLLL: 'dddd, D MMMM YYYY р., HH:mm'
          },
          calendar: {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function lastWeek() {
              switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                  return processHoursFunction('[Минулої] dddd [').call(this);

                case 1:
                case 2:
                case 4:
                  return processHoursFunction('[Минулого] dddd [').call(this);
              }
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'за %s',
            past: '%s тому',
            s: 'декілька секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'годину',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'місяць',
            MM: relativeTimeWithPlural,
            y: 'рік',
            yy: relativeTimeWithPlural
          },
          // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
          meridiemParse: /ночі|ранку|дня|вечора/,
          isPM: function isPM(input) {
            return /^(дня|вечора)$/.test(input);
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 4) {
              return 'ночі';
            } else if (hour < 12) {
              return 'ранку';
            } else if (hour < 17) {
              return 'дня';
            } else {
              return 'вечора';
            }
          },
          dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
          ordinal: function ordinal(number, period) {
            switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
              case 'w':
              case 'W':
                return number + '-й';

              case 'D':
                return number + '-го';

              default:
                return number;
            }
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return uk;
      });
      /***/

    },

    /***/
    "s+uk":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/de-at.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function sUk(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German (Austria) [de-at]
      //! author : lluchs : https://github.com/lluchs
      //! author: Menelion Elensúle: https://github.com/Oire
      //! author : Martin Groller : https://github.com/MadMG
      //! author : Mikolaj Dadela : https://github.com/mik01aj
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren']
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var deAt = moment.defineLocale('de-at', {
          months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
          monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
          monthsParseExact: true,
          weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
          weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
          weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
          },
          relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return deAt;
      });
      /***/

    },

    /***/
    "sp3z":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/lo.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function sp3z(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Lao [lo]
      //! author : Ryan Hart : https://github.com/ryanhart2
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var lo = moment.defineLocale('lo', {
          months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
          monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
          weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
          weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
          weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'ວັນdddd D MMMM YYYY HH:mm'
          },
          meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
          isPM: function isPM(input) {
            return input === 'ຕອນແລງ';
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 12) {
              return 'ຕອນເຊົ້າ';
            } else {
              return 'ຕອນແລງ';
            }
          },
          calendar: {
            sameDay: '[ມື້ນີ້ເວລາ] LT',
            nextDay: '[ມື້ອື່ນເວລາ] LT',
            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay: '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'ອີກ %s',
            past: '%sຜ່ານມາ',
            s: 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss: '%d ວິນາທີ',
            m: '1 ນາທີ',
            mm: '%d ນາທີ',
            h: '1 ຊົ່ວໂມງ',
            hh: '%d ຊົ່ວໂມງ',
            d: '1 ມື້',
            dd: '%d ມື້',
            M: '1 ເດືອນ',
            MM: '%d ເດືອນ',
            y: '1 ປີ',
            yy: '%d ປີ'
          },
          dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
          ordinal: function ordinal(number) {
            return 'ທີ່' + number;
          }
        });
        return lo;
      });
      /***/

    },

    /***/
    "swCz":
    /*!********************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/all-employees/add-employee/add-employee.component.css ***!
      \********************************************************************************************************/

    /*! exports provided: default */

    /***/
    function swCz(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n\r\n\r\n/* ================= Default Template Color ================== */\r\n\r\n\r\nxx-.form-control {\r\n    border-color: #e3e3e3;\r\n    box-shadow: none;\r\n}\r\n\r\n\r\nxx-.form-control:focus {\r\n    border-color: #ccc;\r\n    box-shadow: none;\r\n    outline: 0 none;\r\n}\r\n\r\n\r\n/* ================= Purpale Color =========================== */\r\n\r\n\r\ninput.form-control, select.form-control, textarea.form-control {\r\n\tborder-color: #667eea;\r\n\tborder-left: 3px solid #667eea;\r\n    box-shadow: none; \r\n}\r\n\r\n\r\n.form-control:focus {\r\n\tborder-color: #705CBA;\r\n\toutline: 0;\r\n\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \r\n }\r\n\r\n\r\n/* ================= Green Color ============================= */\r\n\r\n\r\nxx-input.form-control {\r\n    border-color: #d4cdcd;\r\n    border-left: 3px solid green;\r\n    box-shadow: none; \r\n}\r\n\r\n\r\nxx-.form-control:focus {\r\n\tborder-color: #37a000;\r\n\toutline: 0;\r\n\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \r\n }\r\n\r\n\r\n/* ================== Blue Color ============================== */\r\n\r\n\r\nxx-input.form-control {\r\n    border-color: #66afe9;\r\n    border-left: 3px solid #66afe9;\r\n    box-shadow: none; \r\n}\r\n\r\n\r\nxx-.form-control:focus {\r\n   border-color: #66afe9;\r\n   outline: 0;\r\n   box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \r\n}\r\n\r\n\r\n/* .ng-select.custom {\r\n    border-color: #667eea;\r\n\t\r\n}\r\n.ng-select.custom .ng-select-container  {            \r\n    min-height: 100px;\r\n    border-radius: 0;\r\n   \r\n}\r\n.ng-select.custom ::ng-deep .ng-select-container  {            \r\n    min-height: 0px;\r\n    border-radius: 0;\r\n}\r\nng-select.ng-invalid.ng-touched .ng-select-container {\r\n    border-color: #dc3545;\r\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 0 3px #fde6e8;\r\n} */\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1lbXBsb3llZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtBQUNkOzs7QUFHQSxnRUFBZ0U7OztBQUNoRTtJQUNJLHFCQUFxQjtJQUNyQixnQkFBZ0I7QUFDcEI7OztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COzs7QUFJQSxnRUFBZ0U7OztBQUNoRTtDQUNDLHFCQUFxQjtDQUNyQiw4QkFBOEI7SUFDM0IsZ0JBQWdCO0FBQ3BCOzs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixVQUFVO0NBRVYsMkVBQTJFO0NBQzNFOzs7QUFJRCxnRUFBZ0U7OztBQUNoRTtJQUNJLHFCQUFxQjtJQUNyQiw0QkFBNEI7SUFDNUIsZ0JBQWdCO0FBQ3BCOzs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixVQUFVO0NBRVYsMkVBQTJFO0NBQzNFOzs7QUFJRCxpRUFBaUU7OztBQUNqRTtJQUNJLHFCQUFxQjtJQUNyQiw4QkFBOEI7SUFDOUIsZ0JBQWdCO0FBQ3BCOzs7QUFFQTtHQUNHLHFCQUFxQjtHQUNyQixVQUFVO0dBRVYsMkVBQTJFO0FBQzlFOzs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRyIsImZpbGUiOiJhZGQtZW1wbG95ZWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59XHJcblxyXG5cclxuLyogPT09PT09PT09PT09PT09PT0gRGVmYXVsdCBUZW1wbGF0ZSBDb2xvciA9PT09PT09PT09PT09PT09PT0gKi9cclxueHgtLmZvcm0tY29udHJvbCB7XHJcbiAgICBib3JkZXItY29sb3I6ICNlM2UzZTM7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG54eC0uZm9ybS1jb250cm9sOmZvY3VzIHtcclxuICAgIGJvcmRlci1jb2xvcjogI2NjYztcclxuICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiAwIG5vbmU7XHJcbn1cclxuXHJcblxyXG5cclxuLyogPT09PT09PT09PT09PT09PT0gUHVycGFsZSBDb2xvciA9PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuaW5wdXQuZm9ybS1jb250cm9sLCBzZWxlY3QuZm9ybS1jb250cm9sLCB0ZXh0YXJlYS5mb3JtLWNvbnRyb2wge1xyXG5cdGJvcmRlci1jb2xvcjogIzY2N2VlYTtcclxuXHRib3JkZXItbGVmdDogM3B4IHNvbGlkICM2NjdlZWE7XHJcbiAgICBib3gtc2hhZG93OiBub25lOyBcclxufVxyXG5cclxuLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcblx0Ym9yZGVyLWNvbG9yOiAjNzA1Q0JBO1xyXG5cdG91dGxpbmU6IDA7XHJcblx0LXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiKDAgMCAwIC8gOCUpLCAwIDAgOHB4IHJnYigxMDIgMTc1IDIzMyAvIDYwJSk7XHJcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpOyBcclxuIH1cclxuXHJcblxyXG5cclxuLyogPT09PT09PT09PT09PT09PT0gR3JlZW4gQ29sb3IgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxueHgtaW5wdXQuZm9ybS1jb250cm9sIHtcclxuICAgIGJvcmRlci1jb2xvcjogI2Q0Y2RjZDtcclxuICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgZ3JlZW47XHJcbiAgICBib3gtc2hhZG93OiBub25lOyBcclxufVxyXG5cclxueHgtLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcblx0Ym9yZGVyLWNvbG9yOiAjMzdhMDAwO1xyXG5cdG91dGxpbmU6IDA7XHJcblx0LXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiKDAgMCAwIC8gOCUpLCAwIDAgOHB4IHJnYigxMDIgMTc1IDIzMyAvIDYwJSk7XHJcblx0Ym94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpOyBcclxuIH1cclxuXHJcblxyXG5cclxuLyogPT09PT09PT09PT09PT09PT09IEJsdWUgQ29sb3IgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbnh4LWlucHV0LmZvcm0tY29udHJvbCB7XHJcbiAgICBib3JkZXItY29sb3I6ICM2NmFmZTk7XHJcbiAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICM2NmFmZTk7XHJcbiAgICBib3gtc2hhZG93OiBub25lOyBcclxufVxyXG5cclxueHgtLmZvcm0tY29udHJvbDpmb2N1cyB7XHJcbiAgIGJvcmRlci1jb2xvcjogIzY2YWZlOTtcclxuICAgb3V0bGluZTogMDtcclxuICAgLXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAwIDFweCAxcHggcmdiKDAgMCAwIC8gOCUpLCAwIDAgOHB4IHJnYigxMDIgMTc1IDIzMyAvIDYwJSk7XHJcbiAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTsgXHJcbn1cclxuXHJcblxyXG4vKiAubmctc2VsZWN0LmN1c3RvbSB7XHJcbiAgICBib3JkZXItY29sb3I6ICM2NjdlZWE7XHJcblx0XHJcbn1cclxuLm5nLXNlbGVjdC5jdXN0b20gLm5nLXNlbGVjdC1jb250YWluZXIgIHsgICAgICAgICAgICBcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgXHJcbn1cclxuLm5nLXNlbGVjdC5jdXN0b20gOjpuZy1kZWVwIC5uZy1zZWxlY3QtY29udGFpbmVyICB7ICAgICAgICAgICAgXHJcbiAgICBtaW4taGVpZ2h0OiAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG59XHJcbm5nLXNlbGVjdC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQgLm5nLXNlbGVjdC1jb250YWluZXIge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZGMzNTQ1O1xyXG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNzUpLCAwIDAgMCAzcHggI2ZkZTZlODtcclxufSAqLyJdfQ== */";
      /***/
    },

    /***/
    "t+mt":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/en-sg.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function tMt(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : English (Singapore) [en-sg]
      //! author : Matthew Castrillon-Madrigal : https://github.com/techdimension
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var enSg = moment.defineLocale('en-sg', {
          months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
          weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
          weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
          weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          },
          dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
          ordinal: function ordinal(number) {
            var b = number % 10,
                output = ~~(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
            return number + output;
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return enSg;
      });
      /***/

    },

    /***/
    "tGlX":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/de.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function tGlX(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German [de]
      //! author : lluchs : https://github.com/lluchs
      //! author: Menelion Elensúle: https://github.com/Oire
      //! author : Mikolaj Dadela : https://github.com/mik01aj
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren']
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var de = moment.defineLocale('de', {
          months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
          monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
          monthsParseExact: true,
          weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
          weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
          weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
          },
          relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return de;
      });
      /***/

    },

    /***/
    "tT3J":
    /*!************************************************!*\
      !*** ./node_modules/moment/locale/tzm-latn.js ***!
      \************************************************/

    /*! no static exports found */

    /***/
    function tT3J(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Central Atlas Tamazight Latin [tzm-latn]
      //! author : Abdel Said : https://github.com/abdelsaid
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var tzmLatn = moment.defineLocale('tzm-latn', {
          months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
          monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
          weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
          weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
          weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'dadkh s yan %s',
            past: 'yan %s',
            s: 'imik',
            ss: '%d imik',
            m: 'minuḍ',
            mm: '%d minuḍ',
            h: 'saɛa',
            hh: '%d tassaɛin',
            d: 'ass',
            dd: '%d ossan',
            M: 'ayowr',
            MM: '%d iyyirn',
            y: 'asgas',
            yy: '%d isgasn'
          },
          week: {
            dow: 6,
            // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return tzmLatn;
      });
      /***/

    },

    /***/
    "tUCv":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/jv.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function tUCv(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Javanese [jv]
      //! author : Rony Lantip : https://github.com/lantip
      //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var jv = moment.defineLocale('jv', {
          months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
          monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
          weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
          weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
          weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'
          },
          meridiemParse: /enjing|siyang|sonten|ndalu/,
          meridiemHour: function meridiemHour(hour, meridiem) {
            if (hour === 12) {
              hour = 0;
            }

            if (meridiem === 'enjing') {
              return hour;
            } else if (meridiem === 'siyang') {
              return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
              return hour + 12;
            }
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours < 11) {
              return 'enjing';
            } else if (hours < 15) {
              return 'siyang';
            } else if (hours < 19) {
              return 'sonten';
            } else {
              return 'ndalu';
            }
          },
          calendar: {
            sameDay: '[Dinten puniko pukul] LT',
            nextDay: '[Mbenjang pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kala wingi pukul] LT',
            lastWeek: 'dddd [kepengker pukul] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'wonten ing %s',
            past: '%s ingkang kepengker',
            s: 'sawetawis detik',
            ss: '%d detik',
            m: 'setunggal menit',
            mm: '%d menit',
            h: 'setunggal jam',
            hh: '%d jam',
            d: 'sedinten',
            dd: '%d dinten',
            M: 'sewulan',
            MM: '%d wulan',
            y: 'setaun',
            yy: '%d taun'
          },
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return jv;
      });
      /***/

    },

    /***/
    "tbfe":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/es-mx.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function tbfe(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Spanish (Mexico) [es-mx]
      //! author : JC Franco : https://github.com/jcfranco
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
            _monthsShort4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
            monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i],
            monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

        var esMx = moment.defineLocale('es-mx', {
          months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
          monthsShort: function monthsShort(m, format) {
            if (!m) {
              return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
              return _monthsShort4[m.month()];
            } else {
              return monthsShortDot[m.month()];
            }
          },
          monthsRegex: monthsRegex,
          monthsShortRegex: monthsRegex,
          monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
          monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
          monthsParse: monthsParse,
          longMonthsParse: monthsParse,
          shortMonthsParse: monthsParse,
          weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
          weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
          weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'
          },
          calendar: {
            sameDay: function sameDay() {
              return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function nextDay() {
              return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function nextWeek() {
              return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function lastDay() {
              return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function lastWeek() {
              return '[el] dddd [pasado a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años'
          },
          dayOfMonthOrdinalParse: /\d{1,2}º/,
          ordinal: '%dº',
          week: {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          },
          invalidDate: 'Fecha inválida'
        });
        return esMx;
      });
      /***/

    },

    /***/
    "u3GI":
    /*!*********************************************!*\
      !*** ./node_modules/moment/locale/de-ch.js ***!
      \*********************************************/

    /*! no static exports found */

    /***/
    function u3GI(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : German (Switzerland) [de-ch]
      //! author : sschueller : https://github.com/sschueller
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren']
          };
          return withoutSuffix ? format[key][0] : format[key][1];
        }

        var deCh = moment.defineLocale('de-ch', {
          months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
          monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
          monthsParseExact: true,
          weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
          weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
          weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
          },
          relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return deCh;
      });
      /***/

    },

    /***/
    "uEye":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/nn.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function uEye(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Nynorsk [nn]
      //! authors : https://github.com/mechuwind
      //!           Stephen Ramthun : https://github.com/stephenramthun
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var nn = moment.defineLocale('nn', {
          months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
          monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
          monthsParseExact: true,
          weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
          weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
          weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'
          },
          calendar: {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'om %s',
            past: '%s sidan',
            s: 'nokre sekund',
            ss: '%d sekund',
            m: 'eit minutt',
            mm: '%d minutt',
            h: 'ein time',
            hh: '%d timar',
            d: 'ein dag',
            dd: '%d dagar',
            w: 'ei veke',
            ww: '%d veker',
            M: 'ein månad',
            MM: '%d månader',
            y: 'eit år',
            yy: '%d år'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return nn;
      });
      /***/

    },

    /***/
    "uXwI":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/lv.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function uXwI(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Latvian [lv]
      //! author : Kristaps Karlsons : https://github.com/skakri
      //! author : Jānis Elmeris : https://github.com/JanisE
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var units = {
          ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
          m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
          mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
          h: 'stundas_stundām_stunda_stundas'.split('_'),
          hh: 'stundas_stundām_stunda_stundas'.split('_'),
          d: 'dienas_dienām_diena_dienas'.split('_'),
          dd: 'dienas_dienām_diena_dienas'.split('_'),
          M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
          MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
          y: 'gada_gadiem_gads_gadi'.split('_'),
          yy: 'gada_gadiem_gads_gadi'.split('_')
        };
        /**
         * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
         */

        function format(forms, number, withoutSuffix) {
          if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
          } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
          }
        }

        function relativeTimeWithPlural(number, withoutSuffix, key) {
          return number + ' ' + format(units[key], number, withoutSuffix);
        }

        function relativeTimeWithSingular(number, withoutSuffix, key) {
          return format(units[key], number, withoutSuffix);
        }

        function relativeSeconds(number, withoutSuffix) {
          return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
        }

        var lv = moment.defineLocale('lv', {
          months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
          monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
          weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
          weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
          weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY.',
            LL: 'YYYY. [gada] D. MMMM',
            LLL: 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm'
          },
          calendar: {
            sameDay: '[Šodien pulksten] LT',
            nextDay: '[Rīt pulksten] LT',
            nextWeek: 'dddd [pulksten] LT',
            lastDay: '[Vakar pulksten] LT',
            lastWeek: '[Pagājušā] dddd [pulksten] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'pēc %s',
            past: 'pirms %s',
            s: relativeSeconds,
            ss: relativeTimeWithPlural,
            m: relativeTimeWithSingular,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithSingular,
            hh: relativeTimeWithPlural,
            d: relativeTimeWithSingular,
            dd: relativeTimeWithPlural,
            M: relativeTimeWithSingular,
            MM: relativeTimeWithPlural,
            y: relativeTimeWithSingular,
            yy: relativeTimeWithPlural
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return lv;
      });
      /***/

    },

    /***/
    "wQk9":
    /*!*******************************************!*\
      !*** ./node_modules/moment/locale/tzm.js ***!
      \*******************************************/

    /*! no static exports found */

    /***/
    function wQk9(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Central Atlas Tamazight [tzm]
      //! author : Abdel Said : https://github.com/abdelsaid
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var tzm = moment.defineLocale('tzm', {
          months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
          monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
          weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
          weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
          weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past: 'ⵢⴰⵏ %s',
            s: 'ⵉⵎⵉⴽ',
            ss: '%d ⵉⵎⵉⴽ',
            m: 'ⵎⵉⵏⵓⴺ',
            mm: '%d ⵎⵉⵏⵓⴺ',
            h: 'ⵙⴰⵄⴰ',
            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d: 'ⴰⵙⵙ',
            dd: '%d oⵙⵙⴰⵏ',
            M: 'ⴰⵢoⵓⵔ',
            MM: '%d ⵉⵢⵢⵉⵔⵏ',
            y: 'ⴰⵙⴳⴰⵙ',
            yy: '%d ⵉⵙⴳⴰⵙⵏ'
          },
          week: {
            dow: 6,
            // Saturday is the first day of the week.
            doy: 12 // The week that contains Jan 12th is the first week of the year.

          }
        });
        return tzm;
      });
      /***/

    },

    /***/
    "wU91":
    /*!*********************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/holidays/holidays.component.ts ***!
      \*********************************************************************************/

    /*! exports provided: HolidaysComponent */

    /***/
    function wU91(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "HolidaysComponent", function () {
        return HolidaysComponent;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "mrSG");
      /* harmony import */


      var _raw_loader_holidays_component_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! raw-loader!./holidays.component.html */
      "zRNc");
      /* harmony import */


      var _holidays_component_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./holidays.component.css */
      "RIvN");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ngx-toastr */
      "5eHb");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
      /*! rxjs */
      "qCKp");
      /* harmony import */


      var angular_datatables__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
      /*! angular-datatables */
      "njyG");
      /* harmony import */


      var src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
      /*! src/app/all-modules/all-modules.service */
      "IhMt");

      var HolidaysComponent = /*#__PURE__*/function () {
        function HolidaysComponent(formBuilder, srvModuleService, toastr) {
          _classCallCheck(this, HolidaysComponent);

          this.formBuilder = formBuilder;
          this.srvModuleService = srvModuleService;
          this.toastr = toastr;
          this.dtOptions = {};
          this.url = "holidays";
          this.rows = [];
          this.srch = [];
          this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
          this.pipe = new _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"]("en-US");
        }

        _createClass(HolidaysComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.loadholidays();
            this.addHolidayForm = this.formBuilder.group({
              HolidayName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              Holidaydate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              DaysName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]]
            }); // Edit Contact Form Validation And Getting Values

            this.editHolidayForm = this.formBuilder.group({
              editHolidayName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              editHolidayDate: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]],
              editDaysName: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required]]
            });
          } // Get Employee  Api Call

        }, {
          key: "loadholidays",
          value: function loadholidays() {
            var _this83 = this;

            this.srvModuleService.get(this.url).subscribe(function (data) {
              _this83.lstHolidays = data;

              _this83.dtTrigger.next();

              _this83.rows = _this83.lstHolidays;
              _this83.srch = _toConsumableArray(_this83.rows);
            });
          } // Add holidays Modal Api Call

        }, {
          key: "addholidays",
          value: function addholidays() {
            var _this84 = this;

            if (this.addHolidayForm.valid) {
              var holiday = this.pipe.transform(this.addHolidayForm.value.Holidaydate, "dd-MM-yyyy");
              var obj = {
                title: this.addHolidayForm.value.HolidayName,
                holidaydate: holiday,
                day: this.addHolidayForm.value.DaysName
              };
              this.srvModuleService.add(obj, this.url).subscribe(function (data) {
                _this84.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.loadholidays();
              $("#add_holiday").modal("hide");
              this.addHolidayForm.reset();
              this.toastr.success("Holidays added", "Success");
            }
          }
        }, {
          key: "from",
          value: function from(data) {
            this.editHolidayDate = this.pipe.transform(data, "dd-MM-yyyy");
          } // Edit holidays Modal Api Call

        }, {
          key: "editHolidays",
          value: function editHolidays() {
            var _this85 = this;

            if (this.editHolidayForm.valid) {
              var obj = {
                title: this.editHolidayForm.value.editHolidayName,
                holidaydate: this.editHolidayDate,
                day: this.editHolidayForm.value.editDaysName,
                id: this.editId
              };
              this.srvModuleService.update(obj, this.url).subscribe(function (data1) {
                _this85.dtElement.dtInstance.then(function (dtInstance) {
                  dtInstance.destroy();
                });
              });
              this.loadholidays();
              $("#edit_holiday").modal("hide");
              this.toastr.success("Holidays Updated succesfully", "Success");
            }
          } // Delete holidays Modal Api Call

        }, {
          key: "deleteHolidays",
          value: function deleteHolidays() {
            var _this86 = this;

            this.srvModuleService["delete"](this.tempId, this.url).subscribe(function (data) {
              _this86.dtElement.dtInstance.then(function (dtInstance) {
                dtInstance.destroy();
              });

              _this86.loadholidays();

              $("#delete_holiday").modal("hide");

              _this86.toastr.success("Holidays Deleted", "Success");
            });
          } // To Get The holidays Edit Id And Set Values To Edit Modal Form

        }, {
          key: "edit",
          value: function edit(value) {
            this.editId = value;
            var index = this.lstHolidays.findIndex(function (item) {
              return item.id === value;
            });
            var toSetValues = this.lstHolidays[index];
            this.editHolidayForm.setValue({
              editHolidayName: toSetValues.title,
              editHolidayDate: toSetValues.holidaydate,
              editDaysName: toSetValues.day
            });
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            // Do not forget to unsubscribe the event
            this.dtTrigger.unsubscribe();
          }
        }]);

        return HolidaysComponent;
      }();

      HolidaysComponent.ctorParameters = function () {
        return [{
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]
        }, {
          type: src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]
        }];
      };

      HolidaysComponent.propDecorators = {
        dtElement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"],
          args: [angular_datatables__WEBPACK_IMPORTED_MODULE_8__["DataTableDirective"], {
            "static": false
          }]
        }]
      };
      HolidaysComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
        selector: "app-holidays",
        template: _raw_loader_holidays_component_html__WEBPACK_IMPORTED_MODULE_1__["default"],
        styles: [_holidays_component_css__WEBPACK_IMPORTED_MODULE_2__["default"]]
      }), Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"])("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"], src_app_all_modules_all_modules_service__WEBPACK_IMPORTED_MODULE_9__["AllModulesService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]])], HolidaysComponent);
      /***/
    },

    /***/
    "wd/R":
    /*!***************************************!*\
      !*** ./node_modules/moment/moment.js ***!
      \***************************************/

    /*! no static exports found */

    /***/
    function wdR(module, exports, __webpack_require__) {
      /* WEBPACK VAR INJECTION */
      (function (module) {
        var require; //! moment.js
        //! version : 2.29.1
        //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        //! license : MIT
        //! momentjs.com


        ;

        (function (global, factory) {
          true ? module.exports = factory() : undefined;
        })(this, function () {
          'use strict';

          var hookCallback;

          function hooks() {
            return hookCallback.apply(null, arguments);
          } // This is done to register the method called with moment()
          // without creating circular dependencies.


          function setHookCallback(callback) {
            hookCallback = callback;
          }

          function isArray(input) {
            return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
          }

          function isObject(input) {
            // IE8 will treat undefined and null as object if it wasn't for
            // input != null
            return input != null && Object.prototype.toString.call(input) === '[object Object]';
          }

          function hasOwnProp(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b);
          }

          function isObjectEmpty(obj) {
            if (Object.getOwnPropertyNames) {
              return Object.getOwnPropertyNames(obj).length === 0;
            } else {
              var k;

              for (k in obj) {
                if (hasOwnProp(obj, k)) {
                  return false;
                }
              }

              return true;
            }
          }

          function isUndefined(input) {
            return input === void 0;
          }

          function isNumber(input) {
            return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
          }

          function isDate(input) {
            return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
          }

          function map(arr, fn) {
            var res = [],
                i;

            for (i = 0; i < arr.length; ++i) {
              res.push(fn(arr[i], i));
            }

            return res;
          }

          function extend(a, b) {
            for (var i in b) {
              if (hasOwnProp(b, i)) {
                a[i] = b[i];
              }
            }

            if (hasOwnProp(b, 'toString')) {
              a.toString = b.toString;
            }

            if (hasOwnProp(b, 'valueOf')) {
              a.valueOf = b.valueOf;
            }

            return a;
          }

          function createUTC(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, true).utc();
          }

          function defaultParsingFlags() {
            // We need to deep clone this object.
            return {
              empty: false,
              unusedTokens: [],
              unusedInput: [],
              overflow: -2,
              charsLeftOver: 0,
              nullInput: false,
              invalidEra: null,
              invalidMonth: null,
              invalidFormat: false,
              userInvalidated: false,
              iso: false,
              parsedDateParts: [],
              era: null,
              meridiem: null,
              rfc2822: false,
              weekdayMismatch: false
            };
          }

          function getParsingFlags(m) {
            if (m._pf == null) {
              m._pf = defaultParsingFlags();
            }

            return m._pf;
          }

          var some;

          if (Array.prototype.some) {
            some = Array.prototype.some;
          } else {
            some = function some(fun) {
              var t = Object(this),
                  len = t.length >>> 0,
                  i;

              for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                  return true;
                }
              }

              return false;
            };
          }

          function isValid(m) {
            if (m._isValid == null) {
              var flags = getParsingFlags(m),
                  parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
              }),
                  isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);

              if (m._strict) {
                isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
              }

              if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
              } else {
                return isNowValid;
              }
            }

            return m._isValid;
          }

          function createInvalid(flags) {
            var m = createUTC(NaN);

            if (flags != null) {
              extend(getParsingFlags(m), flags);
            } else {
              getParsingFlags(m).userInvalidated = true;
            }

            return m;
          } // Plugins that add properties should also add the key here (null value),
          // so we can properly clone ourselves.


          var momentProperties = hooks.momentProperties = [],
              updateInProgress = false;

          function copyConfig(to, from) {
            var i, prop, val;

            if (!isUndefined(from._isAMomentObject)) {
              to._isAMomentObject = from._isAMomentObject;
            }

            if (!isUndefined(from._i)) {
              to._i = from._i;
            }

            if (!isUndefined(from._f)) {
              to._f = from._f;
            }

            if (!isUndefined(from._l)) {
              to._l = from._l;
            }

            if (!isUndefined(from._strict)) {
              to._strict = from._strict;
            }

            if (!isUndefined(from._tzm)) {
              to._tzm = from._tzm;
            }

            if (!isUndefined(from._isUTC)) {
              to._isUTC = from._isUTC;
            }

            if (!isUndefined(from._offset)) {
              to._offset = from._offset;
            }

            if (!isUndefined(from._pf)) {
              to._pf = getParsingFlags(from);
            }

            if (!isUndefined(from._locale)) {
              to._locale = from._locale;
            }

            if (momentProperties.length > 0) {
              for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];

                if (!isUndefined(val)) {
                  to[prop] = val;
                }
              }
            }

            return to;
          } // Moment prototype object


          function Moment(config) {
            copyConfig(this, config);
            this._d = new Date(config._d != null ? config._d.getTime() : NaN);

            if (!this.isValid()) {
              this._d = new Date(NaN);
            } // Prevent infinite loop in case updateOffset creates new moment
            // objects.


            if (updateInProgress === false) {
              updateInProgress = true;
              hooks.updateOffset(this);
              updateInProgress = false;
            }
          }

          function isMoment(obj) {
            return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
          }

          function warn(msg) {
            if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
              console.warn('Deprecation warning: ' + msg);
            }
          }

          function deprecate(msg, fn) {
            var firstTime = true;
            return extend(function () {
              if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
              }

              if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;

                for (i = 0; i < arguments.length; i++) {
                  arg = '';

                  if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';

                    for (key in arguments[0]) {
                      if (hasOwnProp(arguments[0], key)) {
                        arg += key + ': ' + arguments[0][key] + ', ';
                      }
                    }

                    arg = arg.slice(0, -2); // Remove trailing comma and space
                  } else {
                    arg = arguments[i];
                  }

                  args.push(arg);
                }

                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + new Error().stack);
                firstTime = false;
              }

              return fn.apply(this, arguments);
            }, fn);
          }

          var deprecations = {};

          function deprecateSimple(name, msg) {
            if (hooks.deprecationHandler != null) {
              hooks.deprecationHandler(name, msg);
            }

            if (!deprecations[name]) {
              warn(msg);
              deprecations[name] = true;
            }
          }

          hooks.suppressDeprecationWarnings = false;
          hooks.deprecationHandler = null;

          function isFunction(input) {
            return typeof Function !== 'undefined' && input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
          }

          function set(config) {
            var prop, i;

            for (i in config) {
              if (hasOwnProp(config, i)) {
                prop = config[i];

                if (isFunction(prop)) {
                  this[i] = prop;
                } else {
                  this['_' + i] = prop;
                }
              }
            }

            this._config = config; // Lenient ordinal parsing accepts just a number in addition to
            // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
            // TODO: Remove "ordinalParse" fallback in next major release.

            this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\d{1,2}/.source);
          }

          function mergeConfigs(parentConfig, childConfig) {
            var res = extend({}, parentConfig),
                prop;

            for (prop in childConfig) {
              if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                  res[prop] = {};
                  extend(res[prop], parentConfig[prop]);
                  extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                  res[prop] = childConfig[prop];
                } else {
                  delete res[prop];
                }
              }
            }

            for (prop in parentConfig) {
              if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
              }
            }

            return res;
          }

          function Locale(config) {
            if (config != null) {
              this.set(config);
            }
          }

          var keys;

          if (Object.keys) {
            keys = Object.keys;
          } else {
            keys = function keys(obj) {
              var i,
                  res = [];

              for (i in obj) {
                if (hasOwnProp(obj, i)) {
                  res.push(i);
                }
              }

              return res;
            };
          }

          var defaultCalendar = {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L'
          };

          function calendar(key, mom, now) {
            var output = this._calendar[key] || this._calendar['sameElse'];
            return isFunction(output) ? output.call(mom, now) : output;
          }

          function zeroFill(number, targetLength, forceSign) {
            var absNumber = '' + Math.abs(number),
                zerosToFill = targetLength - absNumber.length,
                sign = number >= 0;
            return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
          }

          var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
              localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
              formatFunctions = {},
              formatTokenFunctions = {}; // token:    'M'
          // padded:   ['MM', 2]
          // ordinal:  'Mo'
          // callback: function () { this.month() + 1 }

          function addFormatToken(token, padded, ordinal, callback) {
            var func = callback;

            if (typeof callback === 'string') {
              func = function func() {
                return this[callback]();
              };
            }

            if (token) {
              formatTokenFunctions[token] = func;
            }

            if (padded) {
              formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
              };
            }

            if (ordinal) {
              formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
              };
            }
          }

          function removeFormattingTokens(input) {
            if (input.match(/\[[\s\S]/)) {
              return input.replace(/^\[|\]$/g, '');
            }

            return input.replace(/\\/g, '');
          }

          function makeFormatFunction(format) {
            var array = format.match(formattingTokens),
                i,
                length;

            for (i = 0, length = array.length; i < length; i++) {
              if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
              } else {
                array[i] = removeFormattingTokens(array[i]);
              }
            }

            return function (mom) {
              var output = '',
                  i;

              for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
              }

              return output;
            };
          } // format date using native date object


          function formatMoment(m, format) {
            if (!m.isValid()) {
              return m.localeData().invalidDate();
            }

            format = expandFormat(format, m.localeData());
            formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
            return formatFunctions[format](m);
          }

          function expandFormat(format, locale) {
            var i = 5;

            function replaceLongDateFormatTokens(input) {
              return locale.longDateFormat(input) || input;
            }

            localFormattingTokens.lastIndex = 0;

            while (i >= 0 && localFormattingTokens.test(format)) {
              format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
              localFormattingTokens.lastIndex = 0;
              i -= 1;
            }

            return format;
          }

          var defaultLongDateFormat = {
            LTS: 'h:mm:ss A',
            LT: 'h:mm A',
            L: 'MM/DD/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A'
          };

          function longDateFormat(key) {
            var format = this._longDateFormat[key],
                formatUpper = this._longDateFormat[key.toUpperCase()];

            if (format || !formatUpper) {
              return format;
            }

            this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function (tok) {
              if (tok === 'MMMM' || tok === 'MM' || tok === 'DD' || tok === 'dddd') {
                return tok.slice(1);
              }

              return tok;
            }).join('');
            return this._longDateFormat[key];
          }

          var defaultInvalidDate = 'Invalid date';

          function invalidDate() {
            return this._invalidDate;
          }

          var defaultOrdinal = '%d',
              defaultDayOfMonthOrdinalParse = /\d{1,2}/;

          function ordinal(number) {
            return this._ordinal.replace('%d', number);
          }

          var defaultRelativeTime = {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            w: 'a week',
            ww: '%d weeks',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years'
          };

          function relativeTime(number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string];
            return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
          }

          function pastFuture(diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
            return isFunction(format) ? format(output) : format.replace(/%s/i, output);
          }

          var aliases = {};

          function addUnitAlias(unit, shorthand) {
            var lowerCase = unit.toLowerCase();
            aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
          }

          function normalizeUnits(units) {
            return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
          }

          function normalizeObjectUnits(inputObject) {
            var normalizedInput = {},
                normalizedProp,
                prop;

            for (prop in inputObject) {
              if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);

                if (normalizedProp) {
                  normalizedInput[normalizedProp] = inputObject[prop];
                }
              }
            }

            return normalizedInput;
          }

          var priorities = {};

          function addUnitPriority(unit, priority) {
            priorities[unit] = priority;
          }

          function getPrioritizedUnits(unitsObj) {
            var units = [],
                u;

            for (u in unitsObj) {
              if (hasOwnProp(unitsObj, u)) {
                units.push({
                  unit: u,
                  priority: priorities[u]
                });
              }
            }

            units.sort(function (a, b) {
              return a.priority - b.priority;
            });
            return units;
          }

          function isLeapYear(year) {
            return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
          }

          function absFloor(number) {
            if (number < 0) {
              // -0 -> 0
              return Math.ceil(number) || 0;
            } else {
              return Math.floor(number);
            }
          }

          function toInt(argumentForCoercion) {
            var coercedNumber = +argumentForCoercion,
                value = 0;

            if (coercedNumber !== 0 && isFinite(coercedNumber)) {
              value = absFloor(coercedNumber);
            }

            return value;
          }

          function makeGetSet(unit, keepTime) {
            return function (value) {
              if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
              } else {
                return get(this, unit);
              }
            };
          }

          function get(mom, unit) {
            return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
          }

          function set$1(mom, unit, value) {
            if (mom.isValid() && !isNaN(value)) {
              if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                value = toInt(value);

                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
              } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
              }
            }
          } // MOMENTS


          function stringGet(units) {
            units = normalizeUnits(units);

            if (isFunction(this[units])) {
              return this[units]();
            }

            return this;
          }

          function stringSet(units, value) {
            if (typeof units === 'object') {
              units = normalizeObjectUnits(units);
              var prioritized = getPrioritizedUnits(units),
                  i;

              for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
              }
            } else {
              units = normalizeUnits(units);

              if (isFunction(this[units])) {
                return this[units](value);
              }
            }

            return this;
          }

          var match1 = /\d/,
              //       0 - 9
          match2 = /\d\d/,
              //      00 - 99
          match3 = /\d{3}/,
              //     000 - 999
          match4 = /\d{4}/,
              //    0000 - 9999
          match6 = /[+-]?\d{6}/,
              // -999999 - 999999
          match1to2 = /\d\d?/,
              //       0 - 99
          match3to4 = /\d\d\d\d?/,
              //     999 - 9999
          match5to6 = /\d\d\d\d\d\d?/,
              //   99999 - 999999
          match1to3 = /\d{1,3}/,
              //       0 - 999
          match1to4 = /\d{1,4}/,
              //       0 - 9999
          match1to6 = /[+-]?\d{1,6}/,
              // -999999 - 999999
          matchUnsigned = /\d+/,
              //       0 - inf
          matchSigned = /[+-]?\d+/,
              //    -inf - inf
          matchOffset = /Z|[+-]\d\d:?\d\d/gi,
              // +00:00 -00:00 +0000 -0000 or Z
          matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi,
              // +00 -00 +00:00 -00:00 +0000 -0000 or Z
          matchTimestamp = /[+-]?\d+(\.\d{1,3})?/,
              // 123456789 123456789.123
          // any word (or two) characters or numbers including two/three word month in arabic.
          // includes scottish gaelic two word and hyphenated months
          matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
              regexes;
          regexes = {};

          function addRegexToken(token, regex, strictRegex) {
            regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
              return isStrict && strictRegex ? strictRegex : regex;
            };
          }

          function getParseRegexForToken(token, config) {
            if (!hasOwnProp(regexes, token)) {
              return new RegExp(unescapeFormat(token));
            }

            return regexes[token](config._strict, config._locale);
          } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript


          function unescapeFormat(s) {
            return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
              return p1 || p2 || p3 || p4;
            }));
          }

          function regexEscape(s) {
            return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
          }

          var tokens = {};

          function addParseToken(token, callback) {
            var i,
                func = callback;

            if (typeof token === 'string') {
              token = [token];
            }

            if (isNumber(callback)) {
              func = function func(input, array) {
                array[callback] = toInt(input);
              };
            }

            for (i = 0; i < token.length; i++) {
              tokens[token[i]] = func;
            }
          }

          function addWeekParseToken(token, callback) {
            addParseToken(token, function (input, array, config, token) {
              config._w = config._w || {};
              callback(input, config._w, config, token);
            });
          }

          function addTimeToArrayFromToken(token, input, config) {
            if (input != null && hasOwnProp(tokens, token)) {
              tokens[token](input, config._a, config, token);
            }
          }

          var YEAR = 0,
              MONTH = 1,
              DATE = 2,
              HOUR = 3,
              MINUTE = 4,
              SECOND = 5,
              MILLISECOND = 6,
              WEEK = 7,
              WEEKDAY = 8;

          function mod(n, x) {
            return (n % x + x) % x;
          }

          var indexOf;

          if (Array.prototype.indexOf) {
            indexOf = Array.prototype.indexOf;
          } else {
            indexOf = function indexOf(o) {
              // I know
              var i;

              for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                  return i;
                }
              }

              return -1;
            };
          }

          function daysInMonth(year, month) {
            if (isNaN(year) || isNaN(month)) {
              return NaN;
            }

            var modMonth = mod(month, 12);
            year += (month - modMonth) / 12;
            return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
          } // FORMATTING


          addFormatToken('M', ['MM', 2], 'Mo', function () {
            return this.month() + 1;
          });
          addFormatToken('MMM', 0, 0, function (format) {
            return this.localeData().monthsShort(this, format);
          });
          addFormatToken('MMMM', 0, 0, function (format) {
            return this.localeData().months(this, format);
          }); // ALIASES

          addUnitAlias('month', 'M'); // PRIORITY

          addUnitPriority('month', 8); // PARSING

          addRegexToken('M', match1to2);
          addRegexToken('MM', match1to2, match2);
          addRegexToken('MMM', function (isStrict, locale) {
            return locale.monthsShortRegex(isStrict);
          });
          addRegexToken('MMMM', function (isStrict, locale) {
            return locale.monthsRegex(isStrict);
          });
          addParseToken(['M', 'MM'], function (input, array) {
            array[MONTH] = toInt(input) - 1;
          });
          addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
            var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.


            if (month != null) {
              array[MONTH] = month;
            } else {
              getParsingFlags(config).invalidMonth = input;
            }
          }); // LOCALES

          var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
              defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
              MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
              defaultMonthsShortRegex = matchWord,
              defaultMonthsRegex = matchWord;

          function localeMonths(m, format) {
            if (!m) {
              return isArray(this._months) ? this._months : this._months['standalone'];
            }

            return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
          }

          function localeMonthsShort(m, format) {
            if (!m) {
              return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];
            }

            return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
          }

          function handleStrictParse(monthName, format, strict) {
            var i,
                ii,
                mom,
                llc = monthName.toLocaleLowerCase();

            if (!this._monthsParse) {
              // this is not used
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];

              for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
              }
            }

            if (strict) {
              if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
              }
            } else {
              if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._longMonthsParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
              }
            }
          }

          function localeMonthsParse(monthName, format, strict) {
            var i, mom, regex;

            if (this._monthsParseExact) {
              return handleStrictParse.call(this, monthName, format, strict);
            }

            if (!this._monthsParse) {
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];
            } // TODO: add sorting
            // Sorting makes sure if one month (or abbr) is a prefix of another
            // see sorting in computeMonthsParse


            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i]);

              if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
              }

              if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
              } // test the regex


              if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
              } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
              } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
              }
            }
          } // MOMENTS


          function setMonth(mom, value) {
            var dayOfMonth;

            if (!mom.isValid()) {
              // No op
              return mom;
            }

            if (typeof value === 'string') {
              if (/^\d+$/.test(value)) {
                value = toInt(value);
              } else {
                value = mom.localeData().monthsParse(value); // TODO: Another silent failure?

                if (!isNumber(value)) {
                  return mom;
                }
              }
            }

            dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));

            mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);

            return mom;
          }

          function getSetMonth(value) {
            if (value != null) {
              setMonth(this, value);
              hooks.updateOffset(this, true);
              return this;
            } else {
              return get(this, 'Month');
            }
          }

          function getDaysInMonth() {
            return daysInMonth(this.year(), this.month());
          }

          function monthsShortRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
              }

              if (isStrict) {
                return this._monthsShortStrictRegex;
              } else {
                return this._monthsShortRegex;
              }
            } else {
              if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
              }

              return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
            }
          }

          function monthsRegex(isStrict) {
            if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
              }

              if (isStrict) {
                return this._monthsStrictRegex;
              } else {
                return this._monthsRegex;
              }
            } else {
              if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
              }

              return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
            }
          }

          function computeMonthsParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length;
            }

            var shortPieces = [],
                longPieces = [],
                mixedPieces = [],
                i,
                mom;

            for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i]);
              shortPieces.push(this.monthsShort(mom, ''));
              longPieces.push(this.months(mom, ''));
              mixedPieces.push(this.months(mom, ''));
              mixedPieces.push(this.monthsShort(mom, ''));
            } // Sorting makes sure if one month (or abbr) is a prefix of another it
            // will match the longer piece.


            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);

            for (i = 0; i < 12; i++) {
              shortPieces[i] = regexEscape(shortPieces[i]);
              longPieces[i] = regexEscape(longPieces[i]);
            }

            for (i = 0; i < 24; i++) {
              mixedPieces[i] = regexEscape(mixedPieces[i]);
            }

            this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._monthsShortRegex = this._monthsRegex;
            this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
            this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
          } // FORMATTING


          addFormatToken('Y', 0, 0, function () {
            var y = this.year();
            return y <= 9999 ? zeroFill(y, 4) : '+' + y;
          });
          addFormatToken(0, ['YY', 2], 0, function () {
            return this.year() % 100;
          });
          addFormatToken(0, ['YYYY', 4], 0, 'year');
          addFormatToken(0, ['YYYYY', 5], 0, 'year');
          addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES

          addUnitAlias('year', 'y'); // PRIORITIES

          addUnitPriority('year', 1); // PARSING

          addRegexToken('Y', matchSigned);
          addRegexToken('YY', match1to2, match2);
          addRegexToken('YYYY', match1to4, match4);
          addRegexToken('YYYYY', match1to6, match6);
          addRegexToken('YYYYYY', match1to6, match6);
          addParseToken(['YYYYY', 'YYYYYY'], YEAR);
          addParseToken('YYYY', function (input, array) {
            array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
          });
          addParseToken('YY', function (input, array) {
            array[YEAR] = hooks.parseTwoDigitYear(input);
          });
          addParseToken('Y', function (input, array) {
            array[YEAR] = parseInt(input, 10);
          }); // HELPERS

          function daysInYear(year) {
            return isLeapYear(year) ? 366 : 365;
          } // HOOKS


          hooks.parseTwoDigitYear = function (input) {
            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
          }; // MOMENTS


          var getSetYear = makeGetSet('FullYear', true);

          function getIsLeapYear() {
            return isLeapYear(this.year());
          }

          function createDate(y, m, d, h, M, s, ms) {
            // can't just apply() to create a date:
            // https://stackoverflow.com/q/181348
            var date; // the date constructor remaps years 0-99 to 1900-1999

            if (y < 100 && y >= 0) {
              // preserve leap years using a full 400 year cycle, then reset
              date = new Date(y + 400, m, d, h, M, s, ms);

              if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
              }
            } else {
              date = new Date(y, m, d, h, M, s, ms);
            }

            return date;
          }

          function createUTCDate(y) {
            var date, args; // the Date.UTC function remaps years 0-99 to 1900-1999

            if (y < 100 && y >= 0) {
              args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset

              args[0] = y + 400;
              date = new Date(Date.UTC.apply(null, args));

              if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
              }
            } else {
              date = new Date(Date.UTC.apply(null, arguments));
            }

            return date;
          } // start-of-first-week - start-of-year


          function firstWeekOffset(year, dow, doy) {
            var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
                // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
            return -fwdlw + fwd - 1;
          } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday


          function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
            var localWeekday = (7 + weekday - dow) % 7,
                weekOffset = firstWeekOffset(year, dow, doy),
                dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
                resYear,
                resDayOfYear;

            if (dayOfYear <= 0) {
              resYear = year - 1;
              resDayOfYear = daysInYear(resYear) + dayOfYear;
            } else if (dayOfYear > daysInYear(year)) {
              resYear = year + 1;
              resDayOfYear = dayOfYear - daysInYear(year);
            } else {
              resYear = year;
              resDayOfYear = dayOfYear;
            }

            return {
              year: resYear,
              dayOfYear: resDayOfYear
            };
          }

          function weekOfYear(mom, dow, doy) {
            var weekOffset = firstWeekOffset(mom.year(), dow, doy),
                week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
                resWeek,
                resYear;

            if (week < 1) {
              resYear = mom.year() - 1;
              resWeek = week + weeksInYear(resYear, dow, doy);
            } else if (week > weeksInYear(mom.year(), dow, doy)) {
              resWeek = week - weeksInYear(mom.year(), dow, doy);
              resYear = mom.year() + 1;
            } else {
              resYear = mom.year();
              resWeek = week;
            }

            return {
              week: resWeek,
              year: resYear
            };
          }

          function weeksInYear(year, dow, doy) {
            var weekOffset = firstWeekOffset(year, dow, doy),
                weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
            return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
          } // FORMATTING


          addFormatToken('w', ['ww', 2], 'wo', 'week');
          addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES

          addUnitAlias('week', 'w');
          addUnitAlias('isoWeek', 'W'); // PRIORITIES

          addUnitPriority('week', 5);
          addUnitPriority('isoWeek', 5); // PARSING

          addRegexToken('w', match1to2);
          addRegexToken('ww', match1to2, match2);
          addRegexToken('W', match1to2);
          addRegexToken('WW', match1to2, match2);
          addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
            week[token.substr(0, 1)] = toInt(input);
          }); // HELPERS
          // LOCALES

          function localeWeek(mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week;
          }

          var defaultLocaleWeek = {
            dow: 0,
            // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.

          };

          function localeFirstDayOfWeek() {
            return this._week.dow;
          }

          function localeFirstDayOfYear() {
            return this._week.doy;
          } // MOMENTS


          function getSetWeek(input) {
            var week = this.localeData().week(this);
            return input == null ? week : this.add((input - week) * 7, 'd');
          }

          function getSetISOWeek(input) {
            var week = weekOfYear(this, 1, 4).week;
            return input == null ? week : this.add((input - week) * 7, 'd');
          } // FORMATTING


          addFormatToken('d', 0, 'do', 'day');
          addFormatToken('dd', 0, 0, function (format) {
            return this.localeData().weekdaysMin(this, format);
          });
          addFormatToken('ddd', 0, 0, function (format) {
            return this.localeData().weekdaysShort(this, format);
          });
          addFormatToken('dddd', 0, 0, function (format) {
            return this.localeData().weekdays(this, format);
          });
          addFormatToken('e', 0, 0, 'weekday');
          addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES

          addUnitAlias('day', 'd');
          addUnitAlias('weekday', 'e');
          addUnitAlias('isoWeekday', 'E'); // PRIORITY

          addUnitPriority('day', 11);
          addUnitPriority('weekday', 11);
          addUnitPriority('isoWeekday', 11); // PARSING

          addRegexToken('d', match1to2);
          addRegexToken('e', match1to2);
          addRegexToken('E', match1to2);
          addRegexToken('dd', function (isStrict, locale) {
            return locale.weekdaysMinRegex(isStrict);
          });
          addRegexToken('ddd', function (isStrict, locale) {
            return locale.weekdaysShortRegex(isStrict);
          });
          addRegexToken('dddd', function (isStrict, locale) {
            return locale.weekdaysRegex(isStrict);
          });
          addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
            var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid


            if (weekday != null) {
              week.d = weekday;
            } else {
              getParsingFlags(config).invalidWeekday = input;
            }
          });
          addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
            week[token] = toInt(input);
          }); // HELPERS

          function parseWeekday(input, locale) {
            if (typeof input !== 'string') {
              return input;
            }

            if (!isNaN(input)) {
              return parseInt(input, 10);
            }

            input = locale.weekdaysParse(input);

            if (typeof input === 'number') {
              return input;
            }

            return null;
          }

          function parseIsoWeekday(input, locale) {
            if (typeof input === 'string') {
              return locale.weekdaysParse(input) % 7 || 7;
            }

            return isNaN(input) ? null : input;
          } // LOCALES


          function shiftWeekdays(ws, n) {
            return ws.slice(n, 7).concat(ws.slice(0, n));
          }

          var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
              defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
              defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
              defaultWeekdaysRegex = matchWord,
              defaultWeekdaysShortRegex = matchWord,
              defaultWeekdaysMinRegex = matchWord;

          function localeWeekdays(m, format) {
            var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];
            return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;
          }

          function localeWeekdaysShort(m) {
            return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;
          }

          function localeWeekdaysMin(m) {
            return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;
          }

          function handleStrictParse$1(weekdayName, format, strict) {
            var i,
                ii,
                mom,
                llc = weekdayName.toLocaleLowerCase();

            if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._minWeekdaysParse = [];

              for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
              }
            }

            if (strict) {
              if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              }
            } else {
              if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._shortWeekdaysParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._weekdaysParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._weekdaysParse, llc);

                if (ii !== -1) {
                  return ii;
                }

                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
              }
            }
          }

          function localeWeekdaysParse(weekdayName, format, strict) {
            var i, mom, regex;

            if (this._weekdaysParseExact) {
              return handleStrictParse$1.call(this, weekdayName, format, strict);
            }

            if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._minWeekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._fullWeekdaysParse = [];
            }

            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, 1]).day(i);

              if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
              }

              if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
              } // test the regex


              if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
              } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
              } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
              } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
              }
            }
          } // MOMENTS


          function getSetDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }

            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();

            if (input != null) {
              input = parseWeekday(input, this.localeData());
              return this.add(input - day, 'd');
            } else {
              return day;
            }
          }

          function getSetLocaleDayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            }

            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return input == null ? weekday : this.add(input - weekday, 'd');
          }

          function getSetISODayOfWeek(input) {
            if (!this.isValid()) {
              return input != null ? this : NaN;
            } // behaves the same as moment#day except
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
            // as a setter, sunday should belong to the previous week.


            if (input != null) {
              var weekday = parseIsoWeekday(input, this.localeData());
              return this.day(this.day() % 7 ? weekday : weekday - 7);
            } else {
              return this.day() || 7;
            }
          }

          function weekdaysRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
              }

              if (isStrict) {
                return this._weekdaysStrictRegex;
              } else {
                return this._weekdaysRegex;
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
              }

              return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
            }
          }

          function weekdaysShortRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
              }

              if (isStrict) {
                return this._weekdaysShortStrictRegex;
              } else {
                return this._weekdaysShortRegex;
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
              }

              return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
            }
          }

          function weekdaysMinRegex(isStrict) {
            if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
              }

              if (isStrict) {
                return this._weekdaysMinStrictRegex;
              } else {
                return this._weekdaysMinRegex;
              }
            } else {
              if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
              }

              return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
            }
          }

          function computeWeekdaysParse() {
            function cmpLenRev(a, b) {
              return b.length - a.length;
            }

            var minPieces = [],
                shortPieces = [],
                longPieces = [],
                mixedPieces = [],
                i,
                mom,
                minp,
                shortp,
                longp;

            for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, 1]).day(i);
              minp = regexEscape(this.weekdaysMin(mom, ''));
              shortp = regexEscape(this.weekdaysShort(mom, ''));
              longp = regexEscape(this.weekdays(mom, ''));
              minPieces.push(minp);
              shortPieces.push(shortp);
              longPieces.push(longp);
              mixedPieces.push(minp);
              mixedPieces.push(shortp);
              mixedPieces.push(longp);
            } // Sorting makes sure if one weekday (or abbr) is a prefix of another it
            // will match the longer piece.


            minPieces.sort(cmpLenRev);
            shortPieces.sort(cmpLenRev);
            longPieces.sort(cmpLenRev);
            mixedPieces.sort(cmpLenRev);
            this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._weekdaysShortRegex = this._weekdaysRegex;
            this._weekdaysMinRegex = this._weekdaysRegex;
            this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
            this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
            this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
          } // FORMATTING


          function hFormat() {
            return this.hours() % 12 || 12;
          }

          function kFormat() {
            return this.hours() || 24;
          }

          addFormatToken('H', ['HH', 2], 0, 'hour');
          addFormatToken('h', ['hh', 2], 0, hFormat);
          addFormatToken('k', ['kk', 2], 0, kFormat);
          addFormatToken('hmm', 0, 0, function () {
            return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
          });
          addFormatToken('hmmss', 0, 0, function () {
            return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
          });
          addFormatToken('Hmm', 0, 0, function () {
            return '' + this.hours() + zeroFill(this.minutes(), 2);
          });
          addFormatToken('Hmmss', 0, 0, function () {
            return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
          });

          function meridiem(token, lowercase) {
            addFormatToken(token, 0, 0, function () {
              return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
            });
          }

          meridiem('a', true);
          meridiem('A', false); // ALIASES

          addUnitAlias('hour', 'h'); // PRIORITY

          addUnitPriority('hour', 13); // PARSING

          function matchMeridiem(isStrict, locale) {
            return locale._meridiemParse;
          }

          addRegexToken('a', matchMeridiem);
          addRegexToken('A', matchMeridiem);
          addRegexToken('H', match1to2);
          addRegexToken('h', match1to2);
          addRegexToken('k', match1to2);
          addRegexToken('HH', match1to2, match2);
          addRegexToken('hh', match1to2, match2);
          addRegexToken('kk', match1to2, match2);
          addRegexToken('hmm', match3to4);
          addRegexToken('hmmss', match5to6);
          addRegexToken('Hmm', match3to4);
          addRegexToken('Hmmss', match5to6);
          addParseToken(['H', 'HH'], HOUR);
          addParseToken(['k', 'kk'], function (input, array, config) {
            var kInput = toInt(input);
            array[HOUR] = kInput === 24 ? 0 : kInput;
          });
          addParseToken(['a', 'A'], function (input, array, config) {
            config._isPm = config._locale.isPM(input);
            config._meridiem = input;
          });
          addParseToken(['h', 'hh'], function (input, array, config) {
            array[HOUR] = toInt(input);
            getParsingFlags(config).bigHour = true;
          });
          addParseToken('hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
            getParsingFlags(config).bigHour = true;
          });
          addParseToken('hmmss', function (input, array, config) {
            var pos1 = input.length - 4,
                pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
            getParsingFlags(config).bigHour = true;
          });
          addParseToken('Hmm', function (input, array, config) {
            var pos = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos));
            array[MINUTE] = toInt(input.substr(pos));
          });
          addParseToken('Hmmss', function (input, array, config) {
            var pos1 = input.length - 4,
                pos2 = input.length - 2;
            array[HOUR] = toInt(input.substr(0, pos1));
            array[MINUTE] = toInt(input.substr(pos1, 2));
            array[SECOND] = toInt(input.substr(pos2));
          }); // LOCALES

          function localeIsPM(input) {
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
            // Using charAt should be more compatible.
            return (input + '').toLowerCase().charAt(0) === 'p';
          }

          var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
              // Setting the hour should keep the time, because the user explicitly
          // specified which hour they want. So trying to maintain the same hour (in
          // a new timezone) makes sense. Adding/subtracting hours does not follow
          // this rule.
          getSetHour = makeGetSet('Hours', true);

          function localeMeridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? 'pm' : 'PM';
            } else {
              return isLower ? 'am' : 'AM';
            }
          }

          var baseConfig = {
            calendar: defaultCalendar,
            longDateFormat: defaultLongDateFormat,
            invalidDate: defaultInvalidDate,
            ordinal: defaultOrdinal,
            dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
            relativeTime: defaultRelativeTime,
            months: defaultLocaleMonths,
            monthsShort: defaultLocaleMonthsShort,
            week: defaultLocaleWeek,
            weekdays: defaultLocaleWeekdays,
            weekdaysMin: defaultLocaleWeekdaysMin,
            weekdaysShort: defaultLocaleWeekdaysShort,
            meridiemParse: defaultLocaleMeridiemParse
          }; // internal storage for locale config files

          var locales = {},
              localeFamilies = {},
              globalLocale;

          function commonPrefix(arr1, arr2) {
            var i,
                minl = Math.min(arr1.length, arr2.length);

            for (i = 0; i < minl; i += 1) {
              if (arr1[i] !== arr2[i]) {
                return i;
              }
            }

            return minl;
          }

          function normalizeLocale(key) {
            return key ? key.toLowerCase().replace('_', '-') : key;
          } // pick the locale from the array
          // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
          // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root


          function chooseLocale(names) {
            var i = 0,
                j,
                next,
                locale,
                split;

            while (i < names.length) {
              split = normalizeLocale(names[i]).split('-');
              j = split.length;
              next = normalizeLocale(names[i + 1]);
              next = next ? next.split('-') : null;

              while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));

                if (locale) {
                  return locale;
                }

                if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {
                  //the next array item is better than a shallower substring of this one
                  break;
                }

                j--;
              }

              i++;
            }

            return globalLocale;
          }

          function loadLocale(name) {
            var oldLocale = null,
                aliasedRequire; // TODO: Find a better way to register and load all the locales in Node

            if (locales[name] === undefined && typeof module !== 'undefined' && module && module.exports) {
              try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;

                __webpack_require__("RnhZ")("./" + name);

                getSetGlobalLocale(oldLocale);
              } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
              }
            }

            return locales[name];
          } // This function will load locale and then set the global locale.  If
          // no arguments are passed in, it will simply return the current global
          // locale key.


          function getSetGlobalLocale(key, values) {
            var data;

            if (key) {
              if (isUndefined(values)) {
                data = getLocale(key);
              } else {
                data = defineLocale(key, values);
              }

              if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
              } else {
                if (typeof console !== 'undefined' && console.warn) {
                  //warn user if arguments are passed but the locale could not be set
                  console.warn('Locale ' + key + ' not found. Did you forget to load it?');
                }
              }
            }

            return globalLocale._abbr;
          }

          function defineLocale(name, config) {
            if (config !== null) {
              var locale,
                  parentConfig = baseConfig;
              config.abbr = name;

              if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
              } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                  parentConfig = locales[config.parentLocale]._config;
                } else {
                  locale = loadLocale(config.parentLocale);

                  if (locale != null) {
                    parentConfig = locale._config;
                  } else {
                    if (!localeFamilies[config.parentLocale]) {
                      localeFamilies[config.parentLocale] = [];
                    }

                    localeFamilies[config.parentLocale].push({
                      name: name,
                      config: config
                    });
                    return null;
                  }
                }
              }

              locales[name] = new Locale(mergeConfigs(parentConfig, config));

              if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                  defineLocale(x.name, x.config);
                });
              } // backwards compat for now: also set the locale
              // make sure we set the locale AFTER all child locales have been
              // created, so we won't end up with the child locale set.


              getSetGlobalLocale(name);
              return locales[name];
            } else {
              // useful for testing
              delete locales[name];
              return null;
            }
          }

          function updateLocale(name, config) {
            if (config != null) {
              var locale,
                  tmpLocale,
                  parentConfig = baseConfig;

              if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
              } else {
                // MERGE
                tmpLocale = loadLocale(name);

                if (tmpLocale != null) {
                  parentConfig = tmpLocale._config;
                }

                config = mergeConfigs(parentConfig, config);

                if (tmpLocale == null) {
                  // updateLocale is called for creating a new locale
                  // Set abbr so it will have a name (getters return
                  // undefined otherwise).
                  config.abbr = name;
                }

                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
              } // backwards compat for now: also set the locale


              getSetGlobalLocale(name);
            } else {
              // pass null for config to unupdate, useful for tests
              if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                  locales[name] = locales[name].parentLocale;

                  if (name === getSetGlobalLocale()) {
                    getSetGlobalLocale(name);
                  }
                } else if (locales[name] != null) {
                  delete locales[name];
                }
              }
            }

            return locales[name];
          } // returns locale data


          function getLocale(key) {
            var locale;

            if (key && key._locale && key._locale._abbr) {
              key = key._locale._abbr;
            }

            if (!key) {
              return globalLocale;
            }

            if (!isArray(key)) {
              //short-circuit everything else
              locale = loadLocale(key);

              if (locale) {
                return locale;
              }

              key = [key];
            }

            return chooseLocale(key);
          }

          function listLocales() {
            return keys(locales);
          }

          function checkOverflow(m) {
            var overflow,
                a = m._a;

            if (a && getParsingFlags(m).overflow === -2) {
              overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;

              if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
              }

              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
              }

              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
              }

              getParsingFlags(m).overflow = overflow;
            }

            return m;
          } // iso 8601 regex
          // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)


          var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
              basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
              tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
              isoDates = [['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/], ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/], ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/], ['GGGG-[W]WW', /\d{4}-W\d\d/, false], ['YYYY-DDD', /\d{4}-\d{3}/], ['YYYY-MM', /\d{4}-\d\d/, false], ['YYYYYYMMDD', /[+-]\d{10}/], ['YYYYMMDD', /\d{8}/], ['GGGG[W]WWE', /\d{4}W\d{3}/], ['GGGG[W]WW', /\d{4}W\d{2}/, false], ['YYYYDDD', /\d{7}/], ['YYYYMM', /\d{6}/, false], ['YYYY', /\d{4}/, false]],
              // iso time formats and regexes
          isoTimes = [['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/], ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/], ['HH:mm:ss', /\d\d:\d\d:\d\d/], ['HH:mm', /\d\d:\d\d/], ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/], ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/], ['HHmmss', /\d\d\d\d\d\d/], ['HHmm', /\d\d\d\d/], ['HH', /\d\d/]],
              aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
              // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
          rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
              obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60
          }; // date from iso format

          function configFromISO(config) {
            var i,
                l,
                string = config._i,
                match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
                allowTime,
                dateFormat,
                timeFormat,
                tzFormat;

            if (match) {
              getParsingFlags(config).iso = true;

              for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                  dateFormat = isoDates[i][0];
                  allowTime = isoDates[i][2] !== false;
                  break;
                }
              }

              if (dateFormat == null) {
                config._isValid = false;
                return;
              }

              if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                  if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
                    break;
                  }
                }

                if (timeFormat == null) {
                  config._isValid = false;
                  return;
                }
              }

              if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
              }

              if (match[4]) {
                if (tzRegex.exec(match[4])) {
                  tzFormat = 'Z';
                } else {
                  config._isValid = false;
                  return;
                }
              }

              config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
              configFromStringAndFormat(config);
            } else {
              config._isValid = false;
            }
          }

          function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
            var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];

            if (secondStr) {
              result.push(parseInt(secondStr, 10));
            }

            return result;
          }

          function untruncateYear(yearStr) {
            var year = parseInt(yearStr, 10);

            if (year <= 49) {
              return 2000 + year;
            } else if (year <= 999) {
              return 1900 + year;
            }

            return year;
          }

          function preprocessRFC2822(s) {
            // Remove comments and folding whitespace and replace multiple-spaces with a single space
            return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
          }

          function checkWeekday(weekdayStr, parsedInput, config) {
            if (weekdayStr) {
              // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
              var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                  weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();

              if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
              }
            }

            return true;
          }

          function calculateOffset(obsOffset, militaryOffset, numOffset) {
            if (obsOffset) {
              return obsOffsets[obsOffset];
            } else if (militaryOffset) {
              // the only allowed military tz is Z
              return 0;
            } else {
              var hm = parseInt(numOffset, 10),
                  m = hm % 100,
                  h = (hm - m) / 100;
              return h * 60 + m;
            }
          } // date and time from ref 2822 format


          function configFromRFC2822(config) {
            var match = rfc2822.exec(preprocessRFC2822(config._i)),
                parsedArray;

            if (match) {
              parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);

              if (!checkWeekday(match[1], parsedArray, config)) {
                return;
              }

              config._a = parsedArray;
              config._tzm = calculateOffset(match[8], match[9], match[10]);
              config._d = createUTCDate.apply(null, config._a);

              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

              getParsingFlags(config).rfc2822 = true;
            } else {
              config._isValid = false;
            }
          } // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict


          function configFromString(config) {
            var matched = aspNetJsonRegex.exec(config._i);

            if (matched !== null) {
              config._d = new Date(+matched[1]);
              return;
            }

            configFromISO(config);

            if (config._isValid === false) {
              delete config._isValid;
            } else {
              return;
            }

            configFromRFC2822(config);

            if (config._isValid === false) {
              delete config._isValid;
            } else {
              return;
            }

            if (config._strict) {
              config._isValid = false;
            } else {
              // Final attempt, use Input Fallback
              hooks.createFromInputFallback(config);
            }
          }

          hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
          }); // Pick the first defined of two or three arguments.

          function defaults(a, b, c) {
            if (a != null) {
              return a;
            }

            if (b != null) {
              return b;
            }

            return c;
          }

          function currentDateArray(config) {
            // hooks is actually the exported moment object
            var nowValue = new Date(hooks.now());

            if (config._useUTC) {
              return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
            }

            return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
          } // convert an array to a date.
          // the array should mirror the parameters below
          // note: all values past the year are optional and will default to the lowest possible value.
          // [year, month, day , hour, minute, second, millisecond]


          function configFromArray(config) {
            var i,
                date,
                input = [],
                currentDate,
                expectedWeekday,
                yearToUse;

            if (config._d) {
              return;
            }

            currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays

            if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
              dayOfYearFromWeekInfo(config);
            } //if the day of the year is set, figure out what it is


            if (config._dayOfYear != null) {
              yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

              if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
              }

              date = createUTCDate(yearToUse, 0, config._dayOfYear);
              config._a[MONTH] = date.getUTCMonth();
              config._a[DATE] = date.getUTCDate();
            } // Default to current date.
            // * if no year, month, day of month are given, default to today
            // * if day of month is given, default month and year
            // * if month is given, default only year
            // * if year is given, don't default anything


            for (i = 0; i < 3 && config._a[i] == null; ++i) {
              config._a[i] = input[i] = currentDate[i];
            } // Zero out whatever was not defaulted, including time


            for (; i < 7; i++) {
              config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
            } // Check for 24:00:00.000


            if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
              config._nextDay = true;
              config._a[HOUR] = 0;
            }

            config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
            expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed
            // with parseZone.

            if (config._tzm != null) {
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
            }

            if (config._nextDay) {
              config._a[HOUR] = 24;
            } // check for mismatching day of week


            if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
              getParsingFlags(config).weekdayMismatch = true;
            }
          }

          function dayOfYearFromWeekInfo(config) {
            var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
            w = config._w;

            if (w.GG != null || w.W != null || w.E != null) {
              dow = 1;
              doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on
              // how we interpret now (local, utc, fixed offset). So create
              // a now version of current config (take local/utc/offset flags, and
              // create now).

              weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
              week = defaults(w.W, 1);
              weekday = defaults(w.E, 1);

              if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
              }
            } else {
              dow = config._locale._week.dow;
              doy = config._locale._week.doy;
              curWeek = weekOfYear(createLocal(), dow, doy);
              weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.

              week = defaults(w.w, curWeek.week);

              if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;

                if (weekday < 0 || weekday > 6) {
                  weekdayOverflow = true;
                }
              } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;

                if (w.e < 0 || w.e > 6) {
                  weekdayOverflow = true;
                }
              } else {
                // default to beginning of week
                weekday = dow;
              }
            }

            if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
              getParsingFlags(config)._overflowWeeks = true;
            } else if (weekdayOverflow != null) {
              getParsingFlags(config)._overflowWeekday = true;
            } else {
              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
              config._a[YEAR] = temp.year;
              config._dayOfYear = temp.dayOfYear;
            }
          } // constant that refers to the ISO standard


          hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form


          hooks.RFC_2822 = function () {}; // date from string and format string


          function configFromStringAndFormat(config) {
            // TODO: Move this to another part of the creation flow to prevent circular deps
            if (config._f === hooks.ISO_8601) {
              configFromISO(config);
              return;
            }

            if (config._f === hooks.RFC_2822) {
              configFromRFC2822(config);
              return;
            }

            config._a = [];
            getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`

            var string = '' + config._i,
                i,
                parsedInput,
                tokens,
                token,
                skipped,
                stringLength = string.length,
                totalParsedInputLength = 0,
                era;
            tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

            for (i = 0; i < tokens.length; i++) {
              token = tokens[i];
              parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];

              if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));

                if (skipped.length > 0) {
                  getParsingFlags(config).unusedInput.push(skipped);
                }

                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
              } // don't parse if it's not a known token


              if (formatTokenFunctions[token]) {
                if (parsedInput) {
                  getParsingFlags(config).empty = false;
                } else {
                  getParsingFlags(config).unusedTokens.push(token);
                }

                addTimeToArrayFromToken(token, parsedInput, config);
              } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
              }
            } // add remaining unparsed input length to the string


            getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;

            if (string.length > 0) {
              getParsingFlags(config).unusedInput.push(string);
            } // clear _12h flag if hour is <= 12


            if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
              getParsingFlags(config).bigHour = undefined;
            }

            getParsingFlags(config).parsedDateParts = config._a.slice(0);
            getParsingFlags(config).meridiem = config._meridiem; // handle meridiem

            config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem); // handle era

            era = getParsingFlags(config).era;

            if (era !== null) {
              config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
            }

            configFromArray(config);
            checkOverflow(config);
          }

          function meridiemFixWrap(locale, hour, meridiem) {
            var isPm;

            if (meridiem == null) {
              // nothing to do
              return hour;
            }

            if (locale.meridiemHour != null) {
              return locale.meridiemHour(hour, meridiem);
            } else if (locale.isPM != null) {
              // Fallback
              isPm = locale.isPM(meridiem);

              if (isPm && hour < 12) {
                hour += 12;
              }

              if (!isPm && hour === 12) {
                hour = 0;
              }

              return hour;
            } else {
              // this is not supposed to happen
              return hour;
            }
          } // date from string and array of format strings


          function configFromStringAndArray(config) {
            var tempConfig,
                bestMoment,
                scoreToBeat,
                i,
                currentScore,
                validFormatFound,
                bestFormatIsValid = false;

            if (config._f.length === 0) {
              getParsingFlags(config).invalidFormat = true;
              config._d = new Date(NaN);
              return;
            }

            for (i = 0; i < config._f.length; i++) {
              currentScore = 0;
              validFormatFound = false;
              tempConfig = copyConfig({}, config);

              if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
              }

              tempConfig._f = config._f[i];
              configFromStringAndFormat(tempConfig);

              if (isValid(tempConfig)) {
                validFormatFound = true;
              } // if there is any input that was not parsed add a penalty for that format


              currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens

              currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
              getParsingFlags(tempConfig).score = currentScore;

              if (!bestFormatIsValid) {
                if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
                  scoreToBeat = currentScore;
                  bestMoment = tempConfig;

                  if (validFormatFound) {
                    bestFormatIsValid = true;
                  }
                }
              } else {
                if (currentScore < scoreToBeat) {
                  scoreToBeat = currentScore;
                  bestMoment = tempConfig;
                }
              }
            }

            extend(config, bestMoment || tempConfig);
          }

          function configFromObject(config) {
            if (config._d) {
              return;
            }

            var i = normalizeObjectUnits(config._i),
                dayOrDate = i.day === undefined ? i.date : i.day;
            config._a = map([i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond], function (obj) {
              return obj && parseInt(obj, 10);
            });
            configFromArray(config);
          }

          function createFromConfig(config) {
            var res = new Moment(checkOverflow(prepareConfig(config)));

            if (res._nextDay) {
              // Adding is smart enough around DST
              res.add(1, 'd');
              res._nextDay = undefined;
            }

            return res;
          }

          function prepareConfig(config) {
            var input = config._i,
                format = config._f;
            config._locale = config._locale || getLocale(config._l);

            if (input === null || format === undefined && input === '') {
              return createInvalid({
                nullInput: true
              });
            }

            if (typeof input === 'string') {
              config._i = input = config._locale.preparse(input);
            }

            if (isMoment(input)) {
              return new Moment(checkOverflow(input));
            } else if (isDate(input)) {
              config._d = input;
            } else if (isArray(format)) {
              configFromStringAndArray(config);
            } else if (format) {
              configFromStringAndFormat(config);
            } else {
              configFromInput(config);
            }

            if (!isValid(config)) {
              config._d = null;
            }

            return config;
          }

          function configFromInput(config) {
            var input = config._i;

            if (isUndefined(input)) {
              config._d = new Date(hooks.now());
            } else if (isDate(input)) {
              config._d = new Date(input.valueOf());
            } else if (typeof input === 'string') {
              configFromString(config);
            } else if (isArray(input)) {
              config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
              });
              configFromArray(config);
            } else if (isObject(input)) {
              configFromObject(config);
            } else if (isNumber(input)) {
              // from milliseconds
              config._d = new Date(input);
            } else {
              hooks.createFromInputFallback(config);
            }
          }

          function createLocalOrUTC(input, format, locale, strict, isUTC) {
            var c = {};

            if (format === true || format === false) {
              strict = format;
              format = undefined;
            }

            if (locale === true || locale === false) {
              strict = locale;
              locale = undefined;
            }

            if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
              input = undefined;
            } // object construction must be done this way.
            // https://github.com/moment/moment/issues/1423


            c._isAMomentObject = true;
            c._useUTC = c._isUTC = isUTC;
            c._l = locale;
            c._i = input;
            c._f = format;
            c._strict = strict;
            return createFromConfig(c);
          }

          function createLocal(input, format, locale, strict) {
            return createLocalOrUTC(input, format, locale, strict, false);
          }

          var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
            var other = createLocal.apply(null, arguments);

            if (this.isValid() && other.isValid()) {
              return other < this ? this : other;
            } else {
              return createInvalid();
            }
          }),
              prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
            var other = createLocal.apply(null, arguments);

            if (this.isValid() && other.isValid()) {
              return other > this ? this : other;
            } else {
              return createInvalid();
            }
          }); // Pick a moment m from moments so that m[fn](other) is true for all
          // other. This relies on the function fn to be transitive.
          //
          // moments should either be an array of moment objects or an array, whose
          // first element is an array of moment objects.

          function pickBy(fn, moments) {
            var res, i;

            if (moments.length === 1 && isArray(moments[0])) {
              moments = moments[0];
            }

            if (!moments.length) {
              return createLocal();
            }

            res = moments[0];

            for (i = 1; i < moments.length; ++i) {
              if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
              }
            }

            return res;
          } // TODO: Use [].sort instead?


          function min() {
            var args = [].slice.call(arguments, 0);
            return pickBy('isBefore', args);
          }

          function max() {
            var args = [].slice.call(arguments, 0);
            return pickBy('isAfter', args);
          }

          var now = function now() {
            return Date.now ? Date.now() : +new Date();
          };

          var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

          function isDurationValid(m) {
            var key,
                unitHasDecimal = false,
                i;

            for (key in m) {
              if (hasOwnProp(m, key) && !(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
              }
            }

            for (i = 0; i < ordering.length; ++i) {
              if (m[ordering[i]]) {
                if (unitHasDecimal) {
                  return false; // only allow non-integers for smallest unit
                }

                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                  unitHasDecimal = true;
                }
              }
            }

            return true;
          }

          function isValid$1() {
            return this._isValid;
          }

          function createInvalid$1() {
            return createDuration(NaN);
          }

          function Duration(duration) {
            var normalizedInput = normalizeObjectUnits(duration),
                years = normalizedInput.year || 0,
                quarters = normalizedInput.quarter || 0,
                months = normalizedInput.month || 0,
                weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
                days = normalizedInput.day || 0,
                hours = normalizedInput.hour || 0,
                minutes = normalizedInput.minute || 0,
                seconds = normalizedInput.second || 0,
                milliseconds = normalizedInput.millisecond || 0;
            this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove

            this._milliseconds = +milliseconds + seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
            // Because of dateAddRemove treats 24 hours as different from a
            // day when working around DST, we need to store them separately

            this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing
            // which months you are are talking about, so we have to store
            // it separately.

            this._months = +months + quarters * 3 + years * 12;
            this._data = {};
            this._locale = getLocale();

            this._bubble();
          }

          function isDuration(obj) {
            return obj instanceof Duration;
          }

          function absRound(number) {
            if (number < 0) {
              return Math.round(-1 * number) * -1;
            } else {
              return Math.round(number);
            }
          } // compare two arrays, return the number of differences


          function compareArrays(array1, array2, dontConvert) {
            var len = Math.min(array1.length, array2.length),
                lengthDiff = Math.abs(array1.length - array2.length),
                diffs = 0,
                i;

            for (i = 0; i < len; i++) {
              if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
                diffs++;
              }
            }

            return diffs + lengthDiff;
          } // FORMATTING


          function offset(token, separator) {
            addFormatToken(token, 0, 0, function () {
              var offset = this.utcOffset(),
                  sign = '+';

              if (offset < 0) {
                offset = -offset;
                sign = '-';
              }

              return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);
            });
          }

          offset('Z', ':');
          offset('ZZ', ''); // PARSING

          addRegexToken('Z', matchShortOffset);
          addRegexToken('ZZ', matchShortOffset);
          addParseToken(['Z', 'ZZ'], function (input, array, config) {
            config._useUTC = true;
            config._tzm = offsetFromString(matchShortOffset, input);
          }); // HELPERS
          // timezone chunker
          // '+10:00' > ['10',  '00']
          // '-1530'  > ['-15', '30']

          var chunkOffset = /([\+\-]|\d\d)/gi;

          function offsetFromString(matcher, string) {
            var matches = (string || '').match(matcher),
                chunk,
                parts,
                minutes;

            if (matches === null) {
              return null;
            }

            chunk = matches[matches.length - 1] || [];
            parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
            minutes = +(parts[1] * 60) + toInt(parts[2]);
            return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
          } // Return a moment from input, that is local/utc/zone equivalent to model.


          function cloneWithOffset(input, model) {
            var res, diff;

            if (model._isUTC) {
              res = model.clone();
              diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.

              res._d.setTime(res._d.valueOf() + diff);

              hooks.updateOffset(res, false);
              return res;
            } else {
              return createLocal(input).local();
            }
          }

          function getDateOffset(m) {
            // On Firefox.24 Date#getTimezoneOffset returns a floating point.
            // https://github.com/moment/moment/pull/1871
            return -Math.round(m._d.getTimezoneOffset());
          } // HOOKS
          // This function will be called whenever a moment is mutated.
          // It is intended to keep the offset in sync with the timezone.


          hooks.updateOffset = function () {}; // MOMENTS
          // keepLocalTime = true means only change the timezone, without
          // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
          // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
          // +0200, so we adjust the time as needed, to be valid.
          //
          // Keeping the time actually adds/subtracts (one hour)
          // from the actual represented time. That is why we call updateOffset
          // a second time. In case it wants us to change the offset again
          // _changeInProgress == true case, then we have to adjust, because
          // there is no such time in the given timezone.


          function getSetOffset(input, keepLocalTime, keepMinutes) {
            var offset = this._offset || 0,
                localAdjust;

            if (!this.isValid()) {
              return input != null ? this : NaN;
            }

            if (input != null) {
              if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);

                if (input === null) {
                  return this;
                }
              } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
              }

              if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
              }

              this._offset = input;
              this._isUTC = true;

              if (localAdjust != null) {
                this.add(localAdjust, 'm');
              }

              if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                  addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                  this._changeInProgress = true;
                  hooks.updateOffset(this, true);
                  this._changeInProgress = null;
                }
              }

              return this;
            } else {
              return this._isUTC ? offset : getDateOffset(this);
            }
          }

          function getSetZone(input, keepLocalTime) {
            if (input != null) {
              if (typeof input !== 'string') {
                input = -input;
              }

              this.utcOffset(input, keepLocalTime);
              return this;
            } else {
              return -this.utcOffset();
            }
          }

          function setOffsetToUTC(keepLocalTime) {
            return this.utcOffset(0, keepLocalTime);
          }

          function setOffsetToLocal(keepLocalTime) {
            if (this._isUTC) {
              this.utcOffset(0, keepLocalTime);
              this._isUTC = false;

              if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
              }
            }

            return this;
          }

          function setOffsetToParsedOffset() {
            if (this._tzm != null) {
              this.utcOffset(this._tzm, false, true);
            } else if (typeof this._i === 'string') {
              var tZone = offsetFromString(matchOffset, this._i);

              if (tZone != null) {
                this.utcOffset(tZone);
              } else {
                this.utcOffset(0, true);
              }
            }

            return this;
          }

          function hasAlignedHourOffset(input) {
            if (!this.isValid()) {
              return false;
            }

            input = input ? createLocal(input).utcOffset() : 0;
            return (this.utcOffset() - input) % 60 === 0;
          }

          function isDaylightSavingTime() {
            return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
          }

          function isDaylightSavingTimeShifted() {
            if (!isUndefined(this._isDSTShifted)) {
              return this._isDSTShifted;
            }

            var c = {},
                other;
            copyConfig(c, this);
            c = prepareConfig(c);

            if (c._a) {
              other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
              this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
            } else {
              this._isDSTShifted = false;
            }

            return this._isDSTShifted;
          }

          function isLocal() {
            return this.isValid() ? !this._isUTC : false;
          }

          function isUtcOffset() {
            return this.isValid() ? this._isUTC : false;
          }

          function isUtc() {
            return this.isValid() ? this._isUTC && this._offset === 0 : false;
          } // ASP.NET json date format regex


          var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
              // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
          // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
          // and further modified to allow for strings containing both week and day
          isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

          function createDuration(input, key) {
            var duration = input,
                // matching against regexp is expensive, do it on demand
            match = null,
                sign,
                ret,
                diffRes;

            if (isDuration(input)) {
              duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months
              };
            } else if (isNumber(input) || !isNaN(+input)) {
              duration = {};

              if (key) {
                duration[key] = +input;
              } else {
                duration.milliseconds = +input;
              }
            } else if (match = aspNetRegex.exec(input)) {
              sign = match[1] === '-' ? -1 : 1;
              duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match

              };
            } else if (match = isoRegex.exec(input)) {
              sign = match[1] === '-' ? -1 : 1;
              duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign)
              };
            } else if (duration == null) {
              // checks for null or undefined
              duration = {};
            } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
              diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
              duration = {};
              duration.ms = diffRes.milliseconds;
              duration.M = diffRes.months;
            }

            ret = new Duration(duration);

            if (isDuration(input) && hasOwnProp(input, '_locale')) {
              ret._locale = input._locale;
            }

            if (isDuration(input) && hasOwnProp(input, '_isValid')) {
              ret._isValid = input._isValid;
            }

            return ret;
          }

          createDuration.fn = Duration.prototype;
          createDuration.invalid = createInvalid$1;

          function parseIso(inp, sign) {
            // We'd normally use ~~inp for this, but unfortunately it also
            // converts floats to ints.
            // inp may be undefined, so careful calling replace on it.
            var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it

            return (isNaN(res) ? 0 : res) * sign;
          }

          function positiveMomentsDifference(base, other) {
            var res = {};
            res.months = other.month() - base.month() + (other.year() - base.year()) * 12;

            if (base.clone().add(res.months, 'M').isAfter(other)) {
              --res.months;
            }

            res.milliseconds = +other - +base.clone().add(res.months, 'M');
            return res;
          }

          function momentsDifference(base, other) {
            var res;

            if (!(base.isValid() && other.isValid())) {
              return {
                milliseconds: 0,
                months: 0
              };
            }

            other = cloneWithOffset(other, base);

            if (base.isBefore(other)) {
              res = positiveMomentsDifference(base, other);
            } else {
              res = positiveMomentsDifference(other, base);
              res.milliseconds = -res.milliseconds;
              res.months = -res.months;
            }

            return res;
          } // TODO: remove 'name' arg after deprecation is removed


          function createAdder(direction, name) {
            return function (val, period) {
              var dur, tmp; //invert the arguments, but complain about it

              if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val;
                val = period;
                period = tmp;
              }

              dur = createDuration(val, period);
              addSubtract(this, dur, direction);
              return this;
            };
          }

          function addSubtract(mom, duration, isAdding, updateOffset) {
            var milliseconds = duration._milliseconds,
                days = absRound(duration._days),
                months = absRound(duration._months);

            if (!mom.isValid()) {
              // No op
              return;
            }

            updateOffset = updateOffset == null ? true : updateOffset;

            if (months) {
              setMonth(mom, get(mom, 'Month') + months * isAdding);
            }

            if (days) {
              set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
            }

            if (milliseconds) {
              mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
            }

            if (updateOffset) {
              hooks.updateOffset(mom, days || months);
            }
          }

          var add = createAdder(1, 'add'),
              subtract = createAdder(-1, 'subtract');

          function isString(input) {
            return typeof input === 'string' || input instanceof String;
          } // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined


          function isMomentInput(input) {
            return isMoment(input) || isDate(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;
          }

          function isMomentInputObject(input) {
            var objectTest = isObject(input) && !isObjectEmpty(input),
                propertyTest = false,
                properties = ['years', 'year', 'y', 'months', 'month', 'M', 'days', 'day', 'd', 'dates', 'date', 'D', 'hours', 'hour', 'h', 'minutes', 'minute', 'm', 'seconds', 'second', 's', 'milliseconds', 'millisecond', 'ms'],
                i,
                property;

            for (i = 0; i < properties.length; i += 1) {
              property = properties[i];
              propertyTest = propertyTest || hasOwnProp(input, property);
            }

            return objectTest && propertyTest;
          }

          function isNumberOrStringArray(input) {
            var arrayTest = isArray(input),
                dataTypeTest = false;

            if (arrayTest) {
              dataTypeTest = input.filter(function (item) {
                return !isNumber(item) && isString(input);
              }).length === 0;
            }

            return arrayTest && dataTypeTest;
          }

          function isCalendarSpec(input) {
            var objectTest = isObject(input) && !isObjectEmpty(input),
                propertyTest = false,
                properties = ['sameDay', 'nextDay', 'lastDay', 'nextWeek', 'lastWeek', 'sameElse'],
                i,
                property;

            for (i = 0; i < properties.length; i += 1) {
              property = properties[i];
              propertyTest = propertyTest || hasOwnProp(input, property);
            }

            return objectTest && propertyTest;
          }

          function getCalendarFormat(myMoment, now) {
            var diff = myMoment.diff(now, 'days', true);
            return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
          }

          function calendar$1(time, formats) {
            // Support for single parameter, formats only overload to the calendar function
            if (arguments.length === 1) {
              if (!arguments[0]) {
                time = undefined;
                formats = undefined;
              } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
              } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
              }
            } // We want to compare the start of today, vs this.
            // Getting start-of-today depends on whether we're local/utc/offset or not.


            var now = time || createLocal(),
                sod = cloneWithOffset(now, this).startOf('day'),
                format = hooks.calendarFormat(this, sod) || 'sameElse',
                output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
            return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
          }

          function clone() {
            return new Moment(this);
          }

          function isAfter(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);

            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }

            units = normalizeUnits(units) || 'millisecond';

            if (units === 'millisecond') {
              return this.valueOf() > localInput.valueOf();
            } else {
              return localInput.valueOf() < this.clone().startOf(units).valueOf();
            }
          }

          function isBefore(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input);

            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }

            units = normalizeUnits(units) || 'millisecond';

            if (units === 'millisecond') {
              return this.valueOf() < localInput.valueOf();
            } else {
              return this.clone().endOf(units).valueOf() < localInput.valueOf();
            }
          }

          function isBetween(from, to, units, inclusivity) {
            var localFrom = isMoment(from) ? from : createLocal(from),
                localTo = isMoment(to) ? to : createLocal(to);

            if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
              return false;
            }

            inclusivity = inclusivity || '()';
            return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
          }

          function isSame(input, units) {
            var localInput = isMoment(input) ? input : createLocal(input),
                inputMs;

            if (!(this.isValid() && localInput.isValid())) {
              return false;
            }

            units = normalizeUnits(units) || 'millisecond';

            if (units === 'millisecond') {
              return this.valueOf() === localInput.valueOf();
            } else {
              inputMs = localInput.valueOf();
              return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
            }
          }

          function isSameOrAfter(input, units) {
            return this.isSame(input, units) || this.isAfter(input, units);
          }

          function isSameOrBefore(input, units) {
            return this.isSame(input, units) || this.isBefore(input, units);
          }

          function diff(input, units, asFloat) {
            var that, zoneDelta, output;

            if (!this.isValid()) {
              return NaN;
            }

            that = cloneWithOffset(input, this);

            if (!that.isValid()) {
              return NaN;
            }

            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
            units = normalizeUnits(units);

            switch (units) {
              case 'year':
                output = monthDiff(this, that) / 12;
                break;

              case 'month':
                output = monthDiff(this, that);
                break;

              case 'quarter':
                output = monthDiff(this, that) / 3;
                break;

              case 'second':
                output = (this - that) / 1e3;
                break;
              // 1000

              case 'minute':
                output = (this - that) / 6e4;
                break;
              // 1000 * 60

              case 'hour':
                output = (this - that) / 36e5;
                break;
              // 1000 * 60 * 60

              case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break;
              // 1000 * 60 * 60 * 24, negate dst

              case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break;
              // 1000 * 60 * 60 * 24 * 7, negate dst

              default:
                output = this - that;
            }

            return asFloat ? output : absFloor(output);
          }

          function monthDiff(a, b) {
            if (a.date() < b.date()) {
              // end-of-month calculations work correct when the start month has more
              // days than the end month.
              return -monthDiff(b, a);
            } // difference in months


            var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
                // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
                anchor2,
                adjust;

            if (b - anchor < 0) {
              anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month

              adjust = (b - anchor) / (anchor - anchor2);
            } else {
              anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month

              adjust = (b - anchor) / (anchor2 - anchor);
            } //check for negative zero, return zero if negative zero


            return -(wholeMonthDiff + adjust) || 0;
          }

          hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
          hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

          function toString() {
            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
          }

          function toISOString(keepOffset) {
            if (!this.isValid()) {
              return null;
            }

            var utc = keepOffset !== true,
                m = utc ? this.clone().utc() : this;

            if (m.year() < 0 || m.year() > 9999) {
              return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
            }

            if (isFunction(Date.prototype.toISOString)) {
              // native implementation is ~50x faster, use it when we can
              if (utc) {
                return this.toDate().toISOString();
              } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
              }
            }

            return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
          }
          /**
           * Return a human readable representation of a moment that can
           * also be evaluated to get a new moment which is the same
           *
           * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
           */


          function inspect() {
            if (!this.isValid()) {
              return 'moment.invalid(/* ' + this._i + ' */)';
            }

            var func = 'moment',
                zone = '',
                prefix,
                year,
                datetime,
                suffix;

            if (!this.isLocal()) {
              func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
              zone = 'Z';
            }

            prefix = '[' + func + '("]';
            year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
            datetime = '-MM-DD[T]HH:mm:ss.SSS';
            suffix = zone + '[")]';
            return this.format(prefix + year + datetime + suffix);
          }

          function format(inputString) {
            if (!inputString) {
              inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
            }

            var output = formatMoment(this, inputString);
            return this.localeData().postformat(output);
          }

          function from(time, withoutSuffix) {
            if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
              return createDuration({
                to: this,
                from: time
              }).locale(this.locale()).humanize(!withoutSuffix);
            } else {
              return this.localeData().invalidDate();
            }
          }

          function fromNow(withoutSuffix) {
            return this.from(createLocal(), withoutSuffix);
          }

          function to(time, withoutSuffix) {
            if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
              return createDuration({
                from: this,
                to: time
              }).locale(this.locale()).humanize(!withoutSuffix);
            } else {
              return this.localeData().invalidDate();
            }
          }

          function toNow(withoutSuffix) {
            return this.to(createLocal(), withoutSuffix);
          } // If passed a locale key, it will set the locale for this
          // instance.  Otherwise, it will return the locale configuration
          // variables for this instance.


          function locale(key) {
            var newLocaleData;

            if (key === undefined) {
              return this._locale._abbr;
            } else {
              newLocaleData = getLocale(key);

              if (newLocaleData != null) {
                this._locale = newLocaleData;
              }

              return this;
            }
          }

          var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
            if (key === undefined) {
              return this.localeData();
            } else {
              return this.locale(key);
            }
          });

          function localeData() {
            return this._locale;
          }

          var MS_PER_SECOND = 1000,
              MS_PER_MINUTE = 60 * MS_PER_SECOND,
              MS_PER_HOUR = 60 * MS_PER_MINUTE,
              MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):

          function mod$1(dividend, divisor) {
            return (dividend % divisor + divisor) % divisor;
          }

          function localStartOfDate(y, m, d) {
            // the date constructor remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0) {
              // preserve leap years using a full 400 year cycle, then reset
              return new Date(y + 400, m, d) - MS_PER_400_YEARS;
            } else {
              return new Date(y, m, d).valueOf();
            }
          }

          function utcStartOfDate(y, m, d) {
            // Date.UTC remaps years 0-99 to 1900-1999
            if (y < 100 && y >= 0) {
              // preserve leap years using a full 400 year cycle, then reset
              return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
            } else {
              return Date.UTC(y, m, d);
            }
          }

          function startOf(units) {
            var time, startOfDate;
            units = normalizeUnits(units);

            if (units === undefined || units === 'millisecond' || !this.isValid()) {
              return this;
            }

            startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

            switch (units) {
              case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;

              case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;

              case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;

              case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;

              case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;

              case 'day':
              case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;

              case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;

              case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;

              case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
            }

            this._d.setTime(time);

            hooks.updateOffset(this, true);
            return this;
          }

          function endOf(units) {
            var time, startOfDate;
            units = normalizeUnits(units);

            if (units === undefined || units === 'millisecond' || !this.isValid()) {
              return this;
            }

            startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

            switch (units) {
              case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;

              case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;

              case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;

              case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;

              case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;

              case 'day':
              case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;

              case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;

              case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;

              case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
            }

            this._d.setTime(time);

            hooks.updateOffset(this, true);
            return this;
          }

          function valueOf() {
            return this._d.valueOf() - (this._offset || 0) * 60000;
          }

          function unix() {
            return Math.floor(this.valueOf() / 1000);
          }

          function toDate() {
            return new Date(this.valueOf());
          }

          function toArray() {
            var m = this;
            return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
          }

          function toObject() {
            var m = this;
            return {
              years: m.year(),
              months: m.month(),
              date: m.date(),
              hours: m.hours(),
              minutes: m.minutes(),
              seconds: m.seconds(),
              milliseconds: m.milliseconds()
            };
          }

          function toJSON() {
            // new Date(NaN).toJSON() === null
            return this.isValid() ? this.toISOString() : null;
          }

          function isValid$2() {
            return isValid(this);
          }

          function parsingFlags() {
            return extend({}, getParsingFlags(this));
          }

          function invalidAt() {
            return getParsingFlags(this).overflow;
          }

          function creationData() {
            return {
              input: this._i,
              format: this._f,
              locale: this._locale,
              isUTC: this._isUTC,
              strict: this._strict
            };
          }

          addFormatToken('N', 0, 0, 'eraAbbr');
          addFormatToken('NN', 0, 0, 'eraAbbr');
          addFormatToken('NNN', 0, 0, 'eraAbbr');
          addFormatToken('NNNN', 0, 0, 'eraName');
          addFormatToken('NNNNN', 0, 0, 'eraNarrow');
          addFormatToken('y', ['y', 1], 'yo', 'eraYear');
          addFormatToken('y', ['yy', 2], 0, 'eraYear');
          addFormatToken('y', ['yyy', 3], 0, 'eraYear');
          addFormatToken('y', ['yyyy', 4], 0, 'eraYear');
          addRegexToken('N', matchEraAbbr);
          addRegexToken('NN', matchEraAbbr);
          addRegexToken('NNN', matchEraAbbr);
          addRegexToken('NNNN', matchEraName);
          addRegexToken('NNNNN', matchEraNarrow);
          addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (input, array, config, token) {
            var era = config._locale.erasParse(input, token, config._strict);

            if (era) {
              getParsingFlags(config).era = era;
            } else {
              getParsingFlags(config).invalidEra = input;
            }
          });
          addRegexToken('y', matchUnsigned);
          addRegexToken('yy', matchUnsigned);
          addRegexToken('yyy', matchUnsigned);
          addRegexToken('yyyy', matchUnsigned);
          addRegexToken('yo', matchEraYearOrdinal);
          addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
          addParseToken(['yo'], function (input, array, config, token) {
            var match;

            if (config._locale._eraYearOrdinalRegex) {
              match = input.match(config._locale._eraYearOrdinalRegex);
            }

            if (config._locale.eraYearOrdinalParse) {
              array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
            } else {
              array[YEAR] = parseInt(input, 10);
            }
          });

          function localeEras(m, format) {
            var i,
                l,
                date,
                eras = this._eras || getLocale('en')._eras;

            for (i = 0, l = eras.length; i < l; ++i) {
              switch (typeof eras[i].since) {
                case 'string':
                  // truncate time
                  date = hooks(eras[i].since).startOf('day');
                  eras[i].since = date.valueOf();
                  break;
              }

              switch (typeof eras[i].until) {
                case 'undefined':
                  eras[i].until = +Infinity;
                  break;

                case 'string':
                  // truncate time
                  date = hooks(eras[i].until).startOf('day').valueOf();
                  eras[i].until = date.valueOf();
                  break;
              }
            }

            return eras;
          }

          function localeErasParse(eraName, format, strict) {
            var i,
                l,
                eras = this.eras(),
                name,
                abbr,
                narrow;
            eraName = eraName.toUpperCase();

            for (i = 0, l = eras.length; i < l; ++i) {
              name = eras[i].name.toUpperCase();
              abbr = eras[i].abbr.toUpperCase();
              narrow = eras[i].narrow.toUpperCase();

              if (strict) {
                switch (format) {
                  case 'N':
                  case 'NN':
                  case 'NNN':
                    if (abbr === eraName) {
                      return eras[i];
                    }

                    break;

                  case 'NNNN':
                    if (name === eraName) {
                      return eras[i];
                    }

                    break;

                  case 'NNNNN':
                    if (narrow === eraName) {
                      return eras[i];
                    }

                    break;
                }
              } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
              }
            }
          }

          function localeErasConvertYear(era, year) {
            var dir = era.since <= era.until ? +1 : -1;

            if (year === undefined) {
              return hooks(era.since).year();
            } else {
              return hooks(era.since).year() + (year - era.offset) * dir;
            }
          }

          function getEraName() {
            var i,
                l,
                val,
                eras = this.localeData().eras();

            for (i = 0, l = eras.length; i < l; ++i) {
              // truncate time
              val = this.clone().startOf('day').valueOf();

              if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
              }

              if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
              }
            }

            return '';
          }

          function getEraNarrow() {
            var i,
                l,
                val,
                eras = this.localeData().eras();

            for (i = 0, l = eras.length; i < l; ++i) {
              // truncate time
              val = this.clone().startOf('day').valueOf();

              if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
              }

              if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
              }
            }

            return '';
          }

          function getEraAbbr() {
            var i,
                l,
                val,
                eras = this.localeData().eras();

            for (i = 0, l = eras.length; i < l; ++i) {
              // truncate time
              val = this.clone().startOf('day').valueOf();

              if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
              }

              if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
              }
            }

            return '';
          }

          function getEraYear() {
            var i,
                l,
                dir,
                val,
                eras = this.localeData().eras();

            for (i = 0, l = eras.length; i < l; ++i) {
              dir = eras[i].since <= eras[i].until ? +1 : -1; // truncate time

              val = this.clone().startOf('day').valueOf();

              if (eras[i].since <= val && val <= eras[i].until || eras[i].until <= val && val <= eras[i].since) {
                return (this.year() - hooks(eras[i].since).year()) * dir + eras[i].offset;
              }
            }

            return this.year();
          }

          function erasNameRegex(isStrict) {
            if (!hasOwnProp(this, '_erasNameRegex')) {
              computeErasParse.call(this);
            }

            return isStrict ? this._erasNameRegex : this._erasRegex;
          }

          function erasAbbrRegex(isStrict) {
            if (!hasOwnProp(this, '_erasAbbrRegex')) {
              computeErasParse.call(this);
            }

            return isStrict ? this._erasAbbrRegex : this._erasRegex;
          }

          function erasNarrowRegex(isStrict) {
            if (!hasOwnProp(this, '_erasNarrowRegex')) {
              computeErasParse.call(this);
            }

            return isStrict ? this._erasNarrowRegex : this._erasRegex;
          }

          function matchEraAbbr(isStrict, locale) {
            return locale.erasAbbrRegex(isStrict);
          }

          function matchEraName(isStrict, locale) {
            return locale.erasNameRegex(isStrict);
          }

          function matchEraNarrow(isStrict, locale) {
            return locale.erasNarrowRegex(isStrict);
          }

          function matchEraYearOrdinal(isStrict, locale) {
            return locale._eraYearOrdinalRegex || matchUnsigned;
          }

          function computeErasParse() {
            var abbrPieces = [],
                namePieces = [],
                narrowPieces = [],
                mixedPieces = [],
                i,
                l,
                eras = this.eras();

            for (i = 0, l = eras.length; i < l; ++i) {
              namePieces.push(regexEscape(eras[i].name));
              abbrPieces.push(regexEscape(eras[i].abbr));
              narrowPieces.push(regexEscape(eras[i].narrow));
              mixedPieces.push(regexEscape(eras[i].name));
              mixedPieces.push(regexEscape(eras[i].abbr));
              mixedPieces.push(regexEscape(eras[i].narrow));
            }

            this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
            this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
            this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
            this._erasNarrowRegex = new RegExp('^(' + narrowPieces.join('|') + ')', 'i');
          } // FORMATTING


          addFormatToken(0, ['gg', 2], 0, function () {
            return this.weekYear() % 100;
          });
          addFormatToken(0, ['GG', 2], 0, function () {
            return this.isoWeekYear() % 100;
          });

          function addWeekYearFormatToken(token, getter) {
            addFormatToken(0, [token, token.length], 0, getter);
          }

          addWeekYearFormatToken('gggg', 'weekYear');
          addWeekYearFormatToken('ggggg', 'weekYear');
          addWeekYearFormatToken('GGGG', 'isoWeekYear');
          addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES

          addUnitAlias('weekYear', 'gg');
          addUnitAlias('isoWeekYear', 'GG'); // PRIORITY

          addUnitPriority('weekYear', 1);
          addUnitPriority('isoWeekYear', 1); // PARSING

          addRegexToken('G', matchSigned);
          addRegexToken('g', matchSigned);
          addRegexToken('GG', match1to2, match2);
          addRegexToken('gg', match1to2, match2);
          addRegexToken('GGGG', match1to4, match4);
          addRegexToken('gggg', match1to4, match4);
          addRegexToken('GGGGG', match1to6, match6);
          addRegexToken('ggggg', match1to6, match6);
          addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
            week[token.substr(0, 2)] = toInt(input);
          });
          addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
            week[token] = hooks.parseTwoDigitYear(input);
          }); // MOMENTS

          function getSetWeekYear(input) {
            return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
          }

          function getSetISOWeekYear(input) {
            return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
          }

          function getISOWeeksInYear() {
            return weeksInYear(this.year(), 1, 4);
          }

          function getISOWeeksInISOWeekYear() {
            return weeksInYear(this.isoWeekYear(), 1, 4);
          }

          function getWeeksInYear() {
            var weekInfo = this.localeData()._week;

            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
          }

          function getWeeksInWeekYear() {
            var weekInfo = this.localeData()._week;

            return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
          }

          function getSetWeekYearHelper(input, week, weekday, dow, doy) {
            var weeksTarget;

            if (input == null) {
              return weekOfYear(this, dow, doy).year;
            } else {
              weeksTarget = weeksInYear(input, dow, doy);

              if (week > weeksTarget) {
                week = weeksTarget;
              }

              return setWeekAll.call(this, input, week, weekday, dow, doy);
            }
          }

          function setWeekAll(weekYear, week, weekday, dow, doy) {
            var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
                date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
            this.year(date.getUTCFullYear());
            this.month(date.getUTCMonth());
            this.date(date.getUTCDate());
            return this;
          } // FORMATTING


          addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES

          addUnitAlias('quarter', 'Q'); // PRIORITY

          addUnitPriority('quarter', 7); // PARSING

          addRegexToken('Q', match1);
          addParseToken('Q', function (input, array) {
            array[MONTH] = (toInt(input) - 1) * 3;
          }); // MOMENTS

          function getSetQuarter(input) {
            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
          } // FORMATTING


          addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES

          addUnitAlias('date', 'D'); // PRIORITY

          addUnitPriority('date', 9); // PARSING

          addRegexToken('D', match1to2);
          addRegexToken('DD', match1to2, match2);
          addRegexToken('Do', function (isStrict, locale) {
            // TODO: Remove "ordinalParse" fallback in next major release.
            return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;
          });
          addParseToken(['D', 'DD'], DATE);
          addParseToken('Do', function (input, array) {
            array[DATE] = toInt(input.match(match1to2)[0]);
          }); // MOMENTS

          var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING

          addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES

          addUnitAlias('dayOfYear', 'DDD'); // PRIORITY

          addUnitPriority('dayOfYear', 4); // PARSING

          addRegexToken('DDD', match1to3);
          addRegexToken('DDDD', match3);
          addParseToken(['DDD', 'DDDD'], function (input, array, config) {
            config._dayOfYear = toInt(input);
          }); // HELPERS
          // MOMENTS

          function getSetDayOfYear(input) {
            var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
            return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
          } // FORMATTING


          addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES

          addUnitAlias('minute', 'm'); // PRIORITY

          addUnitPriority('minute', 14); // PARSING

          addRegexToken('m', match1to2);
          addRegexToken('mm', match1to2, match2);
          addParseToken(['m', 'mm'], MINUTE); // MOMENTS

          var getSetMinute = makeGetSet('Minutes', false); // FORMATTING

          addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES

          addUnitAlias('second', 's'); // PRIORITY

          addUnitPriority('second', 15); // PARSING

          addRegexToken('s', match1to2);
          addRegexToken('ss', match1to2, match2);
          addParseToken(['s', 'ss'], SECOND); // MOMENTS

          var getSetSecond = makeGetSet('Seconds', false); // FORMATTING

          addFormatToken('S', 0, 0, function () {
            return ~~(this.millisecond() / 100);
          });
          addFormatToken(0, ['SS', 2], 0, function () {
            return ~~(this.millisecond() / 10);
          });
          addFormatToken(0, ['SSS', 3], 0, 'millisecond');
          addFormatToken(0, ['SSSS', 4], 0, function () {
            return this.millisecond() * 10;
          });
          addFormatToken(0, ['SSSSS', 5], 0, function () {
            return this.millisecond() * 100;
          });
          addFormatToken(0, ['SSSSSS', 6], 0, function () {
            return this.millisecond() * 1000;
          });
          addFormatToken(0, ['SSSSSSS', 7], 0, function () {
            return this.millisecond() * 10000;
          });
          addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
            return this.millisecond() * 100000;
          });
          addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
            return this.millisecond() * 1000000;
          }); // ALIASES

          addUnitAlias('millisecond', 'ms'); // PRIORITY

          addUnitPriority('millisecond', 16); // PARSING

          addRegexToken('S', match1to3, match1);
          addRegexToken('SS', match1to3, match2);
          addRegexToken('SSS', match1to3, match3);
          var token, getSetMillisecond;

          for (token = 'SSSS'; token.length <= 9; token += 'S') {
            addRegexToken(token, matchUnsigned);
          }

          function parseMs(input, array) {
            array[MILLISECOND] = toInt(('0.' + input) * 1000);
          }

          for (token = 'S'; token.length <= 9; token += 'S') {
            addParseToken(token, parseMs);
          }

          getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING

          addFormatToken('z', 0, 0, 'zoneAbbr');
          addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS

          function getZoneAbbr() {
            return this._isUTC ? 'UTC' : '';
          }

          function getZoneName() {
            return this._isUTC ? 'Coordinated Universal Time' : '';
          }

          var proto = Moment.prototype;
          proto.add = add;
          proto.calendar = calendar$1;
          proto.clone = clone;
          proto.diff = diff;
          proto.endOf = endOf;
          proto.format = format;
          proto.from = from;
          proto.fromNow = fromNow;
          proto.to = to;
          proto.toNow = toNow;
          proto.get = stringGet;
          proto.invalidAt = invalidAt;
          proto.isAfter = isAfter;
          proto.isBefore = isBefore;
          proto.isBetween = isBetween;
          proto.isSame = isSame;
          proto.isSameOrAfter = isSameOrAfter;
          proto.isSameOrBefore = isSameOrBefore;
          proto.isValid = isValid$2;
          proto.lang = lang;
          proto.locale = locale;
          proto.localeData = localeData;
          proto.max = prototypeMax;
          proto.min = prototypeMin;
          proto.parsingFlags = parsingFlags;
          proto.set = stringSet;
          proto.startOf = startOf;
          proto.subtract = subtract;
          proto.toArray = toArray;
          proto.toObject = toObject;
          proto.toDate = toDate;
          proto.toISOString = toISOString;
          proto.inspect = inspect;

          if (typeof Symbol !== 'undefined' && Symbol["for"] != null) {
            proto[Symbol["for"]('nodejs.util.inspect.custom')] = function () {
              return 'Moment<' + this.format() + '>';
            };
          }

          proto.toJSON = toJSON;
          proto.toString = toString;
          proto.unix = unix;
          proto.valueOf = valueOf;
          proto.creationData = creationData;
          proto.eraName = getEraName;
          proto.eraNarrow = getEraNarrow;
          proto.eraAbbr = getEraAbbr;
          proto.eraYear = getEraYear;
          proto.year = getSetYear;
          proto.isLeapYear = getIsLeapYear;
          proto.weekYear = getSetWeekYear;
          proto.isoWeekYear = getSetISOWeekYear;
          proto.quarter = proto.quarters = getSetQuarter;
          proto.month = getSetMonth;
          proto.daysInMonth = getDaysInMonth;
          proto.week = proto.weeks = getSetWeek;
          proto.isoWeek = proto.isoWeeks = getSetISOWeek;
          proto.weeksInYear = getWeeksInYear;
          proto.weeksInWeekYear = getWeeksInWeekYear;
          proto.isoWeeksInYear = getISOWeeksInYear;
          proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
          proto.date = getSetDayOfMonth;
          proto.day = proto.days = getSetDayOfWeek;
          proto.weekday = getSetLocaleDayOfWeek;
          proto.isoWeekday = getSetISODayOfWeek;
          proto.dayOfYear = getSetDayOfYear;
          proto.hour = proto.hours = getSetHour;
          proto.minute = proto.minutes = getSetMinute;
          proto.second = proto.seconds = getSetSecond;
          proto.millisecond = proto.milliseconds = getSetMillisecond;
          proto.utcOffset = getSetOffset;
          proto.utc = setOffsetToUTC;
          proto.local = setOffsetToLocal;
          proto.parseZone = setOffsetToParsedOffset;
          proto.hasAlignedHourOffset = hasAlignedHourOffset;
          proto.isDST = isDaylightSavingTime;
          proto.isLocal = isLocal;
          proto.isUtcOffset = isUtcOffset;
          proto.isUtc = isUtc;
          proto.isUTC = isUtc;
          proto.zoneAbbr = getZoneAbbr;
          proto.zoneName = getZoneName;
          proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
          proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
          proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
          proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
          proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

          function createUnix(input) {
            return createLocal(input * 1000);
          }

          function createInZone() {
            return createLocal.apply(null, arguments).parseZone();
          }

          function preParsePostFormat(string) {
            return string;
          }

          var proto$1 = Locale.prototype;
          proto$1.calendar = calendar;
          proto$1.longDateFormat = longDateFormat;
          proto$1.invalidDate = invalidDate;
          proto$1.ordinal = ordinal;
          proto$1.preparse = preParsePostFormat;
          proto$1.postformat = preParsePostFormat;
          proto$1.relativeTime = relativeTime;
          proto$1.pastFuture = pastFuture;
          proto$1.set = set;
          proto$1.eras = localeEras;
          proto$1.erasParse = localeErasParse;
          proto$1.erasConvertYear = localeErasConvertYear;
          proto$1.erasAbbrRegex = erasAbbrRegex;
          proto$1.erasNameRegex = erasNameRegex;
          proto$1.erasNarrowRegex = erasNarrowRegex;
          proto$1.months = localeMonths;
          proto$1.monthsShort = localeMonthsShort;
          proto$1.monthsParse = localeMonthsParse;
          proto$1.monthsRegex = monthsRegex;
          proto$1.monthsShortRegex = monthsShortRegex;
          proto$1.week = localeWeek;
          proto$1.firstDayOfYear = localeFirstDayOfYear;
          proto$1.firstDayOfWeek = localeFirstDayOfWeek;
          proto$1.weekdays = localeWeekdays;
          proto$1.weekdaysMin = localeWeekdaysMin;
          proto$1.weekdaysShort = localeWeekdaysShort;
          proto$1.weekdaysParse = localeWeekdaysParse;
          proto$1.weekdaysRegex = weekdaysRegex;
          proto$1.weekdaysShortRegex = weekdaysShortRegex;
          proto$1.weekdaysMinRegex = weekdaysMinRegex;
          proto$1.isPM = localeIsPM;
          proto$1.meridiem = localeMeridiem;

          function get$1(format, index, field, setter) {
            var locale = getLocale(),
                utc = createUTC().set(setter, index);
            return locale[field](utc, format);
          }

          function listMonthsImpl(format, index, field) {
            if (isNumber(format)) {
              index = format;
              format = undefined;
            }

            format = format || '';

            if (index != null) {
              return get$1(format, index, field, 'month');
            }

            var i,
                out = [];

            for (i = 0; i < 12; i++) {
              out[i] = get$1(format, i, field, 'month');
            }

            return out;
          } // ()
          // (5)
          // (fmt, 5)
          // (fmt)
          // (true)
          // (true, 5)
          // (true, fmt, 5)
          // (true, fmt)


          function listWeekdaysImpl(localeSorted, format, index, field) {
            if (typeof localeSorted === 'boolean') {
              if (isNumber(format)) {
                index = format;
                format = undefined;
              }

              format = format || '';
            } else {
              format = localeSorted;
              index = format;
              localeSorted = false;

              if (isNumber(format)) {
                index = format;
                format = undefined;
              }

              format = format || '';
            }

            var locale = getLocale(),
                shift = localeSorted ? locale._week.dow : 0,
                i,
                out = [];

            if (index != null) {
              return get$1(format, (index + shift) % 7, field, 'day');
            }

            for (i = 0; i < 7; i++) {
              out[i] = get$1(format, (i + shift) % 7, field, 'day');
            }

            return out;
          }

          function listMonths(format, index) {
            return listMonthsImpl(format, index, 'months');
          }

          function listMonthsShort(format, index) {
            return listMonthsImpl(format, index, 'monthsShort');
          }

          function listWeekdays(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
          }

          function listWeekdaysShort(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
          }

          function listWeekdaysMin(localeSorted, format, index) {
            return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
          }

          getSetGlobalLocale('en', {
            eras: [{
              since: '0001-01-01',
              until: +Infinity,
              offset: 1,
              name: 'Anno Domini',
              narrow: 'AD',
              abbr: 'AD'
            }, {
              since: '0000-12-31',
              until: -Infinity,
              offset: 1,
              name: 'Before Christ',
              narrow: 'BC',
              abbr: 'BC'
            }],
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function ordinal(number) {
              var b = number % 10,
                  output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
              return number + output;
            }
          }); // Side effect imports

          hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
          hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
          var mathAbs = Math.abs;

          function abs() {
            var data = this._data;
            this._milliseconds = mathAbs(this._milliseconds);
            this._days = mathAbs(this._days);
            this._months = mathAbs(this._months);
            data.milliseconds = mathAbs(data.milliseconds);
            data.seconds = mathAbs(data.seconds);
            data.minutes = mathAbs(data.minutes);
            data.hours = mathAbs(data.hours);
            data.months = mathAbs(data.months);
            data.years = mathAbs(data.years);
            return this;
          }

          function addSubtract$1(duration, input, value, direction) {
            var other = createDuration(input, value);
            duration._milliseconds += direction * other._milliseconds;
            duration._days += direction * other._days;
            duration._months += direction * other._months;
            return duration._bubble();
          } // supports only 2.0-style add(1, 's') or add(duration)


          function add$1(input, value) {
            return addSubtract$1(this, input, value, 1);
          } // supports only 2.0-style subtract(1, 's') or subtract(duration)


          function subtract$1(input, value) {
            return addSubtract$1(this, input, value, -1);
          }

          function absCeil(number) {
            if (number < 0) {
              return Math.floor(number);
            } else {
              return Math.ceil(number);
            }
          }

          function bubble() {
            var milliseconds = this._milliseconds,
                days = this._days,
                months = this._months,
                data = this._data,
                seconds,
                minutes,
                hours,
                years,
                monthsFromDays; // if we have a mix of positive and negative values, bubble down first
            // check: https://github.com/moment/moment/issues/2166

            if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {
              milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
              days = 0;
              months = 0;
            } // The following code bubbles up values, see the tests for
            // examples of what that means.


            data.milliseconds = milliseconds % 1000;
            seconds = absFloor(milliseconds / 1000);
            data.seconds = seconds % 60;
            minutes = absFloor(seconds / 60);
            data.minutes = minutes % 60;
            hours = absFloor(minutes / 60);
            data.hours = hours % 24;
            days += absFloor(hours / 24); // convert days to months

            monthsFromDays = absFloor(daysToMonths(days));
            months += monthsFromDays;
            days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year

            years = absFloor(months / 12);
            months %= 12;
            data.days = days;
            data.months = months;
            data.years = years;
            return this;
          }

          function daysToMonths(days) {
            // 400 years have 146097 days (taking into account leap year rules)
            // 400 years have 12 months === 4800
            return days * 4800 / 146097;
          }

          function monthsToDays(months) {
            // the reverse of daysToMonths
            return months * 146097 / 4800;
          }

          function as(units) {
            if (!this.isValid()) {
              return NaN;
            }

            var days,
                months,
                milliseconds = this._milliseconds;
            units = normalizeUnits(units);

            if (units === 'month' || units === 'quarter' || units === 'year') {
              days = this._days + milliseconds / 864e5;
              months = this._months + daysToMonths(days);

              switch (units) {
                case 'month':
                  return months;

                case 'quarter':
                  return months / 3;

                case 'year':
                  return months / 12;
              }
            } else {
              // handle milliseconds separately because of floating point math errors (issue #1867)
              days = this._days + Math.round(monthsToDays(this._months));

              switch (units) {
                case 'week':
                  return days / 7 + milliseconds / 6048e5;

                case 'day':
                  return days + milliseconds / 864e5;

                case 'hour':
                  return days * 24 + milliseconds / 36e5;

                case 'minute':
                  return days * 1440 + milliseconds / 6e4;

                case 'second':
                  return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here

                case 'millisecond':
                  return Math.floor(days * 864e5) + milliseconds;

                default:
                  throw new Error('Unknown unit ' + units);
              }
            }
          } // TODO: Use this.as('ms')?


          function valueOf$1() {
            if (!this.isValid()) {
              return NaN;
            }

            return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;
          }

          function makeAs(alias) {
            return function () {
              return this.as(alias);
            };
          }

          var asMilliseconds = makeAs('ms'),
              asSeconds = makeAs('s'),
              asMinutes = makeAs('m'),
              asHours = makeAs('h'),
              asDays = makeAs('d'),
              asWeeks = makeAs('w'),
              asMonths = makeAs('M'),
              asQuarters = makeAs('Q'),
              asYears = makeAs('y');

          function clone$1() {
            return createDuration(this);
          }

          function get$2(units) {
            units = normalizeUnits(units);
            return this.isValid() ? this[units + 's']() : NaN;
          }

          function makeGetter(name) {
            return function () {
              return this.isValid() ? this._data[name] : NaN;
            };
          }

          var milliseconds = makeGetter('milliseconds'),
              seconds = makeGetter('seconds'),
              minutes = makeGetter('minutes'),
              hours = makeGetter('hours'),
              days = makeGetter('days'),
              months = makeGetter('months'),
              years = makeGetter('years');

          function weeks() {
            return absFloor(this.days() / 7);
          }

          var round = Math.round,
              thresholds = {
            ss: 44,
            // a few seconds to seconds
            s: 45,
            // seconds to minute
            m: 45,
            // minutes to hour
            h: 22,
            // hours to day
            d: 26,
            // days to month/week
            w: null,
            // weeks to month
            M: 11 // months to year

          }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize

          function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
            return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
          }

          function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
            var duration = createDuration(posNegDuration).abs(),
                seconds = round(duration.as('s')),
                minutes = round(duration.as('m')),
                hours = round(duration.as('h')),
                days = round(duration.as('d')),
                months = round(duration.as('M')),
                weeks = round(duration.as('w')),
                years = round(duration.as('y')),
                a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days];

            if (thresholds.w != null) {
              a = a || weeks <= 1 && ['w'] || weeks < thresholds.w && ['ww', weeks];
            }

            a = a || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];
            a[2] = withoutSuffix;
            a[3] = +posNegDuration > 0;
            a[4] = locale;
            return substituteTimeAgo.apply(null, a);
          } // This function allows you to set the rounding function for relative time strings


          function getSetRelativeTimeRounding(roundingFunction) {
            if (roundingFunction === undefined) {
              return round;
            }

            if (typeof roundingFunction === 'function') {
              round = roundingFunction;
              return true;
            }

            return false;
          } // This function allows you to set a threshold for relative time strings


          function getSetRelativeTimeThreshold(threshold, limit) {
            if (thresholds[threshold] === undefined) {
              return false;
            }

            if (limit === undefined) {
              return thresholds[threshold];
            }

            thresholds[threshold] = limit;

            if (threshold === 's') {
              thresholds.ss = limit - 1;
            }

            return true;
          }

          function humanize(argWithSuffix, argThresholds) {
            if (!this.isValid()) {
              return this.localeData().invalidDate();
            }

            var withSuffix = false,
                th = thresholds,
                locale,
                output;

            if (typeof argWithSuffix === 'object') {
              argThresholds = argWithSuffix;
              argWithSuffix = false;
            }

            if (typeof argWithSuffix === 'boolean') {
              withSuffix = argWithSuffix;
            }

            if (typeof argThresholds === 'object') {
              th = Object.assign({}, thresholds, argThresholds);

              if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
              }
            }

            locale = this.localeData();
            output = relativeTime$1(this, !withSuffix, th, locale);

            if (withSuffix) {
              output = locale.pastFuture(+this, output);
            }

            return locale.postformat(output);
          }

          var abs$1 = Math.abs;

          function sign(x) {
            return (x > 0) - (x < 0) || +x;
          }

          function toISOString$1() {
            // for ISO strings we do not use the normal bubbling rules:
            //  * milliseconds bubble up until they become hours
            //  * days do not bubble at all
            //  * months bubble up until they become years
            // This is because there is no context-free conversion between hours and days
            // (think of clock changes)
            // and also not between days and months (28-31 days per month)
            if (!this.isValid()) {
              return this.localeData().invalidDate();
            }

            var seconds = abs$1(this._milliseconds) / 1000,
                days = abs$1(this._days),
                months = abs$1(this._months),
                minutes,
                hours,
                years,
                s,
                total = this.asSeconds(),
                totalSign,
                ymSign,
                daysSign,
                hmsSign;

            if (!total) {
              // this is the same as C#'s (Noda) and python (isodate)...
              // but not other JS (goog.date)
              return 'P0D';
            } // 3600 seconds -> 60 minutes -> 1 hour


            minutes = absFloor(seconds / 60);
            hours = absFloor(minutes / 60);
            seconds %= 60;
            minutes %= 60; // 12 months -> 1 year

            years = absFloor(months / 12);
            months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js

            s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
            totalSign = total < 0 ? '-' : '';
            ymSign = sign(this._months) !== sign(total) ? '-' : '';
            daysSign = sign(this._days) !== sign(total) ? '-' : '';
            hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
            return totalSign + 'P' + (years ? ymSign + years + 'Y' : '') + (months ? ymSign + months + 'M' : '') + (days ? daysSign + days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hmsSign + hours + 'H' : '') + (minutes ? hmsSign + minutes + 'M' : '') + (seconds ? hmsSign + s + 'S' : '');
          }

          var proto$2 = Duration.prototype;
          proto$2.isValid = isValid$1;
          proto$2.abs = abs;
          proto$2.add = add$1;
          proto$2.subtract = subtract$1;
          proto$2.as = as;
          proto$2.asMilliseconds = asMilliseconds;
          proto$2.asSeconds = asSeconds;
          proto$2.asMinutes = asMinutes;
          proto$2.asHours = asHours;
          proto$2.asDays = asDays;
          proto$2.asWeeks = asWeeks;
          proto$2.asMonths = asMonths;
          proto$2.asQuarters = asQuarters;
          proto$2.asYears = asYears;
          proto$2.valueOf = valueOf$1;
          proto$2._bubble = bubble;
          proto$2.clone = clone$1;
          proto$2.get = get$2;
          proto$2.milliseconds = milliseconds;
          proto$2.seconds = seconds;
          proto$2.minutes = minutes;
          proto$2.hours = hours;
          proto$2.days = days;
          proto$2.weeks = weeks;
          proto$2.months = months;
          proto$2.years = years;
          proto$2.humanize = humanize;
          proto$2.toISOString = toISOString$1;
          proto$2.toString = toISOString$1;
          proto$2.toJSON = toISOString$1;
          proto$2.locale = locale;
          proto$2.localeData = localeData;
          proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
          proto$2.lang = lang; // FORMATTING

          addFormatToken('X', 0, 0, 'unix');
          addFormatToken('x', 0, 0, 'valueOf'); // PARSING

          addRegexToken('x', matchSigned);
          addRegexToken('X', matchTimestamp);
          addParseToken('X', function (input, array, config) {
            config._d = new Date(parseFloat(input) * 1000);
          });
          addParseToken('x', function (input, array, config) {
            config._d = new Date(toInt(input));
          }); //! moment.js

          hooks.version = '2.29.1';
          setHookCallback(createLocal);
          hooks.fn = proto;
          hooks.min = min;
          hooks.max = max;
          hooks.now = now;
          hooks.utc = createUTC;
          hooks.unix = createUnix;
          hooks.months = listMonths;
          hooks.isDate = isDate;
          hooks.locale = getSetGlobalLocale;
          hooks.invalid = createInvalid;
          hooks.duration = createDuration;
          hooks.isMoment = isMoment;
          hooks.weekdays = listWeekdays;
          hooks.parseZone = createInZone;
          hooks.localeData = getLocale;
          hooks.isDuration = isDuration;
          hooks.monthsShort = listMonthsShort;
          hooks.weekdaysMin = listWeekdaysMin;
          hooks.defineLocale = defineLocale;
          hooks.updateLocale = updateLocale;
          hooks.locales = listLocales;
          hooks.weekdaysShort = listWeekdaysShort;
          hooks.normalizeUnits = normalizeUnits;
          hooks.relativeTimeRounding = getSetRelativeTimeRounding;
          hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
          hooks.calendarFormat = getCalendarFormat;
          hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats

          hooks.HTML5_FMT = {
            DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
            // <input type="datetime-local" />
            DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
            // <input type="datetime-local" step="1" />
            DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
            // <input type="datetime-local" step="0.001" />
            DATE: 'YYYY-MM-DD',
            // <input type="date" />
            TIME: 'HH:mm',
            // <input type="time" />
            TIME_SECONDS: 'HH:mm:ss',
            // <input type="time" step="1" />
            TIME_MS: 'HH:mm:ss.SSS',
            // <input type="time" step="0.001" />
            WEEK: 'GGGG-[W]WW',
            // <input type="week" />
            MONTH: 'YYYY-MM' // <input type="month" />

          };
          return hooks;
        });
        /* WEBPACK VAR INJECTION */

      }).call(this, __webpack_require__(
      /*! ./../webpack/buildin/module.js */
      "YuTi")(module));
      /***/
    },

    /***/
    "x6pH":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/he.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function x6pH(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Hebrew [he]
      //! author : Tomer Cohen : https://github.com/tomer
      //! author : Moshe Simantov : https://github.com/DevelopmentIL
      //! author : Tal Ater : https://github.com/TalAter
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var he = moment.defineLocale('he', {
          months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
          monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
          weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
          weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
          weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [ב]MMMM YYYY',
            LLL: 'D [ב]MMMM YYYY HH:mm',
            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
            l: 'D/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[היום ב־]LT',
            nextDay: '[מחר ב־]LT',
            nextWeek: 'dddd [בשעה] LT',
            lastDay: '[אתמול ב־]LT',
            lastWeek: '[ביום] dddd [האחרון בשעה] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'בעוד %s',
            past: 'לפני %s',
            s: 'מספר שניות',
            ss: '%d שניות',
            m: 'דקה',
            mm: '%d דקות',
            h: 'שעה',
            hh: function hh(number) {
              if (number === 2) {
                return 'שעתיים';
              }

              return number + ' שעות';
            },
            d: 'יום',
            dd: function dd(number) {
              if (number === 2) {
                return 'יומיים';
              }

              return number + ' ימים';
            },
            M: 'חודש',
            MM: function MM(number) {
              if (number === 2) {
                return 'חודשיים';
              }

              return number + ' חודשים';
            },
            y: 'שנה',
            yy: function yy(number) {
              if (number === 2) {
                return 'שנתיים';
              } else if (number % 10 === 0 && number !== 10) {
                return number + ' שנה';
              }

              return number + ' שנים';
            }
          },
          meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
          isPM: function isPM(input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
          },
          meridiem: function meridiem(hour, minute, isLower) {
            if (hour < 5) {
              return 'לפנות בוקר';
            } else if (hour < 10) {
              return 'בבוקר';
            } else if (hour < 12) {
              return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
              return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
              return 'בערב';
            }
          }
        });
        return he;
      });
      /***/

    },

    /***/
    "yPMs":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/sq.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function yPMs(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Albanian [sq]
      //! author : Flakërim Ismani : https://github.com/flakerimi
      //! author : Menelion Elensúle : https://github.com/Oire
      //! author : Oerd Cukalla : https://github.com/oerd
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var sq = moment.defineLocale('sq', {
          months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
          monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
          weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
          weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
          weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
          weekdaysParseExact: true,
          meridiemParse: /PD|MD/,
          isPM: function isPM(input) {
            return input.charAt(0) === 'M';
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
          },
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[Sot në] LT',
            nextDay: '[Nesër në] LT',
            nextWeek: 'dddd [në] LT',
            lastDay: '[Dje në] LT',
            lastWeek: 'dddd [e kaluar në] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'në %s',
            past: '%s më parë',
            s: 'disa sekonda',
            ss: '%d sekonda',
            m: 'një minutë',
            mm: '%d minuta',
            h: 'një orë',
            hh: '%d orë',
            d: 'një ditë',
            dd: '%d ditë',
            M: 'një muaj',
            MM: '%d muaj',
            y: 'një vit',
            yy: '%d vite'
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return sq;
      });
      /***/

    },

    /***/
    "ylpJ":
    /*!********************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/attendance-employee/attendance-employee.component.css ***!
      \********************************************************************************************************/

    /*! exports provided: default */

    /***/
    function ylpJ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0dGVuZGFuY2UtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7QUFDZCIsImZpbGUiOiJhdHRlbmRhbmNlLWVtcGxveWVlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufSJdfQ== */";
      /***/
    },

    /***/
    "ywOM":
    /*!**********************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/leave-settings/leave-settings.component.css ***!
      \**********************************************************************************************/

    /*! exports provided: default */

    /***/
    function ywOM(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxlYXZlLXNldHRpbmdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxhQUFhO0FBQ2QiLCJmaWxlIjoibGVhdmUtc2V0dGluZ3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59Il19 */";
      /***/
    },

    /***/
    "z1FC":
    /*!*******************************************!*\
      !*** ./node_modules/moment/locale/tzl.js ***!
      \*******************************************/

    /*! no static exports found */

    /***/
    function z1FC(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Talossan [tzl]
      //! author : Robin van der Vliet : https://github.com/robin0van0der0v
      //! author : Iustì Canun
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration
        // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
        // This is currently too difficult (maybe even impossible) to add.

        var tzl = moment.defineLocale('tzl', {
          months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
          monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
          weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
          weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
          weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
          longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM [dallas] YYYY',
            LLL: 'D. MMMM [dallas] YYYY HH.mm',
            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
          },
          meridiemParse: /d\'o|d\'a/i,
          isPM: function isPM(input) {
            return "d'o" === input.toLowerCase();
          },
          meridiem: function meridiem(hours, minutes, isLower) {
            if (hours > 11) {
              return isLower ? "d'o" : "D'O";
            } else {
              return isLower ? "d'a" : "D'A";
            }
          },
          calendar: {
            sameDay: '[oxhi à] LT',
            nextDay: '[demà à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[ieiri à] LT',
            lastWeek: '[sür el] dddd [lasteu à] LT',
            sameElse: 'L'
          },
          relativeTime: {
            future: 'osprei %s',
            past: 'ja%s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });

        function processRelativeTime(number, withoutSuffix, key, isFuture) {
          var format = {
            s: ['viensas secunds', "'iensas secunds"],
            ss: [number + ' secunds', '' + number + ' secunds'],
            m: ["'n míut", "'iens míut"],
            mm: [number + ' míuts', '' + number + ' míuts'],
            h: ["'n þora", "'iensa þora"],
            hh: [number + ' þoras', '' + number + ' þoras'],
            d: ["'n ziua", "'iensa ziua"],
            dd: [number + ' ziuas', '' + number + ' ziuas'],
            M: ["'n mes", "'iens mes"],
            MM: [number + ' mesen', '' + number + ' mesen'],
            y: ["'n ar", "'iens ar"],
            yy: [number + ' ars', '' + number + ' ars']
          };
          return isFuture ? format[key][0] : withoutSuffix ? format[key][0] : format[key][1];
        }

        return tzl;
      });
      /***/

    },

    /***/
    "z3Vd":
    /*!*******************************************!*\
      !*** ./node_modules/moment/locale/tlh.js ***!
      \*******************************************/

    /*! no static exports found */

    /***/
    function z3Vd(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Klingon [tlh]
      //! author : Dominika Kruk : https://github.com/amaranthrose
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

        function translateFuture(output) {
          var time = output;
          time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'leS' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'waQ' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'nem' : time + ' pIq';
          return time;
        }

        function translatePast(output) {
          var time = output;
          time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'Hu’' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'wen' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'ben' : time + ' ret';
          return time;
        }

        function translate(number, withoutSuffix, string, isFuture) {
          var numberNoun = numberAsNoun(number);

          switch (string) {
            case 'ss':
              return numberNoun + ' lup';

            case 'mm':
              return numberNoun + ' tup';

            case 'hh':
              return numberNoun + ' rep';

            case 'dd':
              return numberNoun + ' jaj';

            case 'MM':
              return numberNoun + ' jar';

            case 'yy':
              return numberNoun + ' DIS';
          }
        }

        function numberAsNoun(number) {
          var hundred = Math.floor(number % 1000 / 100),
              ten = Math.floor(number % 100 / 10),
              one = number % 10,
              word = '';

          if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
          }

          if (ten > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
          }

          if (one > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[one];
          }

          return word === '' ? 'pagh' : word;
        }

        var tlh = moment.defineLocale('tlh', {
          months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
          monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
          monthsParseExact: true,
          weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
          weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
          weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
          longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
          },
          calendar: {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
          },
          relativeTime: {
            future: translateFuture,
            past: translatePast,
            s: 'puS lup',
            ss: translate,
            m: 'wa’ tup',
            mm: translate,
            h: 'wa’ rep',
            hh: translate,
            d: 'wa’ jaj',
            dd: translate,
            M: 'wa’ jar',
            MM: translate,
            y: 'wa’ DIS',
            yy: translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.

          }
        });
        return tlh;
      });
      /***/

    },

    /***/
    "z9Bv":
    /*!**************************************************************************************************!*\
      !*** ./src/app/all-modules/employees/components/attendance-admin/attendance-admin.component.css ***!
      \**************************************************************************************************/

    /*! exports provided: default */

    /***/
    function z9Bv(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = ".content {\r\n\tpadding: 30px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0dGVuZGFuY2UtYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7QUFDZCIsImZpbGUiOiJhdHRlbmRhbmNlLWFkbWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufSJdfQ== */";
      /***/
    },

    /***/
    "zRNc":
    /*!*************************************************************************************************************************!*\
      !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/all-modules/employees/components/holidays/holidays.component.html ***!
      \*************************************************************************************************************************/

    /*! exports provided: default */

    /***/
    function zRNc(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony default export */


      __webpack_exports__["default"] = "<!-- Page Content -->\r\n<div class=\"content container-fluid\">\r\n\r\n    <!-- Page Header -->\r\n    <div class=\"page-header\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col\">\r\n                <h3 class=\"page-title\">Holidays 2019</h3>\r\n                <ul class=\"breadcrumb\">\r\n                    <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n                    <li class=\"breadcrumb-item active\">Holidays</li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"col-auto float-right ml-auto\">\r\n                <a  class=\"btn add-btn\" data-toggle=\"modal\" data-target=\"#add_holiday\"><i\r\n                        class=\"fa fa-plus\"></i> Add Holiday</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /Page Header -->\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\"\r\n                    class=\"table table-striped custom-table mb-0\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title </th>\r\n                            <th>Holiday Date</th>\r\n                            <th>Day</th>\r\n                            <th class=\"text-right\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class=\"holiday-completed\" *ngFor=\"let row of lstHolidays\">\r\n                            <td>{{row.id}}</td>\r\n                            <td>{{row.title}}</td>\r\n                            <td>{{row.holidaydate | customDate}}</td>\r\n                            <td>{{row.day}}</td>\r\n                            <td class=\"text-right\">\r\n                                <div class=\"dropdown dropdown-action\">\r\n                                    <a  class=\"action-icon dropdown-toggle\" data-toggle=\"dropdown\"\r\n                                        aria-expanded=\"false\"><i class=\"material-icons\">more_vert</i></a>\r\n                                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#edit_holiday\" (click)=\"edit(row.id)\"><i\r\n                                                class=\"fa fa-pencil m-r-5\"></i> Edit</a>\r\n                                        <a class=\"dropdown-item\"  data-toggle=\"modal\"\r\n                                            data-target=\"#delete_holiday\" (click)=\"tempId = row.id\"><i\r\n                                                class=\"fa fa-trash-o m-r-5\"></i> Delete</a>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Page Content -->\r\n\r\n<!-- Add Holiday Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"add_holiday\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Add Holiday</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" data-target=\"#add_holiday\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"addholidays()\" [formGroup]=\"addHolidayForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Holiday Name <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"addHolidayForm.get('HolidayName').invalid && addHolidayForm.get('HolidayName').touched\"\r\n                            formControlName=\"HolidayName\">\r\n                        <div\r\n                            *ngIf=\"addHolidayForm.get('HolidayName').invalid && addHolidayForm.get('HolidayName').touched\">\r\n                            <small\r\n                                *ngIf=\"addHolidayForm.get('HolidayName').invalid && addHolidayForm.get('HolidayName').touched\"\r\n                                class=\"text-danger\"> *Name is required</small>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Holiday Date</label>\r\n                        <div class=\"cal-icon\">\r\n                            <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"addHolidayForm.get('Holidaydate').invalid && addHolidayForm.get('Holidaydate').touched\"\r\n                                formControlName=\"Holidaydate\">\r\n                            <div\r\n                                *ngIf=\"addHolidayForm.get('Holidaydate').invalid && addHolidayForm.get('Holidaydate').touched\">\r\n                                <small\r\n                                    *ngIf=\"addHolidayForm.get('Holidaydate').invalid && addHolidayForm.get('Holidaydate').touched\"\r\n                                    class=\"text-danger\"> *Date is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Day <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"addHolidayForm.get('DaysName').invalid && addHolidayForm.get('DaysName').touched\"\r\n                            formControlName=\"DaysName\">\r\n                        <div *ngIf=\"addHolidayForm.get('DaysName').invalid && addHolidayForm.get('DaysName').touched\">\r\n                            <small\r\n                                *ngIf=\"addHolidayForm.get('DaysName').invalid && addHolidayForm.get('DaysName').touched\"\r\n                                class=\"text-danger\"> *Days is required</small>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Add Holiday Modal -->\r\n\r\n\r\n<!-- Edit Holiday Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"edit_holiday\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\">Edit Holiday</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form (ngSubmit)=\"editHolidays()\" [formGroup]=\"editHolidayForm\">\r\n                    <div class=\"form-group\">\r\n                        <label>Holiday Name <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"editHolidayForm.get('editHolidayName').invalid && editHolidayForm.get('editHolidayName').touched\"\r\n                            formControlName=\"editHolidayName\">\r\n                        <div\r\n                            *ngIf=\"editHolidayForm.get('editHolidayName').invalid && editHolidayForm.get('editHolidayName').touched\">\r\n                            <small\r\n                                *ngIf=\"editHolidayForm.get('editHolidayName').invalid && editHolidayForm.get('editHolidayName').touched\"\r\n                                class=\"text-danger\"> *Name is required</small>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Holiday Date</label>\r\n                        <div class=\"cal-icon\">\r\n                            <input class=\"form-control datetimepicker\" type=\"text\" bsDatepicker type=\"text\"\r\n                                [bsConfig]=\"{ dateInputFormat: 'DD-MM-YYYY',  returnFocusToInput: true }\"\r\n                                [class.invalid]=\"editHolidayForm.get('editHolidayDate').invalid && editHolidayForm.get('editHolidayDate').touched\"\r\n                                formControlName=\"editHolidayDate\" (bsValueChange)=\"from($event)\">\r\n                            <div\r\n                                *ngIf=\"editHolidayForm.get('editHolidayDate').invalid && editHolidayForm.get('editHolidayDate').touched\">\r\n                                <small\r\n                                    *ngIf=\"editHolidayForm.get('editHolidayDate').invalid && editHolidayForm.get('editHolidayDate').touched\"\r\n                                    class=\"text-danger\"> *Date is required</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Day <span class=\"text-danger\">*</span></label>\r\n                        <input class=\"form-control\" type=\"text\"\r\n                            [class.invalid]=\"editHolidayForm.get('editDaysName').invalid && editHolidayForm.get('editDaysName').touched\"\r\n                            formControlName=\"editDaysName\">\r\n                        <div\r\n                            *ngIf=\"editHolidayForm.get('editDaysName').invalid && editHolidayForm.get('editDaysName').touched\">\r\n                            <small\r\n                                *ngIf=\"editHolidayForm.get('editDaysName').invalid && editHolidayForm.get('editDaysName').touched\"\r\n                                class=\"text-danger\"> *Days is required</small>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"submit-section\">\r\n                        <button class=\"btn btn-primary submit-btn\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Edit Holiday Modal -->\r\n\r\n<!-- Delete Holiday Modal -->\r\n<div class=\"modal custom-modal fade\" id=\"delete_holiday\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body\">\r\n                <div class=\"form-header\">\r\n                    <h3>Delete Holiday</h3>\r\n                    <p>Are you sure want to delete?</p>\r\n                </div>\r\n                <div class=\"modal-btn delete-action\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6\">\r\n                            <a  class=\"btn btn-primary continue-btn\"\r\n                                (click)=\"deleteHolidays()\">Delete</a>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <a  data-dismiss=\"modal\"\r\n                                class=\"btn btn-primary cancel-btn\">Cancel</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- /Delete Holiday Modal -->";
      /***/
    },

    /***/
    "zx6S":
    /*!******************************************!*\
      !*** ./node_modules/moment/locale/sr.js ***!
      \******************************************/

    /*! no static exports found */

    /***/
    function zx6S(module, exports, __webpack_require__) {
      //! moment.js locale configuration
      //! locale : Serbian [sr]
      //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
      //! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic
      ;

      (function (global, factory) {
        true ? factory(__webpack_require__(
        /*! ../moment */
        "wd/R")) : undefined;
      })(this, function (moment) {
        'use strict'; //! moment.js locale configuration

        var translator = {
          words: {
            //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
          },
          correctGrammaticalCase: function correctGrammaticalCase(number, wordKey) {
            return number === 1 ? wordKey[0] : number >= 2 && number <= 4 ? wordKey[1] : wordKey[2];
          },
          translate: function translate(number, withoutSuffix, key) {
            var wordKey = translator.words[key];

            if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
              return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
          }
        };
        var sr = moment.defineLocale('sr', {
          months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
          monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
          monthsParseExact: true,
          weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
          weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
          weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
          weekdaysParseExact: true,
          longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D. M. YYYY.',
            LL: 'D. MMMM YYYY.',
            LLL: 'D. MMMM YYYY. H:mm',
            LLLL: 'dddd, D. MMMM YYYY. H:mm'
          },
          calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function nextWeek() {
              switch (this.day()) {
                case 0:
                  return '[u] [nedelju] [u] LT';

                case 3:
                  return '[u] [sredu] [u] LT';

                case 6:
                  return '[u] [subotu] [u] LT';

                case 1:
                case 2:
                case 4:
                case 5:
                  return '[u] dddd [u] LT';
              }
            },
            lastDay: '[juče u] LT',
            lastWeek: function lastWeek() {
              var lastWeekDays = ['[prošle] [nedelje] [u] LT', '[prošlog] [ponedeljka] [u] LT', '[prošlog] [utorka] [u] LT', '[prošle] [srede] [u] LT', '[prošlog] [četvrtka] [u] LT', '[prošlog] [petka] [u] LT', '[prošle] [subote] [u] LT'];
              return lastWeekDays[this.day()];
            },
            sameElse: 'L'
          },
          relativeTime: {
            future: 'za %s',
            past: 'pre %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate
          },
          dayOfMonthOrdinalParse: /\d{1,2}\./,
          ordinal: '%d.',
          week: {
            dow: 1,
            // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 7th is the first week of the year.

          }
        });
        return sr;
      });
      /***/

    }
  }]);
})();
//# sourceMappingURL=default~attendancereports-attendancereports-module~employees-employees-module-es5.js.map
{"version":3,"sources":["webpack:///src/app/all-modules/i-recruitment/vacancy/list/vacancy.component.ts","webpack:///src/app/sharing/sharing.module.ts","webpack:///src/app/all-modules/i-recruitment/vacancy/list/vacancy.component.html","webpack:///src/assets/pipes/custom-date.pipe.ts","webpack:///src/app/all-modules/i-recruitment/vacancy/edit/edit.component.ts","webpack:///src/app/all-modules/i-recruitment/vacancy/create/create.component.ts","webpack:///src/app/all-modules/i-recruitment/i-recruitment.component.css","webpack:///src/app/all-modules/i-recruitment/vacancy/create/create.component.css","webpack:///src/app/all-modules/i-recruitment/i-recruitment.module.ts","webpack:///src/app/all-modules/i-recruitment/vacancy/list/vacancy.component.css","webpack:///src/app/all-modules/i-recruitment/vacancy/edit/edit.component.css","webpack:///src/app/all-modules/i-recruitment/i-recruitment.component.html","webpack:///src/app/all-modules/i-recruitment/vacancy/show/show.component.html","webpack:///src/app/all-modules/i-recruitment/i-recruitment.component.ts","webpack:///src/app/all-modules/i-recruitment/vacancy/show/show.component.css","webpack:///src/app/all-modules/i-recruitment/vacancy/show/show.component.ts","webpack:///src/app/all-modules/i-recruitment/i-recruitment-routing.module.ts","webpack:///src/app/all-modules/i-recruitment/vacancy/create/create.component.html","webpack:///src/app/all-modules/i-recruitment/service/irecruitment.service.ts","webpack:///src/app/all-modules/i-recruitment/vacancy/edit/edit.component.html"],"names":["VacancyListComponent","irecservice","spinnerService","route","router","toastr","datePipe","baseUrl","pipe","listData","testData","currentDate","Date","cValue","configPgn","pageNum","pageSize","totalItem","pageSizes","pgnDiplayLastSeq","itemsPerPage","currentPage","totalItems","myFromGroup","get","setValue","getListData","setTimeout","val","console","log","srcEmpCode","srcFromDate","srcToDate","page","params","apiURL","queryParams","getUserQueryParams","show","sendGetRequest","subscribe","response","objectList","setDisplayLastSequence","hide","error","dataId","formData","rEntityName","rActiveOperation","sendDeleteRequest","$","modal","success","pngDiplayLastSeq","length","event","target","value","selector","template","providers","SharingModule","declarations","exports","imports","CustomDatePipe","myDate","changeFormat","replace","transform","name","EditComponent","formBuilder","payrollService","myFormData","initializeForm","setFormDefaultValues","initButtonsRippleEffect","getFormData","myForm","group","id","title","relevantEducation","area","jobLocation","requiredWithin","salMax","salMin","jobType","vcncyTot","noExperience","jobNature","spec","jobResponsibility","othersBenefit","vcncMale","vcncFemale","negotiable","ot","active","reset","createRipple","e","button","currentTarget","x","clientX","getBoundingClientRect","left","y","clientY","top","ripple","document","createElement","style","cssText","appendChild","remove","elements","querySelectorAll","forEach","element","addEventListener","dateStr_DD_MM_YYYY","dateComponents","split","snapshot","rActiveOpetation","activeStartDate","activeEndDate","patchValue","convertToISODateString","sendPutRequest","navigate","relativeTo","CreateVacancyComponent","loadData","dt","year","getFullYear","toString","slice","sendPostRequest","abc","IRecruitmentModule","schemas","IRecruitmentComponent","ShowComponent","isOt","isActive","routes","path","component","children","IRecruitmentRoutingModule","forChild","IrecruitmentService","http","post","put","empId","providedIn"],"mappings":"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","file":"i-recruitment-i-recruitment-module-es5.js","sourcesContent":["import { DatePipe, formatDate } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\nimport { IrecruitmentService } from '../../service/irecruitment.service';\n\n\n\ndeclare const $: any;\n@Component({\n  selector: 'app-vacancy',\n  templateUrl: './vacancy.component.html',\n  styleUrls: ['./vacancy.component.css'],\n  providers: [DatePipe]\n})\nexport class VacancyListComponent implements OnInit, OnDestroy {\n\n// cores\npublic baseUrl = environment.baseUrl;\n\npublic pipe = new DatePipe(\"en-US\");\npublic myFromGroup: FormGroup;\n\npublic editId: any;\npublic tempId: any;\n// list\npublic listData: any = [];\npublic configPgn: any;\n\ntestData : string = \" Hello Test\";\n\n// search fields\nprivate srcFromDate: string;\nprivate srcToDate: string;\nprivate srcEmpCode: string;\n\ncurrentDate = new Date();\n\n cValue = formatDate(this.currentDate, 'yyyy,MM,dd', 'en-US');\n\n\nconstructor(\n  private irecservice: IrecruitmentService,\n  private spinnerService: NgxSpinnerService,\n  private route: ActivatedRoute,\n  private router: Router,\n  private toastr: ToastrService,\n  private datePipe: DatePipe,\n) {\n  \n\n  this.configPgn = {\n    // my props\n    pageNum: 1,\n    pageSize: 10,\n    totalItem: 50,\n    pageSizes: [3, 5, 10, 25, 50, 100, 200, 500, 1000],\n    pgnDiplayLastSeq: 10,\n    // ngx plugin props\n    itemsPerPage: 10,\n    currentPage: 1,\n    totalItems: 50\n  };\n\n}\n\n \nngOnInit(): void {\n\n  // set init params\n  this.myFromGroup = new FormGroup({\n    pageSize: new FormControl()\n  });\n  this.myFromGroup.get('pageSize').setValue(this.configPgn.pageSize);\n\n  // bind event & action\n  //this.bindFromFloatingLabel();\n\n  // get List Data\n  this.getListData();\n\n}\n\n\nngAfterViewInit(): void {\n  setTimeout(() => {\n    //\n  }, 1000);\n}\n\n\n\n// private bindFromFloatingLabel(){\n\n//   var self = this;\n\n//   // for floating label\n//   if ($(\".floating\").length > 0) {\n//     $(\".floating\")\n//       .on(\"focus blur\", function (e) {\n//         $(this)\n//           .parents(\".form-focus\")\n//           .toggleClass(\"focused\", e.type === \"focus\" || this.value.length > 0);\n//       })\n//       .trigger(\"blur\");\n//   }\n\n//   $('.filter-row').find('input, select, textarea').keyup(function(e){\n\n//     console.log(e.keyCode)\n//     if(e.keyCode == 13){\n//       self.getSearchData();\n//     }\n\n//   });\n\n// }\n\n\n// // list & search methods --------------------------------------------------------------------------------------\n// searchByFromDate(val) {\n\n//   let myFromDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\n//   this.srcFromDate = myFromDateIso;\n//   console.log(myFromDateIso);\n//   this.bindFromFloatingLabel();\n\n// }\n// searchByToDate(val) {\n\n//   let myToDateIso = this.pipe.transform(val, \"yyyy-MM-dd\");\n//   this.srcToDate = myToDateIso;\n//   console.log(myToDateIso);\n//   this.bindFromFloatingLabel();\n\n// }\n\nsearchByEmpCode(val) {\n\n  console.log(val);\n  this.srcEmpCode = val;\n\n}\nsearchBySearchButton(){\n  console.log(this.srcFromDate);\n  console.log(this.srcToDate);\n  console.log(this.srcEmpCode);\n  // call get list method\n  this.getListData();\n}\n\n\npublic getSearchData() {\n  this.getListData();\n}\n\n\nprivate getUserQueryParams(page: number, pageSize: number): any {\n\n  let params: any = {};\n\n  if (page) {\n    params[`pageNum`] = page - 0;\n  }\n  if (pageSize) {\n    params[`pageSize`] = pageSize;\n  }\n\n  // push other attributes\n  if(this.srcEmpCode){\n    params[`empCode`] = this.srcEmpCode;\n  }\n  if(this.srcFromDate && this.srcToDate){\n    params[`fromDate`] = this.srcFromDate;\n    params[`toDate`] = this.srcToDate;\n  }\n\n  return params;\n  \n}\n\n\nprivate getListData() {\n\n  let apiURL = this.baseUrl + \"/api/vacancy/getList\";\n\n  let queryParams: any = {};\n  const params = this.getUserQueryParams(this.configPgn.pageNum, this.configPgn.pageSize);\n  queryParams = params;\n\n  this.spinnerService.show();\n  this.irecservice.sendGetRequest(apiURL, queryParams).subscribe(\n    (response: any) => {\n      this.listData = response.objectList;\n      this.configPgn.totalItem = response.totalItems;\n      this.configPgn.totalItems = response.totalItems;\n      this.setDisplayLastSequence();\n      this.spinnerService.hide();\n    },\n    (error) => {\n      console.log(error)\n    } \n  );\n  \n}\n\npublic deleteEnityData( dataId ){\n\n  let apiURL = this.baseUrl + \"/api/vacancy/delete/\" + dataId;\n  console.log(apiURL);\n\n  let formData: any = {};\n  formData.rEntityName = \"Vacancy\";\n  formData.rActiveOperation = \"delete\";\n\n  this.spinnerService.show();\n  this.irecservice.sendDeleteRequest(apiURL, formData).subscribe(\n    (response: any) => {\n      console.log(response);\n      this.spinnerService.hide();  \n      $(\"#delete_entity\").modal(\"hide\");\n      this.toastr.success(\"Successfully item is deleted\", \"Success\");\n      this.getListData();\n    },\n    (error) => {\n      console.log(error);\n      this.spinnerService.hide();  \n    }\n  );\n\n}\n\n\n// pagination handling methods start -----------------------------------------------------------------------\nsetDisplayLastSequence(){\n  this.configPgn.pngDiplayLastSeq = (((this.configPgn.pageNum - 1 ) * this.configPgn.pageSize) + this.configPgn.pageSize);\n  if(this.listData.length < this.configPgn.pageSize){\n    this.configPgn.pngDiplayLastSeq = (((this.configPgn.pageNum - 1 ) * this.configPgn.pageSize) + this.configPgn.pageSize);\n  }\n  if(this.configPgn.totalItem < this.configPgn.pngDiplayLastSeq){\n    this.configPgn.pngDiplayLastSeq = this.configPgn.totalItem;\n  }\n}\nhandlePageChange(event: number){\n  this.configPgn.pageNum = event;\n  // set for ngx\n  this.configPgn.currentPage = this.configPgn.pageNum;\n  this.getListData();\n}\nhandlePageSizeChange(event: any): void {\n  this.configPgn.pageSize = event.target.value;\n  this.configPgn.pageNum = 1;\n  // set for ngx\n  this.configPgn.itemsPerPage = this.configPgn.pageSize;\n  this.getListData();\n}\n// pagination handling methods end -------------------------------------------------------------------------\n\n\n\n\nngOnDestroy(): void {\n  // Do not forget to unsubscribe the event\n}\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomDatePipe } from 'src/assets/pipes/custom-date.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CustomDatePipe],\r\n  exports: [\r\n    CustomDatePipe,\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class SharingModule { }\r\n","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Vacancy Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <div class=\\\"btn-group btn-group\\\">\\n                    <button class=\\\"btn btn-white\\\">Excel</button>\\n                    <button class=\\\"btn btn-white\\\">PDF</button>\\n                    <button class=\\\"btn btn-white\\\"><i class=\\\"fa fa-print fa-lg\\\"></i> Print</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n    <!-- Search Filter -->\\n    <div class=\\\"card mb-2\\\" style=\\\"background-color:transparent;\\\">\\n        <div class=\\\"card-body p-3\\\">\\n\\n            <div class=\\\"row filter-row\\\">\\n\\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-xxl-2 col-12\\\">\\n                    <div class=\\\"form-group form-focus\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control floating\\\" (input)=\\\"searchByEmpCode($event.target.value)\\\">\\n                        <label class=\\\"focus-label\\\">Employee Code</label>\\n                    </div>\\n                </div>\\n                \\n            \\n                <div class=\\\"col-sm-6 col-md-3 col-lg-3 col-xl-3 col-12\\\">\\n                    <a  class=\\\"btn btn-success btn-block\\\" (click)=\\\"searchBySearchButton()\\\" > Search </a>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <!-- /Search Filter -->\\n\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n            <div class=\\\"card\\\">\\n\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"card-tools\\\">\\n                         <a routerLink = \\\"/irecruitment/vacancy/create\\\" class=\\\"btn btn-outline-primary\\\"><i class=\\\"fa fa-plus\\\"></i> New &nbsp;&nbsp;&nbsp;</a>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"card-body\\\">\\n\\n                    <div class=\\\"table-responsive\\\">\\n\\n                        <div class=\\\"d-flex justify-content-start pb-1\\\">\\n                            <div class=\\\"pgn-displayDataInfo\\\">\\n                                <span class=\\\"page-item disabled\\\">Displaying ( {{ ( ((configPgn.pageNum-1) * configPgn.pageSize) + (1) ) }}  to {{configPgn.pngDiplayLastSeq}} of {{configPgn.totalItem}} ) entries</span>\\n                            </div>\\n                        </div>\\n\\n                        <table id=\\\"genListTable\\\" class=\\\"table table-striped custom-table\\\" >\\n                            <thead>\\n                                <tr >\\n                                    <th>SL</th>\\n                                    <th class=\\\"d-none\\\">TB_ROW_ID</th>\\n                                    <th>Title</th>\\n                                    \\n                                    <th>jobType</th>\\n                                    <th>Salary Range (৳)</th>\\n                                    \\n                                    <th>Experience</th>\\n                                    \\n                                    <th>Created at</th>\\n                                    <th>Deadline</th>\\n                                    <th>Status</th>\\n                                    <th>Total Vacancy</th>\\n                                    <th>Relevant Education</th>\\n                                    <th>Action</th>\\n                                </tr>\\n                            </thead> \\n                            <tbody>\\n\\n                                <tr *ngFor=\\\"let thisObj of listData | paginate : configPgn;  let i = index\\\" [class.active]=\\\"i == currentIndex\\\" >\\n                                    <td>{{ ( ((configPgn.pageNum-1) * configPgn.pageSize) + (i+1) ) }}  </td>\\n                                    <td *ngIf=\\\"thisObj.active == 1\\\" class=\\\"text-success\\\"><i class=\\\"fa fa-toggle-on\\\"></i> {{thisObj.title}}</td>\\n                                    <td *ngIf=\\\"thisObj.active == 0\\\" class=\\\"text-danger\\\"><i class=\\\"fa fa-toggle-off\\\"></i> {{thisObj.title}}</td>\\n                                    \\n                                    <td>{{thisObj.jobType}}</td>\\n                                    <td>{{thisObj.salMin}}  - {{thisObj.salMax}}  </td>\\n                                   \\n                                    <td>{{thisObj.noExperience}}  year(s)</td>\\n                                    \\n                                    <td>{{thisObj.creationDateTime | date }} </td>\\n                                    <td>{{ thisObj.requiredWithin | date }}</td>\\n                                    <td>\\n                                        \\n                                        <div *ngIf=\\\"(thisObj.requiredWithin | date: 'yyyy,MM,dd') == (cValue); else template_Expired\\\" class=\\\"text-primary\\\">\\n                                            <i class=\\\"fa fa-exclamation-triangle\\\"> </i> Last Date\\n                                  </div>\\n                                  \\n                                  <ng-template #template_Expired>\\n                                        <div class=\\\"expired text-success\\\" *ngIf=\\\"(thisObj.requiredWithin | date: 'yyyy,MM,dd') > (cValue); else third\\\">\\n                                            <i class=\\\"fa fa-check\\\"> </i> Running\\n                                        </div>\\n                                  </ng-template>\\n                                  <ng-template #third> <div class=\\\"expired text-danger\\\"><i class=\\\"fa fa-times \\\"> </i> Date Over</div></ng-template>\\n\\n\\n                                </td>\\n\\n\\n                                    <td>{{thisObj.vcncyTot}}</td>\\n                                    <td>{{thisObj.relevantEducation}}</td>\\n\\n                                    \\n                                    <td>\\n                                        <a class=\\\"btn btn-sm btn-primary\\\" routerLink = \\\"/irecruitment/vacancy/show/{{thisObj.id}}\\\">View</a> &nbsp;\\n                                        <a class=\\\"btn btn-sm btn-info\\\" routerLink = \\\"/irecruitment/vacancy/edit/{{thisObj.id}}\\\"><i class=\\\"fa fa-pencil m-r-5\\\"></i></a>&nbsp;&nbsp;\\n                                        <!-- <a class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteEnityData(thisObj.id)\\\"><i class=\\\"fa fa-trash-o m-r-5\\\"></i></a>&nbsp;&nbsp; -->\\n                                        <a class=\\\"btn btn-sm btn-danger\\\"  \\n                                            data-toggle=\\\"modal\\\"\\n                                            data-target=\\\"#delete_entity\\\" \\n                                            (click)=\\\"tempId = thisObj.id\\\">\\n                                            <i class=\\\"fa fa-trash-o m-r-5\\\"></i>\\n                                        </a>\\n                                    </td>\\n                                </tr>\\n\\n                                <tr *ngIf=\\\"listData.length === 0\\\">\\n                                    <td colspan=\\\"10\\\">\\n                                        <h5 style=\\\"text-align: center;\\\">No data found</h5>\\n                                    </td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n\\n\\n                        <div class=\\\"d-flex justify-content-end \\\">\\n\\n                            <div class=\\\"\\\" [formGroup]=\\\"myFromGroup\\\">\\n                                Items per Page\\n                                <select (change)=\\\"handlePageSizeChange($event)\\\" class=\\\"pgn-pageSizeOption\\\" formControlName=\\\"pageSize\\\">\\n                                    <option *ngFor=\\\"let size of configPgn.pageSizes\\\" [value]=\\\"size\\\">\\n                                        {{ size }}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <div class=\\\"pgn-pageSliceCt\\\">\\n                                <pagination-controls \\n                                    responsive=\\\"true\\\" \\n                                    previousLabel=\\\"Prev\\\" \\n                                    nextLabel=\\\"Next\\\" \\n                                    (pageChange)=\\\"handlePageChange($event)\\\">\\n                                </pagination-controls>\\n                            </div>\\n                            \\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!-- /Page Content -->\\n\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\\n\\n<!-- Delete Modal -->\\n<div class=\\\"modal custom-modal fade\\\" id=\\\"delete_entity\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"form-header\\\">\\n                    <h3>Delete Item</h3>\\n                    <p>Are you sure want to delete?</p>\\n                </div>\\n                <div class=\\\"modal-btn delete-action\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\">\\n                            <a  class=\\\"btn btn-primary continue-btn\\\" (click)=\\\"deleteEnityData(tempId)\\\">Delete</a>\\n                        </div>\\n                        <div class=\\\"col-6\\\">\\n                            <a  data-dismiss=\\\"modal\\\"\\n                                class=\\\"btn btn-primary cancel-btn\\\">Cancel</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- /Delete Modal -->\\n\";","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n  name: 'customDate'\r\n})\r\nexport class CustomDatePipe implements PipeTransform {\r\n  \r\n  transform(value: any, ...args: any[]): any {\r\n    let myDate = value\r\n    let changeFormat = myDate.replace(/(\\d{2})-(\\d{2})-(\\d{4})/, \"$2/$1/$3\")\r\n    return new DatePipe('en-US').transform(changeFormat, 'MMM d, y');\r\n  }\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { environment } from 'src/environments/environment';\nimport { IrecruitmentService } from '../../service/irecruitment.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit, OnDestroy {\n\n  public baseUrl = environment.baseUrl;\n  public myForm: FormGroup;\n\n  public myFormData: any = {};\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private payrollService: IrecruitmentService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private spinnerService: NgxSpinnerService\n    ) {}\n\n\n  ngOnInit(): void {\n\n    this.initializeForm();\n    this.setFormDefaultValues();\n    this.initButtonsRippleEffect();\n    this.getFormData();\n  \n  }\n\n  ngOnDestroy(): void {\n    //\n  }\n\n\n  initializeForm(){\n\n    this.myForm = this.formBuilder.group({\n      id:[\"\"],\n      title: [\"\"],\n      relevantEducation: [\"\"],\n      area:[\"\"],\n      jobLocation:[\"\"],\n      requiredWithin:[\"\"],\n      salMax: [\"\"],\n      salMin: [\"\"],\n      jobType:[\"\"],\n      vcncyTot: [\"\"],\n      noExperience: [\"\"],\n      jobNature:[\"\"],\n      spec:[\"\"],\n      jobResponsibility:[\"\"],\n      othersBenefit: [\"\"],\n      vcncMale:[\"\"],\n      vcncFemale:[\"\"],\n      negotiable: [\"\"],\n      ot: [\"\"],\n      active: [\"\"],\n    });\n\n  }\n\n  setFormDefaultValues(){\n    //\n  }\n\n  resetFormValues(){\n\n    this.myForm.reset();\n    this.setFormDefaultValues();\n    \n  }\n\n  initButtonsRippleEffect(){\n    var createRipple = function(e){\n\n      const button = e.currentTarget;\n\n      let x = e.clientX - e.target.getBoundingClientRect().left;\n      let y = e.clientY - e.target.getBoundingClientRect().top;\n\n        // Create span element\n        let ripple = document.createElement(\"span\");\n        // Position the span element\n        ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 1s linear infinite;\";\n        ripple.style.left = `${x}px`;\n        ripple.style.top = `${y}px`;\n\n        // Add span to the button \n        button.appendChild(ripple);\n\n        // Remove span after 0.3s\n        setTimeout(() => {\n              ripple.remove();\n        }, 1000);\n  \n    }\n\n    const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\n    elements.forEach(element => {\n      element.addEventListener('click', function(e){\n        createRipple(e);\n      });\n    });\n\n  }\n\n\n\n  convertToISODateString(dateStr_DD_MM_YYYY) {\n      let dateComponents = dateStr_DD_MM_YYYY.split('-');\n      return dateComponents[2] + \"-\" + dateComponents[1] + dateComponents[0];\n  }\n\n\n  /**\n   * Read form data from API\n   */\n  getFormData(){\n\n    let id =  this.route.snapshot.params.id;\n    let apiURL = this.baseUrl + \"/api/vacancy/get/\" + id;\n\n    let queryParams: any = {};\n    queryParams.rEntityName = \"Vacancy\";\n    queryParams.rActiveOpetation = \"read\";\n\n    this.spinnerService.show();\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\n      (response: any) => {\n        this.myFormData = response;\n        // process date fields\n        this.myFormData.activeStartDate = (this.myFormData.activeStartDate) ? this.datePipe.transform(this.myFormData.activeStartDate,\"dd-MM-yyyy\") : null;\n        this.myFormData.activeEndDate = (this.myFormData.activeEndDate) ? this.datePipe.transform(this.myFormData.activeEndDate,\"dd-MM-yyyy\") : null;\n        this.spinnerService.hide();\n        this.myForm.patchValue(this.myFormData);  \n      },\n      (error) => {\n        console.log(error)\n      } \n    );\n\n\n  }\n\n  /**\n   * Save form data\n   */\n  saveUpdatedFormData() {\n    \n    let apiURL = this.baseUrl + \"/api/vacancy/update/\" + this.myForm.value.id;\n    console.log(apiURL);\n\n    let formData: any = {};\n    formData = this.myForm.value\n    formData.rEntityName = \"Vacancy\";\n    formData.rActiveOperation = \"update\";\n    // process date fields\n    formData.activeStartDate = (formData.activeStartDate) ? this.datePipe.transform( this.convertToISODateString(formData.activeStartDate),\"yyyy-MM-dd\") : null;\n    formData.activeEndDate = (formData.activeEndDate) ? this.datePipe.transform( this.convertToISODateString(formData.activeEndDate), \"yyyy-MM-dd\") : null;\n\n    this.spinnerService.show();\n    this.payrollService.sendPutRequest(apiURL, formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.spinnerService.hide();  \n        this.router.navigate([\"/irecruitment/vacancy/list\"], {relativeTo: this.route});\n      },\n      (error) => {\n        console.log(error);\n        this.spinnerService.hide();  \n      }\n    );\n\n\n  }\n\n\n}\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { environment } from 'src/environments/environment';\nimport { Vacancy } from '../../models/vacancy';\nimport { IrecruitmentService } from '../../service/irecruitment.service';\n\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateVacancyComponent implements OnInit {\n  public baseUrl = environment.baseUrl;\n  public myForm: FormGroup;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private irecservice: IrecruitmentService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private spinnerService: NgxSpinnerService\n    ) {}\n\n\n  ngOnInit(): void {\n\n    this.initializeForm();\n    this.setFormDefaultValues();\n    this.initButtonsRippleEffect();\n    this.loadData();\n  \n  }\n\n\n  initializeForm(){\n\n    this.myForm = this.formBuilder.group({\n      title: [\"\"],\n      relevantEducation: [\"\"],\n      area:[\"\"],\n      jobLocation:[\"\"],\n      requiredWithin:[\"\"],\n      salMax: [\"\"],\n      salMin: [\"\"],\n      jobType:[\"\"],\n      vcncyTot: [\"\"],\n      noExperience: [\"\"],\n      jobNature:[\"\"],\n      spec:[\"\"],\n      jobResponsibility:[\"\"],\n      othersBenefit: [\"\"],\n      vcncMale:[\"\"],\n      vcncFemale:[\"\"],\n      negotiable: [\"\"],\n      ot: [\"\"],\n      active: [\"\"],\n      \n      \n      \n    });\n\n  }\n\n  setFormDefaultValues(){\n\n    var dt = new Date();\n    var year = dt.getFullYear();\n\n    // // multiple\n    // this.myForm.patchValue({\n    //   year: year,\n    // });\n    // // single\n    // this.myForm.controls.year.setValue(year);\n\n  }\n\n \n  resetFormValues(){\n\n    this.myForm.reset();\n    this.setFormDefaultValues();\n    \n  }\n\n \n  initButtonsRippleEffect(){\n    var createRipple = function(e){\n\n      const button = e.currentTarget;\n\n      let x = e.clientX - e.target.getBoundingClientRect().left;\n      let y = e.clientY - e.target.getBoundingClientRect().top;\n\n        // Create span element\n        let ripple = document.createElement(\"span\");\n        // Position the span element\n        ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 1s linear infinite;\";\n        ripple.style.left = `${x}px`;\n        ripple.style.top = `${y}px`;\n\n        // Add span to the button \n        button.appendChild(ripple);\n\n        // Remove span after 0.3s\n        setTimeout(() => {\n              ripple.remove();\n        }, 1000);\n  \n    }\n\n    const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\n    elements.forEach(element => {\n      element.addEventListener('click', function(e){\n        createRipple(e);\n      });\n    });\n\n  }\n\n\n\n\n  myFormSubmit() {\n    \n    let apiURL = this.baseUrl + \"/api/vacancy/create\";\n\n    let formData: any = {};\n    formData = this.myForm.value\n    formData.rActiveOperation = \"Create\";\n    // process date\n    formData.activeStartDate = (formData.activeStartDate) ? this.datePipe.transform(formData.activeStartDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n    formData.activeEndDate = (formData.activeEndDate) ? this.datePipe.transform(formData.activeEndDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n\n    this.spinnerService.show();\n    this.irecservice.sendPostRequest(apiURL, formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.spinnerService.hide();  \n        this.router.navigate([\"/irecruitment/vacancy/list\"], {relativeTo: this.route});\n      },\n      (error) => {\n        console.log(error);\n        this.spinnerService.hide();  \n      }\n    );\n\n\n  }\n\n\n\n  loadData(){\n\n    let apiURL = this.baseUrl + \"/salaryProcess/start\";\n\n    let queryParams: any = {};\n    queryParams.abc = \"OK\";\n\n    // this.irecservice.sendGetRequest(apiURL, queryParams).subscribe(\n    //   (response: any) => {\n    //   console.log(response);\n    //   },\n    //   (error) => console.log(error)\n    // );\n\n}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpLXJlY3J1aXRtZW50LmNvbXBvbmVudC5jc3MifQ== */\";","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n/* ================= Purpale Color =========================== */\\r\\n\\r\\n\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n\\r\\ninput.form-group {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n\\r\\n\\r\\nlabel {\\r\\n    font-weight: 600;\\r\\n    color: #555;\\r\\n}\\r\\n\\r\\n\\r\\n@media screen and (min-width: 600px) {\\r\\n\\t.my-form .grid {\\r\\n\\t  display: grid;\\r\\n\\t  grid-gap: 1.5rem;\\r\\n\\t}.my-form .grid-2 {\\r\\n\\t\\tgrid-template-columns: 1fr 1fr;\\r\\n\\t  }\\r\\n\\t}\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsYUFBYTtBQUNkOzs7QUFHQSxnRUFBZ0U7OztBQUNoRTtDQUNDLHFCQUFxQjtDQUNyQiw4QkFBOEI7SUFDM0IsZ0JBQWdCO0FBQ3BCOzs7QUFDQTtDQUNDLHFCQUFxQjtDQUNyQiw4QkFBOEI7SUFDM0IsZ0JBQWdCO0FBQ3BCOzs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixVQUFVO0NBRVYsMkVBQTJFO0NBQzNFOzs7QUFHQTtJQUNHLGdCQUFnQjtJQUNoQixXQUFXO0FBQ2Y7OztBQUNDO0NBQ0E7R0FDRSxhQUFhO0dBQ2IsZ0JBQWdCO0NBQ2xCLENBQUM7RUFDQSw4QkFBOEI7R0FDN0I7Q0FDRiIsImZpbGUiOiJjcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50IHtcclxuXHRwYWRkaW5nOiAzMHB4O1xyXG59XHJcblxyXG5cclxuLyogPT09PT09PT09PT09PT09PT0gUHVycGFsZSBDb2xvciA9PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuaW5wdXQuZm9ybS1jb250cm9sLCBzZWxlY3QuZm9ybS1jb250cm9sLCB0ZXh0YXJlYS5mb3JtLWNvbnRyb2wge1xyXG5cdGJvcmRlci1jb2xvcjogIzY2N2VlYTtcclxuXHRib3JkZXItbGVmdDogM3B4IHNvbGlkICM2NjdlZWE7XHJcbiAgICBib3gtc2hhZG93OiBub25lOyBcclxufVxyXG5pbnB1dC5mb3JtLWdyb3VwIHtcclxuXHRib3JkZXItY29sb3I6ICM2NjdlZWE7XHJcblx0Ym9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjNjY3ZWVhO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTsgXHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG5cdGJvcmRlci1jb2xvcjogIzcwNUNCQTtcclxuXHRvdXRsaW5lOiAwO1xyXG5cdC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpO1xyXG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTsgXHJcbiB9XHJcblxyXG5cclxuIGxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBjb2xvcjogIzU1NTtcclxufVxyXG4gQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjAwcHgpIHtcclxuXHQubXktZm9ybSAuZ3JpZCB7XHJcblx0ICBkaXNwbGF5OiBncmlkO1xyXG5cdCAgZ3JpZC1nYXA6IDEuNXJlbTtcclxuXHR9Lm15LWZvcm0gLmdyaWQtMiB7XHJcblx0XHRncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcblx0ICB9XHJcblx0fVxyXG4gICJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IRecruitmentRoutingModule } from './i-recruitment-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { IRecruitmentComponent } from './i-recruitment.component';\nimport { CreateVacancyComponent } from './vacancy/create/create.component';\nimport { VacancyListComponent } from './vacancy/list/vacancy.component';\n\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { DataTablesModule } from 'angular-datatables';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\nimport { SharingModule } from 'src/app/sharing/sharing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PickListModule } from 'primeng/picklist';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { EditComponent } from './vacancy/edit/edit.component';\nimport { ShowComponent } from './vacancy/show/show.component';\n\n\n@NgModule({\n  declarations: [ IRecruitmentComponent, CreateVacancyComponent,  VacancyListComponent, EditComponent, ShowComponent],\n  imports: [\n    CommonModule,\n    IRecruitmentRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    SharingModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    NgxSpinnerModule,\n    PickListModule,\n    DataTablesModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class IRecruitmentModule { }\n","export default \".content {\\r\\n\\tpadding: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/* ================= Purpale Color =========================== */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\ninput.form-control, select.form-control, textarea.form-control {\\r\\n\\tborder-color: #667eea;\\r\\n\\tborder-left: 3px solid #667eea;\\r\\n    box-shadow: none; \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.form-control:focus {\\r\\n\\tborder-color: #705CBA;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: inset 0 1px 1px rgb(0 0 0 / 8%), 0 0 8px rgb(102 175 233 / 60%); \\r\\n }\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhY2FuY3kuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGFBQWE7QUFDZDs7Ozs7O0FBTUEsZ0VBQWdFOzs7Ozs7QUFDaEU7Q0FDQyxxQkFBcUI7Q0FDckIsOEJBQThCO0lBQzNCLGdCQUFnQjtBQUNwQjs7Ozs7O0FBRUE7Q0FDQyxxQkFBcUI7Q0FDckIsVUFBVTtDQUVWLDJFQUEyRTtDQUMzRSIsImZpbGUiOiJ2YWNhbmN5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcblx0cGFkZGluZzogMzBweDtcclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8qID09PT09PT09PT09PT09PT09IFB1cnBhbGUgQ29sb3IgPT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbmlucHV0LmZvcm0tY29udHJvbCwgc2VsZWN0LmZvcm0tY29udHJvbCwgdGV4dGFyZWEuZm9ybS1jb250cm9sIHtcclxuXHRib3JkZXItY29sb3I6ICM2NjdlZWE7XHJcblx0Ym9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjNjY3ZWVhO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTsgXHJcbn1cclxuXHJcbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xyXG5cdGJvcmRlci1jb2xvcjogIzcwNUNCQTtcclxuXHRvdXRsaW5lOiAwO1xyXG5cdC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMXB4IHJnYigwIDAgMCAvIDglKSwgMCAwIDhweCByZ2IoMTAyIDE3NSAyMzMgLyA2MCUpO1xyXG5cdGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2IoMCAwIDAgLyA4JSksIDAgMCA4cHggcmdiKDEwMiAxNzUgMjMzIC8gNjAlKTsgXHJcbiB9XHJcbiAiXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<!-- Page Wrapper -->\\n<div class=\\\"page-wrapper\\\" (resized)=\\\"onResize($event)\\\" [ngStyle]=\\\"{  }\\\">\\n    <router-outlet></router-outlet>\\n    </div>\\n    <!-- /Page Wrapper -->\";","export default \"<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Vacancy Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Home</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\"><a routerLink=\\\"/irecruitment/vacancy/list\\\">Vacancy</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\">{{myFormData.title}}</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <a class=\\\"btn add-btn\\\" routerLink=\\\"/irecruitment/vacancy/list\\\"><i class=\\\"fa fa-share\\\"></i> Back To List</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n\\n            <!------->\\n\\n\\n            <div class=\\\"container card\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-8\\\">\\n                    <div class=\\\"job-content\\\">\\n                      <h3 class=\\\"text-center text-info mt-4\\\"><i class=\\\"fa fa-briefcase\\\"> </i> {{myFormData.title}}</h3><hr>\\n                      \\n                      <p><b>No of Vacancies   :   </b>{{myFormData.vcncyTot}}</p>\\n                      <p><b>Work Station: </b>{{myFormData.jobLocation}}, {{myFormData.area}}</p>\\n                      <p><b> Context: </b> As a Full Stack Developer involved in back-end and front-end developing team. Took part in designing, building, maintaining, reviewing and supporting quality code and services.</p>\\n                      \\n                      <p><b>Job Description / Responsibilities</b>\\n                        \\n                    \\n                      </p>\\n                      <ul>\\n                        {{myFormData.jobResponsibility}}\\n                      </ul>\\n\\n\\n                      <p><b>Job Nature</b> </p>\\n                      <ul>\\n                        <li> {{myFormData.jobNature}}</li>\\n                      </ul>\\n\\n\\n                      <p><b>Job Type</b></p>\\n                      <ul>\\n                        <li>{{myFormData.jobType}}</li>\\n                      </ul>\\n\\n\\n\\n                      <p><b>Educational Requirements</b></p>\\n                      <ul>\\n                        <li>{{myFormData.relevantEducation}}</li>\\n                      </ul>\\n\\n\\n                      <p><b>Experience Requirements</b></p>\\n                      <ul>\\n                        <li>At least {{myFormData.noExperience}} year(s)</li>\\n                          \\n                      </ul>\\n                      <p><b>Additional Job Requirements</b></p>\\n                      <ul>\\n                        <li>Both males and females are allowed to apply.</li>\\n                        <li>Knowledge on Micro service Architecture implementation using spring and spring cloud.</li>\\n                        <li>Should have strong knowledge of REST API.</li>\\n                        <li>Should have experience in working on PostgreSQL database concepts such as locking, transactions, indexes, Shading, replication, schema design.</li>\\n                        <li>Passion for Automated Testing - unit, integration, regression.</li>\\n                        <li>Experienced user of Git, Maven, Jenkins, and CI/CD</li>\\n                        <li>Strong logical/critical thinking abilities, especially analyzing existing database schema, application architectures, and developing a good understanding of data models.</li>\\n                      </ul> \\n                  <p><b>Gender : </b></p>\\n                  <ul>\\n                    <li *ngIf=\\\"myFormData.vcncMale==1\\\">Male <i class=\\\"fa fa-check text-success\\\"></i></li>\\n                    <li *ngIf=\\\"myFormData.vcncFemale==1\\\">Female <i class=\\\"fa fa-check text-success\\\"></i></li>\\n                  </ul>\\n                  \\n                  <p><b> Salary Range</b></p>\\n                  <ul>\\n                    <li>{{myFormData.salMin}}৳ - {{myFormData.salMax}}৳ <span *ngIf=\\\"myFormData.negotiable==1\\\" class=\\\"text-success\\\">(negotiable)</span></li>\\n                  </ul>\\n                  <p> <b>Published On</b></p>\\n                  <ul>\\n                    <i class=\\\"fa fa-calendar\\\"> </i> {{ myFormData.creationDateTime | date }}\\n                  </ul>\\n                <p><b>Application Dead Line</b></p>\\n                <ul>\\n                  <i class=\\\"fa fa-calendar\\\"> </i> {{ myFormData.requiredWithin | date }}\\n                </ul>\\n               \\n                <p><b> Other Benifits</b></p>\\n                <ul>\\n                  <li>{{myFormData.othersBenefit}} </li>\\n                  <li *ngIf=\\\"myFormData.ot == 1\\\">This Position will pay Over Time.</li>\\n                </ul>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"card mt-2\\\" style=\\\"background-color: #ddd;\\\">\\n                      <div class=\\\"job-summery\\\">\\n                        <h4 class=\\\"text-center\\\">Job Summary</h4>\\n                        <table>\\n                          <tr>\\n                            <th>Published On</th>\\n                            <td>:</td>\\n                            <td> {{ myFormData.creationDateTime | date }}</td>\\n                          </tr>\\n                          <tr>\\n                            <th>Vacancies</th>\\n                            <td>:</td>\\n                            <td>{{myFormData.vcncyTot}}</td>\\n                          </tr>\\n                          <tr>\\n                            <th>Job Nature</th>\\n                            <td>:</td>\\n                            <td>{{myFormData.jobNature}}</td>\\n                          </tr>\\n                          \\n                          <tr>\\n                            <th>Experience</th>\\n                            <td>:</td>\\n                            <td>{{myFormData.noExperience}} Year/s</td>\\n\\n                          </tr>\\n                          \\n                          \\n                          <tr>\\n                            <th>Job Location</th>\\n                            <td>:</td>\\n                            <td>{{myFormData.jobLocation}}</td>\\n                          </tr>\\n                          <tr>\\n                            <th>Area</th>\\n                            <td>:</td>\\n                            <td>{{myFormData.area}}</td>\\n                          </tr>\\n                          <tr>\\n                            <th>Salary Range</th>\\n                            <td>:</td>\\n                            <td>{{myFormData.salMin}}৳ - {{myFormData.salMax}}৳  <span *ngIf=\\\"myFormData.negotiable==1\\\" class=\\\"text-success\\\">(negotiable)</span> </td>\\n                          </tr>\\n                          <tr>\\n                            <th>Closing Date</th>\\n                            <td>:</td>\\n                            <td>{{ myFormData.requiredWithin | date }}</td>\\n                          </tr>\\n                         \\n                        </table>\\n                      </div>\\n                     \\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"card\\\">\\n                  <div class=\\\"text-center\\\">\\n                    <div class=\\\"guide text-center \\\">                                \\n                      <div class=\\\"rba\\\">\\n                          <h2>\\n                            Apply Procedure\\n                          </h2>\\n                                                     \\n                  Candidates possessing the requisite skills and qualifications should feel free to apply with Cover Letter &amp; Complete CV \\n                </div>\\n                     \\n                      \\n                    <div class=\\\"text-center\\\">\\n                     Send your CV to <strong> hrm.corehr1@onedirectionbd.com</strong>  \\n                    </div>\\n                      <div>\\n                          <span class=\\\"date\\\">\\n                          Application Deadline : <strong>{{ myFormData.requiredWithin | date }}</strong>\\n                          </span>\\n                      </div>\\n                      <div>\\n                          <span class=\\\"date\\\">\\n                           <b><em>(Please mention position along with department name in subject line)</em></b> \\n                          </span>\\n                      </div>\\n                  \\n              </div>\\n</div>\\n</div>\\n</div>\\n</div>\\n</div>\\n            <!--------->\\n    </div>\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-i-recruitment',\n  templateUrl: './i-recruitment.component.html',\n  styleUrls: ['./i-recruitment.component.css']\n})\nexport class IRecruitmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onResize(event) {\n    \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG93LmNvbXBvbmVudC5jc3MifQ== */\";","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { environment } from 'src/environments/environment';\nimport { IrecruitmentService } from '../../service/irecruitment.service';\n\n\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-show',\n  templateUrl: './show.component.html',\n  styleUrls: ['./show.component.css']\n})\nexport class ShowComponent implements OnInit {\n\n  public baseUrl = environment.baseUrl;\n  public myForm: FormGroup;\n\n  public myFormData: any = {};\n  \n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private datePipe: DatePipe,\n    private payrollService: IrecruitmentService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private spinnerService: NgxSpinnerService\n    ) {}\n\n\n  ngOnInit(): void {\n\n    this.initializeForm();\n    this.setFormDefaultValues();\n    this.initButtonsRippleEffect();\n    this.getFormData();\n  \n  }\n\n  ngOnDestroy(): void {\n    //\n  }\n\n\n  initializeForm(){\n\n    this.myForm = this.formBuilder.group({\n      id:[\"\"],\n      title: [\"\"],\n      relevantEducation: [\"\"],\n      area:[\"\"],\n      jobLocation:[\"\"],\n      requiredWithin:[\"\"],\n      salMax: [\"\"],\n      salMin: [\"\"],\n      jobType:[\"\"],\n      vcncyTot: [\"\"],\n      noExperience: [\"\"],\n      jobNature:[\"\"],\n      spec:[\"\"],\n      jobResponsibility:[\"\"],\n      othersBenefit: [\"\"],\n      vcncMale:[\"\"],\n      vcncFemale:[\"\"],\n      negotiable: [\"\"],\n      isOt: [\"\"],\n      isActive: [\"\"],\n    });\n\n  }\n\n  setFormDefaultValues(){\n    //\n  }\n\n  resetFormValues(){\n\n    this.myForm.reset();\n    this.setFormDefaultValues();\n    \n  }\n\n  initButtonsRippleEffect(){\n    var createRipple = function(e){\n\n      const button = e.currentTarget;\n\n      let x = e.clientX - e.target.getBoundingClientRect().left;\n      let y = e.clientY - e.target.getBoundingClientRect().top;\n\n        // Create span element\n        let ripple = document.createElement(\"span\");\n        // Position the span element\n        ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 1s linear infinite;\";\n        ripple.style.left = `${x}px`;\n        ripple.style.top = `${y}px`;\n\n        // Add span to the button \n        button.appendChild(ripple);\n\n        // Remove span after 0.3s\n        setTimeout(() => {\n              ripple.remove();\n        }, 1000);\n  \n    }\n\n    const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\n    elements.forEach(element => {\n      element.addEventListener('click', function(e){\n        createRipple(e);\n      });\n    });\n\n  }\n\n\n\n  /**\n   * Read form data from API\n   */\n  getFormData(){\n\n    let id =  this.route.snapshot.params.id;\n    let apiURL = this.baseUrl + \"/api/vacancy/get/\" + id;\n\n    let queryParams: any = {};\n    queryParams.rEntityName = \"Vacancy\";\n    queryParams.rActiveOpetation = \"read\";\n\n    this.spinnerService.show();\n    this.payrollService.sendGetRequest(apiURL, queryParams).subscribe(\n      (response: any) => {\n        this.myFormData = response;\n        this.spinnerService.hide();\n        this.myForm.patchValue(this.myFormData);  \n      },\n      (error) => {\n        console.log(error)\n      } \n    );\n\n\n  }\n\n  /**\n   * Save form data\n   */\n  saveUpdatedFormData() {\n    \n    let apiURL = this.baseUrl + \"/api/vacancy/create\";\n\n    let formData: any = {};\n    formData = this.myForm.value\n    formData.rActiveOperation = \"Create\";\n    // process date\n    formData.activeStartDate = (formData.activeStartDate) ? this.datePipe.transform(formData.activeStartDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n    formData.activeEndDate = (formData.activeEndDate) ? this.datePipe.transform(formData.activeEndDate,\"yyyy-MM-dd\").toString().slice(0, 10) : null;\n\n    this.spinnerService.show();\n    this.payrollService.sendPostRequest(apiURL, formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.spinnerService.hide();  \n        this.router.navigate([\"/irecruitment/vacancy/list\"], {relativeTo: this.route});\n      },\n      (error) => {\n        console.log(error);\n        this.spinnerService.hide();  \n      }\n    );\n\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IRecruitmentComponent } from './i-recruitment.component';\nimport { CreateVacancyComponent } from './vacancy/create/create.component';\nimport { EditComponent } from './vacancy/edit/edit.component';\nimport { VacancyListComponent } from './vacancy/list/vacancy.component';\nimport { ShowComponent } from './vacancy/show/show.component';\n\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    component:IRecruitmentComponent,\n    children:[\n      {\n        path:\"vacancy/list\",\n        component:VacancyListComponent\n      }, \n      {\n        path:\"vacancy/create\",\n        component:CreateVacancyComponent\n      }, \n      {\n        path:\"vacancy/edit/:id\",\n        component:EditComponent\n      },\n      {\n        path:\"vacancy/show/:id\",\n        component:ShowComponent\n      }\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IRecruitmentRoutingModule { }\n","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Vacancy Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Home</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\">Create Vacancy</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <a class=\\\"btn add-btn\\\" routerLink=\\\"/irecruitment/vacancy/list\\\"><i class=\\\"fa fa-share\\\"></i> Back To List</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\"> -->\\n                    <!-- <h4 class=\\\"card-title mb-0\\\">Payroll Item Value</h4> -->\\n                <!-- </div>  -->\\n                <div class=\\\"card-body\\\">\\n\\n                   \\n\\n                    <form novalidate (ngSubmit)=\\\"myFormSubmit()\\\" [formGroup]=\\\"myForm\\\">\\n                        <h2 class=\\\"text-center\\\">Vacancy Form</h2>\\n                    <div class=\\\"row jumbotron\\\">\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"name-f\\\">Job Title</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  id=\\\"name-f\\\" placeholder=\\\"Enter job title.\\\" formControlName=\\\"title\\\" >\\n                           \\n                        </div>\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"name-l\\\">Relevant Education</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name-l\\\" placeholder=\\\"Enter Relevant Subject\\\" formControlName=\\\"relevantEducation\\\" >\\n                        </div>\\n                        \\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"Date\\\">Job Area</label>\\n                            <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"Date\\\" placeholder=\\\"Job area\\\" formControlName=\\\"area\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"address-1\\\">Job Location</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  id=\\\"address-1\\\" placeholder=\\\"Enter job Location\\\" formControlName=\\\"jobLocation\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"Date\\\">Application Deadline</label>\\n                            <input type=\\\"Date\\\"  class=\\\"form-control\\\" id=\\\"Date\\\" placeholder=\\\"\\\" formControlName=\\\"requiredWithin\\\">\\n                        </div>\\n                        \\n\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"State\\\">Salary Maximum</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\"  id=\\\"State\\\" placeholder=\\\"Enter Maximum Salary\\\"  min=\\\"1\\\" formControlName=\\\"salMax\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"zip\\\">Salary Minimum </label> <label class=\\\"float-right\\\" for=\\\"\\\">\\n                                <input type=\\\"checkbox\\\" value=\\\"1\\\" formControlName=\\\"negotiable\\\" />\\n                                 (Negotiable)\\n                              </label> \\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"zip\\\" placeholder=\\\"Enter Minimum Salary\\\" min=\\\"1\\\" formControlName=\\\"salMin\\\">\\n                        </div>\\n                       \\n\\n\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"email\\\">Job Type</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter Job Type\\\" formControlName=\\\"jobType\\\">\\n                        </div>\\n\\n\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"State\\\">Total Vacancy</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\"  id=\\\"State\\\" placeholder=\\\"Enter Total Vacancy\\\" min=\\\"1\\\" formControlName=\\\"vcncyTot\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"zip\\\">Year(s) of Experience</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"zip\\\" placeholder=\\\"Enter No of Experience\\\" min=\\\"0\\\" formControlName=\\\"noExperience\\\">\\n                        </div>\\n                        \\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"email\\\">Job Nature</label>\\n                            <select class=\\\"form-control browser-default custom-select\\\" formControlName=\\\"jobNature\\\">\\n                                <option selected>Select Job Nature</option>\\n                                <option value=\\\"Full Time\\\">Full Time</option>\\n                                <option value=\\\"Part Time\\\">Part Time</option>\\n                                <option value=\\\"Contractual\\\">Contractual</option>\\n                            </select>\\n                           \\n                        </div>\\n\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"email\\\">Specification</label>\\n                            \\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"spec\\\"> </textarea>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-12 form-group\\\">\\n                            <label for=\\\"email\\\">Job Responsibility</label>\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"jobResponsibility\\\"> </textarea>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-12 form-group\\\">\\n                            <label for=\\\"email\\\">Other Benefit</label>\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"othersBenefit\\\"> </textarea>\\n                        </div>\\n\\n                      \\n\\n                        <div class=\\\"col-sm-4 form-group mt-3\\\" style=\\\"box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\\\">\\n                            <div class=\\\"checkbox mt-3\\\" >\\n                                <label for=\\\"\\\">\\n                                  <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\"  formControlName=\\\"vcncMale\\\"/>\\n                                  This Position is Eligible for Male\\n                                </label>        \\n                              </div>\\n                              \\n                              <div class=\\\"checkbox\\\">\\n                                  <label >\\n                                      <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\" formControlName=\\\"vcncFemale\\\"/>  \\n                                      This Position is Eligible for Female\\n                                  </label>\\n                              </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"col-sm-4 form-group mt-3\\\" style=\\\"box-shadow: 0 3px 6px rgba(0,0,16,0.16), 0 3px 6px rgba(0,0,0,0.23);\\\">\\n                            <div class=\\\"checkbox mt-3\\\" >\\n                                <label for=\\\"\\\">\\n                                  <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\" formControlName=\\\"ot\\\"  />\\n                                  This Position has Over Time opportunity\\n                                </label>        \\n                              </div>\\n                              \\n                             \\n                        </div>\\n                        <div class=\\\"col-sm-4 form-group mt-3\\\" style=\\\"box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\\\">\\n                            \\n                            <div class=\\\"checkbox mt-3\\\" >\\n                                <label for=\\\"\\\">\\n                                  <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\" formControlName=\\\"active\\\"  />\\n                                  Publish this Job vacancy Post\\n                                </label>        \\n                              </div>\\n                              \\n                        </div>\\n\\n                       \\n                        \\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"text-right\\\">\\n                                <a class=\\\"btn btn-warning btn-ripple\\\" routerLink=\\\"/irecruitment/vacancy/list\\\"><i class=\\\"fa fa-share\\\"></i> Cancel</a>\\n                                &nbsp; &nbsp;\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-ripple\\\" (click)=\\\"resetFormValues()\\\">\\n                                    <i class=\\\"fa fa-undo\\\" aria-hidden=\\\"true\\\"></i> Reset\\n                                </button>\\n                                &nbsp; &nbsp;\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-ripple\\\">\\n                                    <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Save &nbsp;&nbsp;&nbsp;\\n                                </button>\\n                            </div>\\n                        </div>\\n            \\n                       \\n                        \\n                    </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n<!-- /Page Content -->\\n\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport baseUrl from 'src/app/_helper';\nimport { retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IrecruitmentService {\n\n  constructor(private http: HttpClient) { }\n\n \n\n\n  public sendGetRequest(apiURL, queryParams){\n\n    console.log(\"@sendGetRequest\");\n    return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n\n  }\n  public sendPostRequest(apiURL, formData){\n\n    console.log(\"@sendPostRequest\");\n    return this.http.post(apiURL, formData);\n\n  }\n  public sendPutRequest(apiURL, formData){\n\n    console.log(\"@sendPutRequest\");\n    return this.http.put(apiURL, formData);\n\n  }\n  public sendDeleteRequest(apiURL, formData){\n\n    console.log(\"@sendDeleteRequest\");\n    return this.http.delete(apiURL, formData);\n\n  }\n\n\n  // Get PayrollElement Assignment By EmpId\n  public getPayrollElementAssignmentByEmpId(empId){\n    return this.http.get(`${baseUrl}/empPayrollAssignment/get/${empId}`);\n  }\n\n}\n","export default \"<!-- Page Content -->\\n<div class=\\\"content container-fluid\\\">\\n\\n    <!-- Page Header -->\\n    <div class=\\\"page-header\\\">\\n        <div class=\\\"row align-items-center\\\">\\n            <div class=\\\"col\\\">\\n                <h3 class=\\\"page-title\\\">Vacancy Element</h3>\\n                <ul class=\\\"breadcrumb\\\">\\n                    <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/dashboard\\\">Home</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\"><a routerLink=\\\"/irecruitment/vacancy/list\\\">Vacancy</a></li>\\n                    <li class=\\\"breadcrumb-item active\\\">Update</li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col-auto float-right ml-auto\\\">\\n                <a class=\\\"btn add-btn\\\" routerLink=\\\"/irecruitment/vacancy/list\\\"><i class=\\\"fa fa-share\\\"></i> Back To List</a>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- /Page Header -->\\n\\n\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card\\\">\\n                <!-- <div class=\\\"card-header\\\"> -->\\n                    <!-- <h4 class=\\\"card-title mb-0\\\">Payroll Item Value</h4> -->\\n                <!-- </div>  -->\\n                <div class=\\\"card-body\\\">\\n\\n                   \\n\\n                    <form novalidate (ngSubmit)=\\\"saveUpdatedFormData()\\\" [formGroup]=\\\"myForm\\\">\\n\\n                        <h2 class=\\\"text-center\\\">Update Vacancy</h2>\\n                        <input type=\\\"hidden\\\" class=\\\"form-control\\\"  formControlName=\\\"id\\\" readonly disabled>\\n                    <div class=\\\"row jumbotron\\\">\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"name-f\\\">Job Title</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  id=\\\"name-f\\\" placeholder=\\\"Enter job title.\\\" formControlName=\\\"title\\\" >\\n                           \\n                        </div>\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"name-l\\\">Relevant Education</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name-l\\\" placeholder=\\\"Enter Relevant Subject\\\" formControlName=\\\"relevantEducation\\\" >\\n                        </div>\\n                        \\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"Date\\\">Job Area</label>\\n                            <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"Date\\\" placeholder=\\\"Job area\\\" formControlName=\\\"area\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"address-1\\\">Job Location</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  id=\\\"address-1\\\" placeholder=\\\"Enter job Location\\\" formControlName=\\\"jobLocation\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label>Application Deadline</label><span style=\\\"color: gray\\\"> {{myFormData.requiredWithin | date}} </span>\\n                            <input type=\\\"date\\\"  class=\\\"form-control\\\" placeholder=\\\"\\\" formControlName=\\\"requiredWithin\\\">\\n                            \\n                            \\n                        </div>\\n                        \\n\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"State\\\">Salary Maximum</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\"  id=\\\"State\\\" placeholder=\\\"Enter Maximum Salary\\\"  min=\\\"1\\\" formControlName=\\\"salMax\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"zip\\\">Salary Minimum </label> \\n                            <label class=\\\"float-right\\\" for=\\\"\\\">\\n                                <input type=\\\"checkbox\\\" value=\\\"1\\\" formControlName=\\\"negotiable\\\" />\\n                                 (Negotiable)\\n                              </label> \\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"zip\\\" placeholder=\\\"Enter Minimum Salary\\\" min=\\\"1\\\" formControlName=\\\"salMin\\\">\\n                        </div>\\n                       \\n\\n\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"email\\\">Job Type</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter Job Type\\\" formControlName=\\\"jobType\\\">\\n                        </div>\\n\\n\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"State\\\">Total Vacancy</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\"  id=\\\"State\\\" placeholder=\\\"Enter Total Vacancy\\\" formControlName=\\\"vcncyTot\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3 form-group\\\">\\n                            <label for=\\\"zip\\\">No of Experience</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"zip\\\" placeholder=\\\"Enter No of Experience\\\" formControlName=\\\"noExperience\\\">\\n                        </div>\\n                        \\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"email\\\">Job Nature</label>\\n                            <select class=\\\"form-control browser-default custom-select\\\" formControlName=\\\"jobNature\\\">\\n                                <option selected>Select Job Nature</option>\\n                                <option value=\\\"Full Time\\\">Full Time</option>\\n                                <option value=\\\"Part Time\\\">Part Time</option>\\n                                <option value=\\\"Contractual\\\">Contractual</option>\\n                            </select>\\n                           \\n                        </div>\\n\\n                        <div class=\\\"col-sm-6 form-group\\\">\\n                            <label for=\\\"email\\\">Specification</label>\\n                            \\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"spec\\\"> </textarea>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-12 form-group\\\">\\n                            <label for=\\\"email\\\">Job Responsibility</label>\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"jobResponsibility\\\"> </textarea>\\n                        </div>\\n\\n                        <div class=\\\"col-sm-12 form-group\\\">\\n                            <label for=\\\"email\\\">Other Benefit</label>\\n                            <textarea class=\\\"form-control\\\" formControlName=\\\"othersBenefit\\\"> </textarea>\\n                        </div>\\n\\n                      \\n\\n                        <div class=\\\"col-sm-4 form-group mt-3\\\" style=\\\"box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\\\">\\n                            <div class=\\\"checkbox mt-3\\\" >\\n                                <label for=\\\"\\\">\\n                                  <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\"  formControlName=\\\"vcncMale\\\">\\n                                  This Position is Eligible for Male\\n                                </label>        \\n                              </div>\\n                              \\n                              <div class=\\\"checkbox\\\">\\n                                  <label >\\n                                      <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\" formControlName=\\\"vcncFemale\\\">  \\n                                      This Position is Eligible for Female\\n                                  </label>\\n                              </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"col-sm-4 form-group mt-3\\\" style=\\\"box-shadow: 0 3px 6px rgba(0,0,16,0.16), 0 3px 6px rgba(0,0,0,0.23);\\\">\\n                            <div class=\\\"checkbox mt-3\\\" >\\n                                <label>\\n                                  <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\" formControlName=\\\"ot\\\" >\\n                                  This Position has Over Time opportunity\\n                                </label>        \\n                              </div>\\n                              \\n                             \\n                        </div>\\n                        <div class=\\\"col-sm-4 form-group mt-3\\\" style=\\\"box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\\\">\\n                            \\n                            <div class=\\\"checkbox mt-3\\\" >\\n                                <label for=\\\"\\\">\\n                                  <input type=\\\"checkbox\\\" value=\\\"1\\\" class=\\\"form-group\\\" formControlName=\\\"active\\\"  >\\n                                  Publish this Job vacancy Post\\n                                </label>        \\n                              </div>\\n                              \\n                        </div>\\n\\n                       \\n                        \\n                        <div class=\\\"col-sm-12\\\">\\n                            <div class=\\\"text-right\\\">\\n                                <a class=\\\"btn btn-warning btn-ripple\\\" routerLink=\\\"/irecruitment/vacancy/list\\\"><i class=\\\"fa fa-share\\\"></i> Cancel</a>\\n                                &nbsp; &nbsp;\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-ripple\\\" (click)=\\\"resetFormValues()\\\">\\n                                    <i class=\\\"fa fa-undo\\\" aria-hidden=\\\"true\\\"></i> Reset\\n                                </button>\\n                                &nbsp; &nbsp;\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-ripple\\\">\\n                                    <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Save &nbsp;&nbsp;&nbsp;\\n                                </button>\\n                            </div>\\n                        </div>\\n            \\n                       \\n                        \\n                    </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n</div>\\n<!-- /Page Content -->\\n\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\\n\";"]}
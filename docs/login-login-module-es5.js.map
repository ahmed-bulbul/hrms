{"version":3,"sources":["webpack:///src/app/login/components/register/register.component.html","webpack:///src/app/login/components/login/login.component.css","webpack:///src/app/login/components/login/login.component.ts","webpack:///src/app/login/components/lockscreen/lockscreen.component.ts","webpack:///src/app/all-modules/employees/services/employee.service.ts","webpack:///src/app/login/components/forgot/forgot.component.ts","webpack:///src/app/login/components/register/register.component.ts","webpack:///src/app/login/components/register/register.component.css","webpack:///src/app/login/components/otp/otp.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/components/lockscreen/lockscreen.component.html","webpack:///src/app/login/components/login/login.component.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/components/lockscreen/lockscreen.component.css","webpack:///src/app/login/components/otp/otp.component.ts","webpack:///src/app/login/components/forgot/forgot.component.css","webpack:///src/app/login/components/forgot/forgot.component.html","webpack:///src/app/login/components/otp/otp.component.css"],"names":["LoginComponent","formBuilder","toastr","loginService","router","hrcremp","loading","submitted","initializeForm","initButtonRippleEffect","isLoggedIn","navigate","loginForm","controls","group","username","required","password","minLength","invalid","loginData","Object","assign","value","console","log","generateToken","pipe","subscribe","data","loginUser","token","getCurrentUser","user","setUser","getUserRole","success","positionClass","loginStatusSubject","next","getSuperAdminRole","authority","getAdminRole","logout","error","message","createRipple","e","button","currentTarget","x","clientX","target","getBoundingClientRect","left","y","clientY","top","ripple","document","createElement","style","cssText","appendChild","setTimeout","remove","elements","querySelectorAll","forEach","element","addEventListener","selector","template","LockscreenComponent","EmployeeService","http","baseUrl","get","apiURL","queryParams","params","emp","post","put","id","loginCode","formData","keyword","empId","providedIn","ForgotComponent","RegisterComponent","route","snapshot","isAddMode","formOptions","validators","form","firstName","lastName","phone","email","confirmPassword","getById","patchValue","createUser","register","relativeTo","add","LoginModule","declarations","imports","routes","path","component","LoginRoutingModule","forChild","exports","OtpComponent"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<!-- Main Wrapper -->\\r\\n<div class=\\\"main-wrapper\\\">\\r\\n    <div class=\\\"account-content\\\">\\r\\n        <a routerLink=\\\"/login/joblist\\\" class=\\\"btn btn-primary apply-btn\\\">Apply Job</a>\\r\\n        <div class=\\\"container\\\">\\r\\n\\r\\n            <!-- Account Logo -->\\r\\n            <div class=\\\"account-logo\\\">\\r\\n                <a routerLink=\\\"/dashboard\\\"><img src=\\\"assets/img/w_logo.png\\\" alt=\\\"Dreamguy's Technologies\\\"></a>\\r\\n            </div>\\r\\n            <!-- /Account Logo -->\\r\\n\\r\\n            <div class=\\\"account-box\\\">\\r\\n                <div class=\\\"account-wrapper\\\">\\r\\n                    <h3 class=\\\"account-title\\\">Register</h3>\\r\\n                    <p class=\\\"account-subtitle\\\">Access to our dashboard</p>\\r\\n\\r\\n                    <!-- Account Form -->\\r\\n                    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Username</label>\\r\\n                            <input class=\\\"form-control\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" type=\\\"text\\\">\\r\\n                            <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Email</label>\\r\\n                            <input class=\\\"form-control\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" type=\\\"email\\\">\\r\\n                            <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\r\\n                                <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>First Name</label>\\r\\n                            <input class=\\\"form-control\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" type=\\\"text\\\">\\r\\n                            <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Last Name</label>\\r\\n                            <input class=\\\"form-control\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" type=\\\"text\\\">\\r\\n                            <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Phone</label>\\r\\n                            <input class=\\\"form-control\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && f.phone.errors }\\\" type=\\\"number\\\">\\r\\n                            <div *ngIf=\\\"submitted && f.phone.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.phone.errors.required\\\">Phone is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\r\\n                                <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 4 characters</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Repeat Password</label>\\r\\n                            <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\"\\r\\n                                [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" />\\r\\n                            <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"f.confirmPassword.errors.required\\\">Confirm Password is required</div>\\r\\n                                <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">Passwords must match</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary account-btn\\\" type=\\\"submit\\\">\\r\\n                                <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                                Register\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div class=\\\"account-footer\\\">\\r\\n                            <p>Already have an account? <a routerLink=\\\"/login/login\\\">Login</a></p>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    <!-- /Account Form -->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Main Wrapper -->\";","export default \".center-screen {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    min-height: 100vh;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  background-image: linear-gradient(to bottom right, rgb(255,255,255, 0.3) 30% , rgb(102, 126, 234, 0.5) 50%, rgb(118, 75, 162, 0.3)), url(/src/assets/img/ROIKBN.jpg);\\r\\n}\\r\\n\\r\\ndiv.main-wrapper {\\r\\n  background-image: linear-gradient(to bottom right, rgb(255,255,255, 0.3) 30% , rgb(102, 126, 234, 0.5) 50%, rgb(118, 75, 162, 0.3)), url('ROIKBN.jpg');\\r\\n}\\r\\n\\r\\ndiv.account-content {\\r\\n  background-image: linear-gradient(to bottom right, rgb(255,255,255, 0.3) 30% , rgb(102, 126, 234, 0.5) 50%, rgb(118, 75, 162, 0.3)), url('ROIKBN.jpg');\\r\\n}\\r\\n\\r\\n.account-box {\\r\\n  background-color: #fff;\\r\\n  border: 2px solid #ededed;\\r\\n  border-radius: 4px;\\r\\n  box-shadow: 0 1px 1px 0 rgb(0 0 0 / 20%);\\r\\n  margin: 0 auto;\\r\\n  overflow: hidden;\\r\\n  width: 350px;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\ncompany-title {\\r\\n  font-size: 26px;\\r\\n  font-weight: 500;\\r\\n  margin-bottom: 5px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.account-title {\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.login-box-ct .login-box-title {\\r\\n  padding-right: 0;\\r\\n}\\r\\n\\r\\n.login-box-ct .login-box-form {\\r\\n  padding-left: 0;\\r\\n}\\r\\n\\r\\n.login-box-ct .login-box-title .account-box {\\r\\n  margin-right: 0;\\r\\n}\\r\\n\\r\\n.login-box-ct .login-box-form .account-box {\\r\\n  margin-left: 0;\\r\\n}\\r\\n\\r\\n.login-box-title .account-box {\\r\\n  background-image: linear-gradient(to bottom, white 30%, rgb(102, 126, 234, 0.5) 50%), url(/assets/img/login-page/login-bg-img-1.png);\\r\\n  background-image: linear-gradient(to bottom, white 30%, rgb(102, 126, 234, 0.5) 50%), url('login-bg-img-1.png');\\r\\n  /* background-position: center; */\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n/* ---------------------- Ripple Effect Button // Start --------------------- */\\r\\n\\r\\n.btn-ripple {\\r\\n  position: relative;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes animate {\\r\\n\\t0% \\r\\n\\t{\\r\\n\\t\\twidth: 0px;\\r\\n\\t\\theight: 0px;\\r\\n\\t\\topacity: 0.5;\\r\\n\\t}\\r\\n\\t100%\\r\\n\\t{\\r\\n\\t\\twidth: 700px;\\r\\n\\t\\theight: 700px;\\r\\n\\t\\topacity: 0;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n@keyframes animate {\\r\\n\\t0% \\r\\n\\t{\\r\\n\\t\\twidth: 0px;\\r\\n\\t\\theight: 0px;\\r\\n\\t\\topacity: 0.5;\\r\\n\\t}\\r\\n\\t100%\\r\\n\\t{\\r\\n\\t\\twidth: 700px;\\r\\n\\t\\theight: 700px;\\r\\n\\t\\topacity: 0;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n/* ---------------------- Ripple Effect Button // End ------------------------- */\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixpQkFBaUI7QUFDckI7O0FBRUE7RUFDRSxvS0FBb0s7QUFDdEs7O0FBQ0E7RUFDRSxzSkFBbUs7QUFDcks7O0FBQ0E7RUFDRSxzSkFBbUs7QUFDcks7O0FBR0E7RUFDRSxzQkFBc0I7RUFDdEIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQix3Q0FBd0M7RUFDeEMsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFHQTtFQUNFLG9JQUFvSTtFQUNwSSwrR0FBdUk7RUFDdkksaUNBQWlDO0VBQ2pDLDRCQUE0QjtFQUM1QixzQkFBc0I7QUFDeEI7O0FBR0EsK0VBQStFOztBQUMvRTtFQUNFLGtCQUFrQjtDQUNuQixnQkFBZ0I7QUFDakI7O0FBRUE7Q0FDQzs7RUFFQyxVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7Q0FDYjtDQUNBOztFQUVDLFlBQVk7RUFDWixhQUFhO0VBQ2IsVUFBVTtDQUNYO0FBQ0Q7O0FBYkE7Q0FDQzs7RUFFQyxVQUFVO0VBQ1YsV0FBVztFQUNYLFlBQVk7Q0FDYjtDQUNBOztFQUVDLFlBQVk7RUFDWixhQUFhO0VBQ2IsVUFBVTtDQUNYO0FBQ0Q7O0FBQ0EsaUZBQWlGIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyLXNjcmVlbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWluLWhlaWdodDogMTAwdmg7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20gcmlnaHQsIHJnYigyNTUsMjU1LDI1NSwgMC4zKSAzMCUgLCByZ2IoMTAyLCAxMjYsIDIzNCwgMC41KSA1MCUsIHJnYigxMTgsIDc1LCAxNjIsIDAuMykpLCB1cmwoL3NyYy9hc3NldHMvaW1nL1JPSUtCTi5qcGcpO1xyXG59XHJcbmRpdi5tYWluLXdyYXBwZXIge1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20gcmlnaHQsIHJnYigyNTUsMjU1LDI1NSwgMC4zKSAzMCUgLCByZ2IoMTAyLCAxMjYsIDIzNCwgMC41KSA1MCUsIHJnYigxMTgsIDc1LCAxNjIsIDAuMykpLCB1cmwoc3JjL2Fzc2V0cy9pbWcvUk9JS0JOLmpwZyk7XHJcbn1cclxuZGl2LmFjY291bnQtY29udGVudCB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSByaWdodCwgcmdiKDI1NSwyNTUsMjU1LCAwLjMpIDMwJSAsIHJnYigxMDIsIDEyNiwgMjM0LCAwLjUpIDUwJSwgcmdiKDExOCwgNzUsIDE2MiwgMC4zKSksIHVybChzcmMvYXNzZXRzL2ltZy9ST0lLQk4uanBnKTtcclxufVxyXG5cclxuXHJcbi5hY2NvdW50LWJveCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBib3JkZXI6IDJweCBzb2xpZCAjZWRlZGVkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBib3gtc2hhZG93OiAwIDFweCAxcHggMCByZ2IoMCAwIDAgLyAyMCUpO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgd2lkdGg6IDM1MHB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuY29tcGFueS10aXRsZSB7XHJcbiAgZm9udC1zaXplOiAyNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmFjY291bnQtdGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLmxvZ2luLWJveC1jdCAubG9naW4tYm94LXRpdGxlIHtcclxuICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4ubG9naW4tYm94LWN0IC5sb2dpbi1ib3gtZm9ybSB7XHJcbiAgcGFkZGluZy1sZWZ0OiAwO1xyXG59XHJcblxyXG4ubG9naW4tYm94LWN0IC5sb2dpbi1ib3gtdGl0bGUgLmFjY291bnQtYm94IHtcclxuICBtYXJnaW4tcmlnaHQ6IDA7XHJcbn1cclxuXHJcbi5sb2dpbi1ib3gtY3QgLmxvZ2luLWJveC1mb3JtIC5hY2NvdW50LWJveCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDA7XHJcbn1cclxuXHJcblxyXG4ubG9naW4tYm94LXRpdGxlIC5hY2NvdW50LWJveCB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgd2hpdGUgMzAlLCByZ2IoMTAyLCAxMjYsIDIzNCwgMC41KSA1MCUpLCB1cmwoL2Fzc2V0cy9pbWcvbG9naW4tcGFnZS9sb2dpbi1iZy1pbWctMS5wbmcpO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHdoaXRlIDMwJSwgcmdiKDEwMiwgMTI2LCAyMzQsIDAuNSkgNTAlKSwgdXJsKHNyYy9hc3NldHMvaW1nL2xvZ2luLXBhZ2UvbG9naW4tYmctaW1nLTEucG5nKTtcclxuICAvKiBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7ICovXHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcblxyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBSaXBwbGUgRWZmZWN0IEJ1dHRvbiAvLyBTdGFydCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuLmJ0bi1yaXBwbGUge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGFuaW1hdGUge1xyXG5cdDAlIFxyXG5cdHtcclxuXHRcdHdpZHRoOiAwcHg7XHJcblx0XHRoZWlnaHQ6IDBweDtcclxuXHRcdG9wYWNpdHk6IDAuNTtcclxuXHR9XHJcblx0MTAwJVxyXG5cdHtcclxuXHRcdHdpZHRoOiA3MDBweDtcclxuXHRcdGhlaWdodDogNzAwcHg7XHJcblx0XHRvcGFjaXR5OiAwO1xyXG5cdH1cclxufVxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFJpcHBsZSBFZmZlY3QgQnV0dG9uIC8vIEVuZCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EmployeeService } from 'src/app/all-modules/employees/services/employee.service';\r\nimport { Login } from '../../models/login';\r\nimport { LoginService } from '../../services/login.service';\r\nimport { delay } from \"rxjs/operators\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  id!: string;\r\n  isAddMode!: boolean;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private hrcremp:EmployeeService,\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    this.initializeForm();\r\n    this.initButtonRippleEffect();\r\n    if(this.loginService.isLoggedIn){\r\n      this.router.navigate(['dashboard']);\r\n    }\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  initializeForm(){\r\n    \r\n      this.loginForm=this.formBuilder.group({\r\n        username:[\"\",Validators.required],\r\n        password: ['', [Validators.minLength(4),  Validators.required]],\r\n      });\r\n  }\r\n\r\n\r\n\r\n  async onSubmit(){\r\n\r\n    this.submitted = true;\r\n    this.loading = true;\r\n    \r\n    if(this.loginForm.invalid) return;\r\n    let loginData :Login=Object.assign(this.loginForm.value);\r\n    console.log(\"Above Generate Token\");\r\n    this.loginService.generateToken(loginData).pipe(delay(1300)).subscribe((data:any) =>{\r\n      console.log(\"Inside Generate Token\");\r\n       //login...\r\n       this.loginService.loginUser(data.token);\r\n       this.loginService.getCurrentUser().subscribe((user:any)=>{\r\n        //  return;\r\n         console.log(\"Inside Current User\");\r\n         \r\n           this.loginService.setUser(user);\r\n           if(this.loginService.getUserRole()==\"ROLE_USER\"){\r\n            console.log(\"Inside Fetching ROLE\");\r\n            this.loading = false;\r\n            // this.toastr.success('You are now authenticated','success');\r\n            this.toastr.success('You are now authenticated','Success', { positionClass:'toast-custom' })\r\n             this.router.navigate(['dashboard']);\r\n             this.loginService.loginStatusSubject.next(true);\r\n            \r\n           }else if((this.loginService.getSuperAdminRole().authority==\"ROLE_SUPER_ADMIN\") || (this.loginService.getAdminRole().authority==\"ROLE_ADMIN\")){\r\n            this.loading = false;\r\n             this.router.navigate(['admindashboard']);\r\n             this.loginService.loginStatusSubject.next(true);\r\n           }else{\r\n            this.loading = false;\r\n             this.loginService.logout();\r\n           }\r\n         }\r\n       );\r\n     },\r\n     (error) => {\r\n      this.loading = false;\r\n       console.log('Error !');\r\n       console.log(error);\r\n       this.toastr.error(''+error.error.message);\r\n     })\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n  initButtonRippleEffect(){\r\n\r\n    var createRipple = function(e){\r\n\r\n      const button = e.currentTarget;\r\n      let x = e.clientX - e.target.getBoundingClientRect().left;\r\n      let y = e.clientY - e.target.getBoundingClientRect().top;\r\n       // Create span element\r\n       let ripple = document.createElement(\"span\");\r\n       // Position the span element\r\n       ripple.style.cssText = \"position: absolute; background: #fff; transform: translate(-50%, -50%); pointer-events: none; border-radius: 50%; animation: animate 0.8s linear infinite;\";\r\n       ripple.style.left = `${x}px`;\r\n       ripple.style.top = `${y}px`;\r\n       // Add span to the button \r\n       button.appendChild(ripple);\r\n       // Remove span after 0.3s\r\n        setTimeout(() => {\r\n              ripple.remove();\r\n        }, 800);\r\n \r\n   }\r\n\r\n   const elements = document.querySelectorAll('.btn-ripple') as any as Array<HTMLElement>\r\n   elements.forEach(element => {\r\n    element.addEventListener('click', function(e){\r\n      createRipple(e);\r\n    });\r\n   });\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lockscreen',\r\n  templateUrl: './lockscreen.component.html',\r\n  styleUrls: ['./lockscreen.component.css']\r\n})\r\nexport class LockscreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { retry } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  public baseUrl = environment.baseUrl;\n\n  constructor(private http:HttpClient) { }\n\n  // Get Employee  Api Call\n  public getEmployees(){\n    return this.http.get(`${this.baseUrl}/hrCrEmp/empList`);\n    \n  }\n\n  // get empList list view \n  public getEmpListView(apiURL, queryParams){\n    return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n  }\n\n  // Get Employee via paginations\n  public sendGetRequest(apiURL, queryParams){\n    console.log(\"@sendGetRequest\");\n    return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n\n  }\n\n  // create HrCrEmp  Api Call\n  public createEmploy (emp){\n    return this.http.post(`${this.baseUrl}/hrCrEmp/create`,emp);\n  }\n\n  //update HrCrEmp Api Call\n  public updateEmploy (data){\n    // return this.http.put(`${baseUrl}/hrCrEmp/update`, data);\n    return this.http.put(`${this.baseUrl}/hrCrEmp/edit`, data);\n  }\n\n  // Get employee By id \n  public getEmployeeById(id){\n    return this.http.get(`${this.baseUrl}/hrCrEmp/get/${id}`);\n    //return this.http.get(`${baseUrl}/hrCrEmp/get/${id}`);\n  }\n\n  // Get employee By id \n  public findEmployeeById(id){\n    return this.http.get(`${this.baseUrl}/hrCrEmp/find/${id}`);\n    //return this.http.get(`${baseUrl}/hrCrEmp/get/${id}`);\n  }\n\n  //get employee by loginCode\n  public getEmployeeByLoginCode(loginCode){\n    return this.http.get(`${this.baseUrl}/hrCrEmp/findByLoginCode/${loginCode}`);\n  }\n\n   //upload profile image file\n   public uploadProfileImage(id,formData){\n    return  this.http.post<any>(`${this.baseUrl}/multimedia/profile/${id}`,formData);\n    \n  }\n\n  \n  // Get ALKP Search By Keyword Api Call\n  public getAlkpSearchByKeyword(keyword){\n    return this.http.get(`${this.baseUrl}/alkp/search/${keyword}`);\n  }\n\n\n  //save employee assignemnt data \n  public saveEmployeeAssignemntData(data){\n    return this.http.post(`${this.baseUrl}/hrCrEmpAssgnmnt/create`,data);\n  }\n\n   //save employee assignemnt data \n  //  public saveEmployeeAssignemntData2(data){\n  //   return this.http.post(`${baseUrl}/hrCrEmpAssgnmnt/save`,data);\n  // }\n\n  //update employeeAssignment \n  public updateEmployeeAssignment(data){\n    return this.http.put(`${this.baseUrl}/hrCrEmpAssgnmnt/edit`,data);\n  }\n\n  // get last assignment by HrCrEmpId\n  public getLastAssignmentByHrCrEmpId(id){\n    return this.http.get(`${this.baseUrl}/hrCrEmpAssgnmnt/getByHrCrEmp/${id}`);\n  }\n\n  // get employee assignment By Id \n  public getEmployeeAssignmentByHrCrEmpId(id){\n    return this.http.get(`${this.baseUrl}/hrCrEmpAssgnmnt/getByHrCrEmpId/${id}`);\n  }\n \n\n  //save or update emp bank and payroll tabs data \n  public saveOrUpdateBankAndPayroll(data){\n    return this.http.post(`${this.baseUrl}/hrCrEmpAssgnmnt/saveBankAndPayroll`,data);\n  }\n\n  // get designation\n  public getDesignations(){\n    return this.http.get(`${this.baseUrl}/designation/getAll`);\n  }\n\n  \n\n  // Get All ALKP Api Call \n  \n\n\n  public getALLDivisions(id){\n    return this.http.get(`${this.baseUrl}/address/division/${id}`);\n  }\n\n  public fetchAllDivision(){\n    return this.http.get(`${this.baseUrl}/address/division/getAll`);\n  }\n\n  public getDistrictByDivId(id){\n    return this.http.get(`${this.baseUrl}/address/division/${id}`);\n  }\n\n\n  public getAllDistrict(apiURL, queryParams){\n    console.log(\"@getAllDistrict\");\n    return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n  }\n\n  public getAllUpazila(apiURL, queryParams){\n    console.log(\"@getAllUpazila\");\n    return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n  }\n\n  public getAllUnions(apiURL, queryParams){\n    console.log(\"@sendGetRequest\");\n    return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n  }\n\n  // save hrCrEmpEdu informations\n  public saveHrCrEmpEdu(data) {\n    return this.http.post(`${this.baseUrl}/hrCrEmpEdu/create`,data);\n  }\n\n  //find by empId\n  public findhrCrEmpEduByEmpId(empId){\n    return this.http.get(`${this.baseUrl}/hrCrEmpEdu/find/${empId}`);\n  }\n\n  //find byId\n  public findhrCrEmpEduById(id){\n    return this.http.get(`${this.baseUrl}/hrCrEmpEdu/get/${id}`);\n  }\n\n  //edit employee education \n  public edithrCrEmpEducation(data){\n    return this.http.put(`${this.baseUrl}/hrCrEmpEdu/edit`, data);\n  }\n\n  //delete emp education\n  public deleteHrCrEmpEducation(id){\n    return this.http.delete(`${this.baseUrl}/hrCrEmpEdu/delete/${id}`);\n  }\n\n\n    //Get Raw Attendance data from Device\n\n    public getAllRawAttendanceData()\n    {\n      return this.http.get(`${this.baseUrl}/attn/findAllBySrcType`);\n    }\n\n    public getAllRawAttendanceData2(apiURL, queryParams)\n    {\n      return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n    }\n   \n  \n    //Post viaHrAttn\n    public createAttnViaHr (data){\n      return this.http.post(`${this.baseUrl}/AttnViaHr/save`, data);\n    }\n    //Get viaHrAttn Attendance data from\n  \n    public getAllViaHrAttnData()\n    {\n      return this.http.get(`${this.baseUrl}/AttnViaHr/findAllBySrcType`);\n    }\n\n    public getAllViaHrAttnData2(apiURL, queryParams)\n    {\n      return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n    }\n\n    public getSearchAttn(apiURL, queryParams)\n    {\n      return this.http.get(apiURL, {params: queryParams}).pipe( retry(3));\n    }\n  \n\n    //Leave related api\n\n    //crearte leave tenc\n    public createLeave (data){\n      return this.http.post(`${this.baseUrl}/leaveTrnse/save`, data);\n    }\n\n\n   \n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.css']\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { first } from 'rxjs/operators';\r\nimport { MustMatch } from 'src/app/utils/_helpers';\r\nimport { LoginService } from '../../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form!: FormGroup;\r\n  id!: string;\r\n  isAddMode!: boolean;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private loginService: LoginService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private toastr:ToastrService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.isAddMode = !this.id;\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm() {\r\n    const formOptions: AbstractControlOptions = { validators: MustMatch('password', 'confirmPassword') };\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      phone: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n     // role: ['', Validators.required],\r\n      password: ['', [Validators.minLength(4), Validators.required]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, formOptions);\r\n\r\n    if (!this.isAddMode) {\r\n      this.loginService.getById(this.id)\r\n        .pipe(first())\r\n        .subscribe(x => this.form.patchValue(x));\r\n    }\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.form.controls; }\r\n\r\n  onSubmit() {\r\n\r\n   \r\n    this.submitted = true;\r\n    console.log(\"OK\"+this.isAddMode);\r\n    // stop here if form is invalid\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n  \r\n     \r\n    this.loading = true;\r\n    if (this.isAddMode) {\r\n      this.createUser();\r\n    }\r\n  }\r\n\r\n  private createUser() {\r\n    this.loginService.register(this.form.value)\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.toastr.success(\"Successfully Registered\");\r\n        this.router.navigate(['../'], { relativeTo: this.route });\r\n      },(error)=>{\r\n        this.toastr.error(error.error.message);\r\n      })\r\n      .add(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\";","export default \"<!-- Main Wrapper -->\\r\\n<div class=\\\"main-wrapper\\\">\\r\\n    <div class=\\\"account-content\\\">\\r\\n        <a routerLink = \\\"/login/joblist\\\" class=\\\"btn btn-primary apply-btn\\\">Apply Job</a>\\r\\n        <div class=\\\"container\\\">\\r\\n\\r\\n            <!-- Account Logo -->\\r\\n            <div class=\\\"account-logo\\\">\\r\\n                <a routerLink=\\\"/dashboard\\\"><img src=\\\"assets/img/logo2.png\\\" alt=\\\"Dreamguy's Technologies\\\"></a>\\r\\n            </div>\\r\\n            <!-- /Account Logo -->\\r\\n\\r\\n            <div class=\\\"account-box\\\">\\r\\n                <div class=\\\"account-wrapper\\\">\\r\\n                    <h3 class=\\\"account-title\\\">OTP</h3>\\r\\n                    <p class=\\\"account-subtitle\\\">Verification your account</p>\\r\\n\\r\\n                    <!-- Account Form -->\\r\\n                    <form action=\\\"dashboard\\\">\\r\\n                        <div class=\\\"otp-wrap\\\">\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"0\\\" maxlength=\\\"1\\\" class=\\\"otp-input\\\">\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"0\\\" maxlength=\\\"1\\\" class=\\\"otp-input\\\">\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"0\\\" maxlength=\\\"1\\\" class=\\\"otp-input\\\">\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"0\\\" maxlength=\\\"1\\\" class=\\\"otp-input\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <button class=\\\"btn btn-primary account-btn\\\" type=\\\"submit\\\">Enter</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"account-footer\\\">\\r\\n                            <p>Not yet received? <a >Resend OTP</a></p>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    <!-- /Account Form -->\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Main Wrapper -->\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ForgotComponent } from './components/forgot/forgot.component';\r\nimport { OtpComponent } from './components/otp/otp.component';\r\nimport { LockscreenComponent } from './components/lockscreen/lockscreen.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, ForgotComponent, RegisterComponent, OtpComponent, LockscreenComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    \r\n   \r\n    \r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","export default \"<!-- Main Wrapper -->\\r\\n<div class=\\\"main-wrapper\\\">\\r\\n    <div class=\\\"account-content\\\">\\r\\n        <a routerLink = \\\"/login/joblist\\\" class=\\\"btn btn-primary apply-btn\\\">Apply Job</a>\\r\\n        <div class=\\\"container\\\">\\r\\n\\r\\n            <!-- Account Logo -->\\r\\n            <div class=\\\"account-logo\\\">\\r\\n                <a routerLink=\\\"/dashboard\\\"><img src=\\\"assets/img/logo2.png\\\" alt=\\\"Dreamguy's Technologies\\\"></a>\\r\\n            </div>\\r\\n            <!-- /Account Logo -->\\r\\n\\r\\n            <div class=\\\"account-box\\\">\\r\\n                <div class=\\\"account-wrapper\\\">\\r\\n\\r\\n                    <!-- Lock User Img -->\\r\\n                    <div class=\\\"lock-user\\\">\\r\\n                        <img alt=\\\"\\\" src=\\\"assets/img/profiles/avatar-2.jpg\\\" class=\\\"rounded-circle\\\">\\r\\n                        <h4>John Doe</h4>\\r\\n                    </div>\\r\\n                    <!-- /Lock User Img -->\\r\\n\\r\\n                    <!-- Account Form -->\\r\\n                    <form action=\\\"dashboard\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Password</label>\\r\\n                            <input class=\\\"form-control\\\" type=\\\"password\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group text-center\\\">\\r\\n                            <button class=\\\"btn btn-primary account-btn\\\" type=\\\"submit\\\">Enter</button>\\r\\n                        </div>\\r\\n                        <div class=\\\"account-footer\\\">\\r\\n                            <p>Sign in as a different user? <a routerLink=\\\"/login/register\\\">Login</a></p>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                    <!-- /Account Form -->\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /Main Wrapper -->\";","export default \"<div class=\\\"account-content\\\">\\r\\n    <!-- <a routerLink = \\\"/login/joblist\\\" class=\\\"btn btn-primary apply-btn\\\">Apply Job</a> -->\\r\\n    <div class=\\\"center-screen\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n    \\r\\n    \\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div style=\\\"height:0px;\\\">\\r\\n                        <!-- for background image display helper -->\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-12\\\">\\r\\n\\r\\n                    <div class=\\\"row login-box-ct\\\">\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-6 login-box-title\\\">\\r\\n                    \\r\\n                            <div class=\\\"account-box\\\">\\r\\n                                <div class=\\\"account-wrapper\\\">\\r\\n                                    <!-- Account Logo -->\\r\\n                                    <div class=\\\"account-logo\\\">\\r\\n                                        <a href=\\\"javascript:\\\"><img src=\\\"assets/img/w_logo.png\\\" alt=\\\"Dreamguy's Technologies\\\"></a>\\r\\n                                    </div>\\r\\n                                    <h3 class=\\\"company-title\\\">Digi-Tech Industries Ltd</h3>\\r\\n                                    <h4 class=\\\"account-title\\\">( Smart HRMS )</h4>\\r\\n                                    <p class=\\\"account-subtitle\\\">Manage Your Resource Smartly</p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"col-6 login-box-form\\\">\\r\\n                        \\r\\n                            <div class=\\\"account-box\\\">\\r\\n                                <div class=\\\"account-wrapper\\\">\\r\\n\\r\\n                                    <h3 class=\\\"account-title\\\">Login</h3>\\r\\n                                    <p class=\\\"account-subtitle\\\">Access your account</p>\\r\\n                            \\r\\n                                    <!-- Account Form -->\\r\\n                                    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"loginForm\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label>Username</label>\\r\\n                                            <input class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" formControlName=\\\"username\\\"  type=\\\"text\\\">\\r\\n                                            <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <div class=\\\"row\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label>Password</label>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-auto\\\">\\r\\n                                                    <!-- <a class=\\\"text-muted\\\" routerLink = \\\"/login/forgot\\\"> -->\\r\\n                                                        <!-- Forgot password? -->\\r\\n                                                    <!-- </a> -->\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <input class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" formControlName=\\\"password\\\" formControlName=\\\"password\\\" type=\\\"password\\\">\\r\\n                                            <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                                <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\r\\n                                                <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 4 characters</div>\\r\\n                                            </div>\\r\\n                                        \\r\\n                                        </div>\\r\\n                                        <div class=\\\"form-group text-center\\\">\\r\\n                                            <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary account-btn btn-ripple\\\" type=\\\"submit\\\">\\r\\n                                                <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                                                    Login\\r\\n                                            </button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"account-footer\\\">\\r\\n                                            <!-- <p>Don't have an account yet? <a routerLink = \\\"/login/register\\\">Register</a></p> -->\\r\\n                                        </div>\\r\\n                                    </form>\\r\\n                                    <!-- /Account Form -->\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ForgotComponent } from './components/forgot/forgot.component';\r\nimport { LockscreenComponent } from './components/lockscreen/lockscreen.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { OtpComponent } from './components/otp/otp.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '' , component: LoginComponent },\r\n    {path:'forgot', component:ForgotComponent},\r\n    {path:'register',component:RegisterComponent},\r\n    {path:'otp',component:OtpComponent},\r\n    {path:'lockscreen',component:LockscreenComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2Nrc2NyZWVuLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OtpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3Jnb3QuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"account-content\\\">\\r\\n    <a routerLink = \\\"/login/joblist\\\" class=\\\"btn btn-primary apply-btn\\\">Apply Job</a>\\r\\n    <div class=\\\"container\\\">\\r\\n\\r\\n        <!-- Account Logo -->\\r\\n        <div class=\\\"account-logo\\\">\\r\\n            <a routerLink=\\\"/dashboard\\\"><img src=\\\"assets/img/logo2.png\\\" alt=\\\"Dreamguy's Technologies\\\"></a>\\r\\n        </div>\\r\\n        <!-- /Account Logo -->\\r\\n\\r\\n        <div class=\\\"account-box\\\">\\r\\n            <div class=\\\"account-wrapper\\\">\\r\\n                <h3 class=\\\"account-title\\\">Forgot Password?</h3>\\r\\n                <p class=\\\"account-subtitle\\\">Enter your email to get a password reset link</p>\\r\\n\\r\\n                <!-- Account Form -->\\r\\n                <form>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label>Email Address</label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group text-center\\\">\\r\\n                        <button class=\\\"btn btn-primary account-btn\\\" type=\\\"submit\\\">Reset Password</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"account-footer\\\">\\r\\n                        <p>Remember your password? <a routerLink = \\\"/login/login\\\">Login</a></p>\\r\\n                    </div>\\r\\n                </form>\\r\\n                <!-- /Account Form -->\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvdHAuY29tcG9uZW50LmNzcyJ9 */\";"]}